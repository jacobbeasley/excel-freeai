{"version":3,"file":"functions.js","mappings":"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","sources":["webpack://excel-custom-functions-js/./node_modules/openai/internal/qs/formats.mjs","webpack://excel-custom-functions-js/./node_modules/openai/internal/qs/utils.mjs","webpack://excel-custom-functions-js/./node_modules/openai/internal/qs/stringify.mjs","webpack://excel-custom-functions-js/./node_modules/openai/version.mjs","webpack://excel-custom-functions-js/./node_modules/openai/_shims/registry.mjs","webpack://excel-custom-functions-js/./node_modules/openai/_shims/MultipartBody.mjs","webpack://excel-custom-functions-js/./node_modules/openai/_shims/index.mjs","webpack://excel-custom-functions-js/./node_modules/openai/_shims/web-runtime.mjs","webpack://excel-custom-functions-js/./node_modules/openai/error.mjs","webpack://excel-custom-functions-js/./node_modules/openai/internal/decoders/line.mjs","webpack://excel-custom-functions-js/./node_modules/openai/internal/stream-utils.mjs","webpack://excel-custom-functions-js/./node_modules/openai/streaming.mjs","webpack://excel-custom-functions-js/./node_modules/openai/uploads.mjs","webpack://excel-custom-functions-js/./node_modules/openai/core.mjs","webpack://excel-custom-functions-js/./node_modules/openai/resource.mjs","webpack://excel-custom-functions-js/./node_modules/openai/resources/completions.mjs","webpack://excel-custom-functions-js/./node_modules/openai/resources/chat/completions/messages.mjs","webpack://excel-custom-functions-js/./node_modules/openai/pagination.mjs","webpack://excel-custom-functions-js/./node_modules/openai/resources/chat/completions/completions.mjs","webpack://excel-custom-functions-js/./node_modules/openai/resources/chat/chat.mjs","webpack://excel-custom-functions-js/./node_modules/openai/resources/embeddings.mjs","webpack://excel-custom-functions-js/./node_modules/openai/resources/files.mjs","webpack://excel-custom-functions-js/./node_modules/openai/resources/images.mjs","webpack://excel-custom-functions-js/./node_modules/openai/resources/audio/speech.mjs","webpack://excel-custom-functions-js/./node_modules/openai/resources/audio/transcriptions.mjs","webpack://excel-custom-functions-js/./node_modules/openai/resources/audio/translations.mjs","webpack://excel-custom-functions-js/./node_modules/openai/resources/audio/audio.mjs","webpack://excel-custom-functions-js/./node_modules/openai/resources/moderations.mjs","webpack://excel-custom-functions-js/./node_modules/openai/resources/models.mjs","webpack://excel-custom-functions-js/./node_modules/openai/resources/fine-tuning/jobs/checkpoints.mjs","webpack://excel-custom-functions-js/./node_modules/openai/resources/fine-tuning/jobs/jobs.mjs","webpack://excel-custom-functions-js/./node_modules/openai/resources/fine-tuning/fine-tuning.mjs","webpack://excel-custom-functions-js/./node_modules/openai/resources/vector-stores/files.mjs","webpack://excel-custom-functions-js/./node_modules/openai/resources/vector-stores/file-batches.mjs","webpack://excel-custom-functions-js/./node_modules/openai/lib/Util.mjs","webpack://excel-custom-functions-js/./node_modules/openai/resources/vector-stores/vector-stores.mjs","webpack://excel-custom-functions-js/./node_modules/openai/resources/beta/assistants.mjs","webpack://excel-custom-functions-js/./node_modules/openai/lib/RunnableFunction.mjs","webpack://excel-custom-functions-js/./node_modules/openai/lib/chatCompletionUtils.mjs","webpack://excel-custom-functions-js/./node_modules/openai/lib/EventStream.mjs","webpack://excel-custom-functions-js/./node_modules/openai/lib/parser.mjs","webpack://excel-custom-functions-js/./node_modules/openai/lib/AbstractChatCompletionRunner.mjs","webpack://excel-custom-functions-js/./node_modules/openai/lib/ChatCompletionRunner.mjs","webpack://excel-custom-functions-js/./node_modules/openai/_vendor/partial-json-parser/parser.mjs","webpack://excel-custom-functions-js/./node_modules/openai/lib/ChatCompletionStream.mjs","webpack://excel-custom-functions-js/./node_modules/openai/lib/ChatCompletionStreamingRunner.mjs","webpack://excel-custom-functions-js/./node_modules/openai/resources/beta/chat/completions.mjs","webpack://excel-custom-functions-js/./node_modules/openai/resources/beta/chat/chat.mjs","webpack://excel-custom-functions-js/./node_modules/openai/resources/beta/realtime/sessions.mjs","webpack://excel-custom-functions-js/./node_modules/openai/resources/beta/realtime/transcription-sessions.mjs","webpack://excel-custom-functions-js/./node_modules/openai/resources/beta/realtime/realtime.mjs","webpack://excel-custom-functions-js/./node_modules/openai/lib/AssistantStream.mjs","webpack://excel-custom-functions-js/./node_modules/openai/resources/beta/threads/messages.mjs","webpack://excel-custom-functions-js/./node_modules/openai/resources/beta/threads/runs/steps.mjs","webpack://excel-custom-functions-js/./node_modules/openai/resources/beta/threads/runs/runs.mjs","webpack://excel-custom-functions-js/./node_modules/openai/resources/beta/threads/threads.mjs","webpack://excel-custom-functions-js/./node_modules/openai/resources/beta/beta.mjs","webpack://excel-custom-functions-js/./node_modules/openai/resources/batches.mjs","webpack://excel-custom-functions-js/./node_modules/openai/resources/uploads/parts.mjs","webpack://excel-custom-functions-js/./node_modules/openai/resources/uploads/uploads.mjs","webpack://excel-custom-functions-js/./node_modules/openai/lib/ResponsesParser.mjs","webpack://excel-custom-functions-js/./node_modules/openai/resources/responses/input-items.mjs","webpack://excel-custom-functions-js/./node_modules/openai/lib/responses/ResponseStream.mjs","webpack://excel-custom-functions-js/./node_modules/openai/index.mjs","webpack://excel-custom-functions-js/./node_modules/openai/resources/responses/responses.mjs","webpack://excel-custom-functions-js/./src/functions/functions.js"],"sourcesContent":["export const default_format = 'RFC3986';\nexport const formatters = {\n    RFC1738: (v) => String(v).replace(/%20/g, '+'),\n    RFC3986: (v) => String(v),\n};\nexport const RFC1738 = 'RFC1738';\nexport const RFC3986 = 'RFC3986';\n//# sourceMappingURL=formats.mjs.map","import { RFC1738 } from \"./formats.mjs\";\nconst has = Object.prototype.hasOwnProperty;\nconst is_array = Array.isArray;\nconst hex_table = (() => {\n    const array = [];\n    for (let i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n    return array;\n})();\nfunction compact_queue(queue) {\n    while (queue.length > 1) {\n        const item = queue.pop();\n        if (!item)\n            continue;\n        const obj = item.obj[item.prop];\n        if (is_array(obj)) {\n            const compacted = [];\n            for (let j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n            // @ts-ignore\n            item.obj[item.prop] = compacted;\n        }\n    }\n}\nfunction array_to_object(source, options) {\n    const obj = options && options.plainObjects ? Object.create(null) : {};\n    for (let i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n    return obj;\n}\nexport function merge(target, source, options = {}) {\n    if (!source) {\n        return target;\n    }\n    if (typeof source !== 'object') {\n        if (is_array(target)) {\n            target.push(source);\n        }\n        else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) ||\n                !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        }\n        else {\n            return [target, source];\n        }\n        return target;\n    }\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n    let mergeTarget = target;\n    if (is_array(target) && !is_array(source)) {\n        // @ts-ignore\n        mergeTarget = array_to_object(target, options);\n    }\n    if (is_array(target) && is_array(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                const targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                }\n                else {\n                    target.push(item);\n                }\n            }\n            else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n    return Object.keys(source).reduce(function (acc, key) {\n        const value = source[key];\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        }\n        else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n}\nexport function assign_single_source(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n}\nexport function decode(str, _, charset) {\n    const strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    }\n    catch (e) {\n        return strWithoutPlus;\n    }\n}\nconst limit = 1024;\nexport const encode = (str, _defaultEncoder, charset, _kind, format) => {\n    // This code was originally written by Brian White for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n    let string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    }\n    else if (typeof str !== 'string') {\n        string = String(str);\n    }\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n    let out = '';\n    for (let j = 0; j < string.length; j += limit) {\n        const segment = string.length >= limit ? string.slice(j, j + limit) : string;\n        const arr = [];\n        for (let i = 0; i < segment.length; ++i) {\n            let c = segment.charCodeAt(i);\n            if (c === 0x2d || // -\n                c === 0x2e || // .\n                c === 0x5f || // _\n                c === 0x7e || // ~\n                (c >= 0x30 && c <= 0x39) || // 0-9\n                (c >= 0x41 && c <= 0x5a) || // a-z\n                (c >= 0x61 && c <= 0x7a) || // A-Z\n                (format === RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n            ) {\n                arr[arr.length] = segment.charAt(i);\n                continue;\n            }\n            if (c < 0x80) {\n                arr[arr.length] = hex_table[c];\n                continue;\n            }\n            if (c < 0x800) {\n                arr[arr.length] = hex_table[0xc0 | (c >> 6)] + hex_table[0x80 | (c & 0x3f)];\n                continue;\n            }\n            if (c < 0xd800 || c >= 0xe000) {\n                arr[arr.length] =\n                    hex_table[0xe0 | (c >> 12)] + hex_table[0x80 | ((c >> 6) & 0x3f)] + hex_table[0x80 | (c & 0x3f)];\n                continue;\n            }\n            i += 1;\n            c = 0x10000 + (((c & 0x3ff) << 10) | (segment.charCodeAt(i) & 0x3ff));\n            arr[arr.length] =\n                hex_table[0xf0 | (c >> 18)] +\n                    hex_table[0x80 | ((c >> 12) & 0x3f)] +\n                    hex_table[0x80 | ((c >> 6) & 0x3f)] +\n                    hex_table[0x80 | (c & 0x3f)];\n        }\n        out += arr.join('');\n    }\n    return out;\n};\nexport function compact(value) {\n    const queue = [{ obj: { o: value }, prop: 'o' }];\n    const refs = [];\n    for (let i = 0; i < queue.length; ++i) {\n        const item = queue[i];\n        // @ts-ignore\n        const obj = item.obj[item.prop];\n        const keys = Object.keys(obj);\n        for (let j = 0; j < keys.length; ++j) {\n            const key = keys[j];\n            const val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n    compact_queue(queue);\n    return value;\n}\nexport function is_regexp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n}\nexport function is_buffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n}\nexport function combine(a, b) {\n    return [].concat(a, b);\n}\nexport function maybe_map(val, fn) {\n    if (is_array(val)) {\n        const mapped = [];\n        for (let i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n}\n//# sourceMappingURL=utils.mjs.map","import { encode, is_buffer, maybe_map } from \"./utils.mjs\";\nimport { default_format, formatters } from \"./formats.mjs\";\nconst has = Object.prototype.hasOwnProperty;\nconst array_prefix_generators = {\n    brackets(prefix) {\n        return String(prefix) + '[]';\n    },\n    comma: 'comma',\n    indices(prefix, key) {\n        return String(prefix) + '[' + key + ']';\n    },\n    repeat(prefix) {\n        return String(prefix);\n    },\n};\nconst is_array = Array.isArray;\nconst push = Array.prototype.push;\nconst push_to_array = function (arr, value_or_array) {\n    push.apply(arr, is_array(value_or_array) ? value_or_array : [value_or_array]);\n};\nconst to_ISO = Date.prototype.toISOString;\nconst defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    allowEmptyArrays: false,\n    arrayFormat: 'indices',\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encodeDotInKeys: false,\n    encoder: encode,\n    encodeValuesOnly: false,\n    format: default_format,\n    formatter: formatters[default_format],\n    /** @deprecated */\n    indices: false,\n    serializeDate(date) {\n        return to_ISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false,\n};\nfunction is_non_nullish_primitive(v) {\n    return (typeof v === 'string' ||\n        typeof v === 'number' ||\n        typeof v === 'boolean' ||\n        typeof v === 'symbol' ||\n        typeof v === 'bigint');\n}\nconst sentinel = {};\nfunction inner_stringify(object, prefix, generateArrayPrefix, commaRoundTrip, allowEmptyArrays, strictNullHandling, skipNulls, encodeDotInKeys, encoder, filter, sort, allowDots, serializeDate, format, formatter, encodeValuesOnly, charset, sideChannel) {\n    let obj = object;\n    let tmp_sc = sideChannel;\n    let step = 0;\n    let find_flag = false;\n    while ((tmp_sc = tmp_sc.get(sentinel)) !== void undefined && !find_flag) {\n        // Where object last appeared in the ref tree\n        const pos = tmp_sc.get(object);\n        step += 1;\n        if (typeof pos !== 'undefined') {\n            if (pos === step) {\n                throw new RangeError('Cyclic object value');\n            }\n            else {\n                find_flag = true; // Break while\n            }\n        }\n        if (typeof tmp_sc.get(sentinel) === 'undefined') {\n            step = 0;\n        }\n    }\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    }\n    else if (obj instanceof Date) {\n        obj = serializeDate?.(obj);\n    }\n    else if (generateArrayPrefix === 'comma' && is_array(obj)) {\n        obj = maybe_map(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate?.(value);\n            }\n            return value;\n        });\n    }\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ?\n                // @ts-expect-error\n                encoder(prefix, defaults.encoder, charset, 'key', format)\n                : prefix;\n        }\n        obj = '';\n    }\n    if (is_non_nullish_primitive(obj) || is_buffer(obj)) {\n        if (encoder) {\n            const key_value = encodeValuesOnly ? prefix\n                // @ts-expect-error\n                : encoder(prefix, defaults.encoder, charset, 'key', format);\n            return [\n                formatter?.(key_value) +\n                    '=' +\n                    // @ts-expect-error\n                    formatter?.(encoder(obj, defaults.encoder, charset, 'value', format)),\n            ];\n        }\n        return [formatter?.(prefix) + '=' + formatter?.(String(obj))];\n    }\n    const values = [];\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n    let obj_keys;\n    if (generateArrayPrefix === 'comma' && is_array(obj)) {\n        // we need to join elements in\n        if (encodeValuesOnly && encoder) {\n            // @ts-expect-error values only\n            obj = maybe_map(obj, encoder);\n        }\n        obj_keys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];\n    }\n    else if (is_array(filter)) {\n        obj_keys = filter;\n    }\n    else {\n        const keys = Object.keys(obj);\n        obj_keys = sort ? keys.sort(sort) : keys;\n    }\n    const encoded_prefix = encodeDotInKeys ? String(prefix).replace(/\\./g, '%2E') : String(prefix);\n    const adjusted_prefix = commaRoundTrip && is_array(obj) && obj.length === 1 ? encoded_prefix + '[]' : encoded_prefix;\n    if (allowEmptyArrays && is_array(obj) && obj.length === 0) {\n        return adjusted_prefix + '[]';\n    }\n    for (let j = 0; j < obj_keys.length; ++j) {\n        const key = obj_keys[j];\n        const value = \n        // @ts-ignore\n        typeof key === 'object' && typeof key.value !== 'undefined' ? key.value : obj[key];\n        if (skipNulls && value === null) {\n            continue;\n        }\n        // @ts-ignore\n        const encoded_key = allowDots && encodeDotInKeys ? key.replace(/\\./g, '%2E') : key;\n        const key_prefix = is_array(obj) ?\n            typeof generateArrayPrefix === 'function' ?\n                generateArrayPrefix(adjusted_prefix, encoded_key)\n                : adjusted_prefix\n            : adjusted_prefix + (allowDots ? '.' + encoded_key : '[' + encoded_key + ']');\n        sideChannel.set(object, step);\n        const valueSideChannel = new WeakMap();\n        valueSideChannel.set(sentinel, sideChannel);\n        push_to_array(values, inner_stringify(value, key_prefix, generateArrayPrefix, commaRoundTrip, allowEmptyArrays, strictNullHandling, skipNulls, encodeDotInKeys, \n        // @ts-ignore\n        generateArrayPrefix === 'comma' && encodeValuesOnly && is_array(obj) ? null : encoder, filter, sort, allowDots, serializeDate, format, formatter, encodeValuesOnly, charset, valueSideChannel));\n    }\n    return values;\n}\nfunction normalize_stringify_options(opts = defaults) {\n    if (typeof opts.allowEmptyArrays !== 'undefined' && typeof opts.allowEmptyArrays !== 'boolean') {\n        throw new TypeError('`allowEmptyArrays` option can only be `true` or `false`, when provided');\n    }\n    if (typeof opts.encodeDotInKeys !== 'undefined' && typeof opts.encodeDotInKeys !== 'boolean') {\n        throw new TypeError('`encodeDotInKeys` option can only be `true` or `false`, when provided');\n    }\n    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n    const charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    let format = default_format;\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    const formatter = formatters[format];\n    let filter = defaults.filter;\n    if (typeof opts.filter === 'function' || is_array(opts.filter)) {\n        filter = opts.filter;\n    }\n    let arrayFormat;\n    if (opts.arrayFormat && opts.arrayFormat in array_prefix_generators) {\n        arrayFormat = opts.arrayFormat;\n    }\n    else if ('indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    }\n    else {\n        arrayFormat = defaults.arrayFormat;\n    }\n    if ('commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {\n        throw new TypeError('`commaRoundTrip` must be a boolean, or absent');\n    }\n    const allowDots = typeof opts.allowDots === 'undefined' ?\n        !!opts.encodeDotInKeys === true ?\n            true\n            : defaults.allowDots\n        : !!opts.allowDots;\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        // @ts-ignore\n        allowDots: allowDots,\n        allowEmptyArrays: typeof opts.allowEmptyArrays === 'boolean' ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,\n        arrayFormat: arrayFormat,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        commaRoundTrip: !!opts.commaRoundTrip,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encodeDotInKeys: typeof opts.encodeDotInKeys === 'boolean' ? opts.encodeDotInKeys : defaults.encodeDotInKeys,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        format: format,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        // @ts-ignore\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling,\n    };\n}\nexport function stringify(object, opts = {}) {\n    let obj = object;\n    const options = normalize_stringify_options(opts);\n    let obj_keys;\n    let filter;\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    }\n    else if (is_array(options.filter)) {\n        filter = options.filter;\n        obj_keys = filter;\n    }\n    const keys = [];\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n    const generateArrayPrefix = array_prefix_generators[options.arrayFormat];\n    const commaRoundTrip = generateArrayPrefix === 'comma' && options.commaRoundTrip;\n    if (!obj_keys) {\n        obj_keys = Object.keys(obj);\n    }\n    if (options.sort) {\n        obj_keys.sort(options.sort);\n    }\n    const sideChannel = new WeakMap();\n    for (let i = 0; i < obj_keys.length; ++i) {\n        const key = obj_keys[i];\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        push_to_array(keys, inner_stringify(obj[key], key, \n        // @ts-expect-error\n        generateArrayPrefix, commaRoundTrip, options.allowEmptyArrays, options.strictNullHandling, options.skipNulls, options.encodeDotInKeys, options.encode ? options.encoder : null, options.filter, options.sort, options.allowDots, options.serializeDate, options.format, options.formatter, options.encodeValuesOnly, options.charset, sideChannel));\n    }\n    const joined = keys.join(options.delimiter);\n    let prefix = options.addQueryPrefix === true ? '?' : '';\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        }\n        else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n    return joined.length > 0 ? prefix + joined : '';\n}\n//# sourceMappingURL=stringify.mjs.map","export const VERSION = '4.90.0'; // x-release-please-version\n//# sourceMappingURL=version.mjs.map","export let auto = false;\nexport let kind = undefined;\nexport let fetch = undefined;\nexport let Request = undefined;\nexport let Response = undefined;\nexport let Headers = undefined;\nexport let FormData = undefined;\nexport let Blob = undefined;\nexport let File = undefined;\nexport let ReadableStream = undefined;\nexport let getMultipartRequestOptions = undefined;\nexport let getDefaultAgent = undefined;\nexport let fileFromPath = undefined;\nexport let isFsReadStream = undefined;\nexport function setShims(shims, options = { auto: false }) {\n    if (auto) {\n        throw new Error(`you must \\`import 'openai/shims/${shims.kind}'\\` before importing anything else from openai`);\n    }\n    if (kind) {\n        throw new Error(`can't \\`import 'openai/shims/${shims.kind}'\\` after \\`import 'openai/shims/${kind}'\\``);\n    }\n    auto = options.auto;\n    kind = shims.kind;\n    fetch = shims.fetch;\n    Request = shims.Request;\n    Response = shims.Response;\n    Headers = shims.Headers;\n    FormData = shims.FormData;\n    Blob = shims.Blob;\n    File = shims.File;\n    ReadableStream = shims.ReadableStream;\n    getMultipartRequestOptions = shims.getMultipartRequestOptions;\n    getDefaultAgent = shims.getDefaultAgent;\n    fileFromPath = shims.fileFromPath;\n    isFsReadStream = shims.isFsReadStream;\n}\n//# sourceMappingURL=registry.mjs.map","/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */\nexport class MultipartBody {\n    constructor(body) {\n        this.body = body;\n    }\n    get [Symbol.toStringTag]() {\n        return 'MultipartBody';\n    }\n}\n//# sourceMappingURL=MultipartBody.mjs.map","/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */\nimport * as shims from './registry.mjs';\nimport * as auto from 'openai/_shims/auto/runtime';\nexport const init = () => {\n  if (!shims.kind) shims.setShims(auto.getRuntime(), { auto: true });\n};\nexport * from './registry.mjs';\n\ninit();\n","import { MultipartBody } from \"./MultipartBody.mjs\";\nexport function getRuntime({ manuallyImported } = {}) {\n    const recommendation = manuallyImported ?\n        `You may need to use polyfills`\n        : `Add one of these imports before your first \\`import … from 'openai'\\`:\n- \\`import 'openai/shims/node'\\` (if you're running on Node)\n- \\`import 'openai/shims/web'\\` (otherwise)\n`;\n    let _fetch, _Request, _Response, _Headers;\n    try {\n        // @ts-ignore\n        _fetch = fetch;\n        // @ts-ignore\n        _Request = Request;\n        // @ts-ignore\n        _Response = Response;\n        // @ts-ignore\n        _Headers = Headers;\n    }\n    catch (error) {\n        throw new Error(`this environment is missing the following Web Fetch API type: ${error.message}. ${recommendation}`);\n    }\n    return {\n        kind: 'web',\n        fetch: _fetch,\n        Request: _Request,\n        Response: _Response,\n        Headers: _Headers,\n        FormData: \n        // @ts-ignore\n        typeof FormData !== 'undefined' ? FormData : (class FormData {\n            // @ts-ignore\n            constructor() {\n                throw new Error(`file uploads aren't supported in this environment yet as 'FormData' is undefined. ${recommendation}`);\n            }\n        }),\n        Blob: typeof Blob !== 'undefined' ? Blob : (class Blob {\n            constructor() {\n                throw new Error(`file uploads aren't supported in this environment yet as 'Blob' is undefined. ${recommendation}`);\n            }\n        }),\n        File: \n        // @ts-ignore\n        typeof File !== 'undefined' ? File : (class File {\n            // @ts-ignore\n            constructor() {\n                throw new Error(`file uploads aren't supported in this environment yet as 'File' is undefined. ${recommendation}`);\n            }\n        }),\n        ReadableStream: \n        // @ts-ignore\n        typeof ReadableStream !== 'undefined' ? ReadableStream : (class ReadableStream {\n            // @ts-ignore\n            constructor() {\n                throw new Error(`streaming isn't supported in this environment yet as 'ReadableStream' is undefined. ${recommendation}`);\n            }\n        }),\n        getMultipartRequestOptions: async (\n        // @ts-ignore\n        form, opts) => ({\n            ...opts,\n            body: new MultipartBody(form),\n        }),\n        getDefaultAgent: (url) => undefined,\n        fileFromPath: () => {\n            throw new Error('The `fileFromPath` function is only supported in Node. See the README for more details: https://www.github.com/openai/openai-node#file-uploads');\n        },\n        isFsReadStream: (value) => false,\n    };\n}\n//# sourceMappingURL=web-runtime.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { castToError } from \"./core.mjs\";\nexport class OpenAIError extends Error {\n}\nexport class APIError extends OpenAIError {\n    constructor(status, error, message, headers) {\n        super(`${APIError.makeMessage(status, error, message)}`);\n        this.status = status;\n        this.headers = headers;\n        this.request_id = headers?.['x-request-id'];\n        this.error = error;\n        const data = error;\n        this.code = data?.['code'];\n        this.param = data?.['param'];\n        this.type = data?.['type'];\n    }\n    static makeMessage(status, error, message) {\n        const msg = error?.message ?\n            typeof error.message === 'string' ?\n                error.message\n                : JSON.stringify(error.message)\n            : error ? JSON.stringify(error)\n                : message;\n        if (status && msg) {\n            return `${status} ${msg}`;\n        }\n        if (status) {\n            return `${status} status code (no body)`;\n        }\n        if (msg) {\n            return msg;\n        }\n        return '(no status code or body)';\n    }\n    static generate(status, errorResponse, message, headers) {\n        if (!status || !headers) {\n            return new APIConnectionError({ message, cause: castToError(errorResponse) });\n        }\n        const error = errorResponse?.['error'];\n        if (status === 400) {\n            return new BadRequestError(status, error, message, headers);\n        }\n        if (status === 401) {\n            return new AuthenticationError(status, error, message, headers);\n        }\n        if (status === 403) {\n            return new PermissionDeniedError(status, error, message, headers);\n        }\n        if (status === 404) {\n            return new NotFoundError(status, error, message, headers);\n        }\n        if (status === 409) {\n            return new ConflictError(status, error, message, headers);\n        }\n        if (status === 422) {\n            return new UnprocessableEntityError(status, error, message, headers);\n        }\n        if (status === 429) {\n            return new RateLimitError(status, error, message, headers);\n        }\n        if (status >= 500) {\n            return new InternalServerError(status, error, message, headers);\n        }\n        return new APIError(status, error, message, headers);\n    }\n}\nexport class APIUserAbortError extends APIError {\n    constructor({ message } = {}) {\n        super(undefined, undefined, message || 'Request was aborted.', undefined);\n    }\n}\nexport class APIConnectionError extends APIError {\n    constructor({ message, cause }) {\n        super(undefined, undefined, message || 'Connection error.', undefined);\n        // in some environments the 'cause' property is already declared\n        // @ts-ignore\n        if (cause)\n            this.cause = cause;\n    }\n}\nexport class APIConnectionTimeoutError extends APIConnectionError {\n    constructor({ message } = {}) {\n        super({ message: message ?? 'Request timed out.' });\n    }\n}\nexport class BadRequestError extends APIError {\n}\nexport class AuthenticationError extends APIError {\n}\nexport class PermissionDeniedError extends APIError {\n}\nexport class NotFoundError extends APIError {\n}\nexport class ConflictError extends APIError {\n}\nexport class UnprocessableEntityError extends APIError {\n}\nexport class RateLimitError extends APIError {\n}\nexport class InternalServerError extends APIError {\n}\nexport class LengthFinishReasonError extends OpenAIError {\n    constructor() {\n        super(`Could not parse response content as the length limit was reached`);\n    }\n}\nexport class ContentFilterFinishReasonError extends OpenAIError {\n    constructor() {\n        super(`Could not parse response content as the request was rejected by the content filter`);\n    }\n}\n//# sourceMappingURL=error.mjs.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _LineDecoder_carriageReturnIndex;\nimport { OpenAIError } from \"../../error.mjs\";\n/**\n * A re-implementation of httpx's `LineDecoder` in Python that handles incrementally\n * reading lines from text.\n *\n * https://github.com/encode/httpx/blob/920333ea98118e9cf617f246905d7b202510941c/httpx/_decoders.py#L258\n */\nexport class LineDecoder {\n    constructor() {\n        _LineDecoder_carriageReturnIndex.set(this, void 0);\n        this.buffer = new Uint8Array();\n        __classPrivateFieldSet(this, _LineDecoder_carriageReturnIndex, null, \"f\");\n    }\n    decode(chunk) {\n        if (chunk == null) {\n            return [];\n        }\n        const binaryChunk = chunk instanceof ArrayBuffer ? new Uint8Array(chunk)\n            : typeof chunk === 'string' ? new TextEncoder().encode(chunk)\n                : chunk;\n        let newData = new Uint8Array(this.buffer.length + binaryChunk.length);\n        newData.set(this.buffer);\n        newData.set(binaryChunk, this.buffer.length);\n        this.buffer = newData;\n        const lines = [];\n        let patternIndex;\n        while ((patternIndex = findNewlineIndex(this.buffer, __classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\"))) != null) {\n            if (patternIndex.carriage && __classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\") == null) {\n                // skip until we either get a corresponding `\\n`, a new `\\r` or nothing\n                __classPrivateFieldSet(this, _LineDecoder_carriageReturnIndex, patternIndex.index, \"f\");\n                continue;\n            }\n            // we got double \\r or \\rtext\\n\n            if (__classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\") != null &&\n                (patternIndex.index !== __classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\") + 1 || patternIndex.carriage)) {\n                lines.push(this.decodeText(this.buffer.slice(0, __classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\") - 1)));\n                this.buffer = this.buffer.slice(__classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\"));\n                __classPrivateFieldSet(this, _LineDecoder_carriageReturnIndex, null, \"f\");\n                continue;\n            }\n            const endIndex = __classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\") !== null ? patternIndex.preceding - 1 : patternIndex.preceding;\n            const line = this.decodeText(this.buffer.slice(0, endIndex));\n            lines.push(line);\n            this.buffer = this.buffer.slice(patternIndex.index);\n            __classPrivateFieldSet(this, _LineDecoder_carriageReturnIndex, null, \"f\");\n        }\n        return lines;\n    }\n    decodeText(bytes) {\n        if (bytes == null)\n            return '';\n        if (typeof bytes === 'string')\n            return bytes;\n        // Node:\n        if (typeof Buffer !== 'undefined') {\n            if (bytes instanceof Buffer) {\n                return bytes.toString();\n            }\n            if (bytes instanceof Uint8Array) {\n                return Buffer.from(bytes).toString();\n            }\n            throw new OpenAIError(`Unexpected: received non-Uint8Array (${bytes.constructor.name}) stream chunk in an environment with a global \"Buffer\" defined, which this library assumes to be Node. Please report this error.`);\n        }\n        // Browser\n        if (typeof TextDecoder !== 'undefined') {\n            if (bytes instanceof Uint8Array || bytes instanceof ArrayBuffer) {\n                this.textDecoder ?? (this.textDecoder = new TextDecoder('utf8'));\n                return this.textDecoder.decode(bytes);\n            }\n            throw new OpenAIError(`Unexpected: received non-Uint8Array/ArrayBuffer (${bytes.constructor.name}) in a web platform. Please report this error.`);\n        }\n        throw new OpenAIError(`Unexpected: neither Buffer nor TextDecoder are available as globals. Please report this error.`);\n    }\n    flush() {\n        if (!this.buffer.length) {\n            return [];\n        }\n        return this.decode('\\n');\n    }\n}\n_LineDecoder_carriageReturnIndex = new WeakMap();\n// prettier-ignore\nLineDecoder.NEWLINE_CHARS = new Set(['\\n', '\\r']);\nLineDecoder.NEWLINE_REGEXP = /\\r\\n|[\\n\\r]/g;\n/**\n * This function searches the buffer for the end patterns, (\\r or \\n)\n * and returns an object with the index preceding the matched newline and the\n * index after the newline char. `null` is returned if no new line is found.\n *\n * ```ts\n * findNewLineIndex('abc\\ndef') -> { preceding: 2, index: 3 }\n * ```\n */\nfunction findNewlineIndex(buffer, startIndex) {\n    const newline = 0x0a; // \\n\n    const carriage = 0x0d; // \\r\n    for (let i = startIndex ?? 0; i < buffer.length; i++) {\n        if (buffer[i] === newline) {\n            return { preceding: i, index: i + 1, carriage: false };\n        }\n        if (buffer[i] === carriage) {\n            return { preceding: i, index: i + 1, carriage: true };\n        }\n    }\n    return null;\n}\nexport function findDoubleNewlineIndex(buffer) {\n    // This function searches the buffer for the end patterns (\\r\\r, \\n\\n, \\r\\n\\r\\n)\n    // and returns the index right after the first occurrence of any pattern,\n    // or -1 if none of the patterns are found.\n    const newline = 0x0a; // \\n\n    const carriage = 0x0d; // \\r\n    for (let i = 0; i < buffer.length - 1; i++) {\n        if (buffer[i] === newline && buffer[i + 1] === newline) {\n            // \\n\\n\n            return i + 2;\n        }\n        if (buffer[i] === carriage && buffer[i + 1] === carriage) {\n            // \\r\\r\n            return i + 2;\n        }\n        if (buffer[i] === carriage &&\n            buffer[i + 1] === newline &&\n            i + 3 < buffer.length &&\n            buffer[i + 2] === carriage &&\n            buffer[i + 3] === newline) {\n            // \\r\\n\\r\\n\n            return i + 4;\n        }\n    }\n    return -1;\n}\n//# sourceMappingURL=line.mjs.map","/**\n * Most browsers don't yet have async iterable support for ReadableStream,\n * and Node has a very different way of reading bytes from its \"ReadableStream\".\n *\n * This polyfill was pulled from https://github.com/MattiasBuelens/web-streams-polyfill/pull/122#issuecomment-1627354490\n */\nexport function ReadableStreamToAsyncIterable(stream) {\n    if (stream[Symbol.asyncIterator])\n        return stream;\n    const reader = stream.getReader();\n    return {\n        async next() {\n            try {\n                const result = await reader.read();\n                if (result?.done)\n                    reader.releaseLock(); // release lock when stream becomes closed\n                return result;\n            }\n            catch (e) {\n                reader.releaseLock(); // release lock when stream becomes errored\n                throw e;\n            }\n        },\n        async return() {\n            const cancelPromise = reader.cancel();\n            reader.releaseLock();\n            await cancelPromise;\n            return { done: true, value: undefined };\n        },\n        [Symbol.asyncIterator]() {\n            return this;\n        },\n    };\n}\n//# sourceMappingURL=stream-utils.mjs.map","import { ReadableStream } from \"./_shims/index.mjs\";\nimport { OpenAIError } from \"./error.mjs\";\nimport { findDoubleNewlineIndex, LineDecoder } from \"./internal/decoders/line.mjs\";\nimport { ReadableStreamToAsyncIterable } from \"./internal/stream-utils.mjs\";\nimport { createResponseHeaders } from \"./core.mjs\";\nimport { APIError } from \"./error.mjs\";\nexport class Stream {\n    constructor(iterator, controller) {\n        this.iterator = iterator;\n        this.controller = controller;\n    }\n    static fromSSEResponse(response, controller) {\n        let consumed = false;\n        async function* iterator() {\n            if (consumed) {\n                throw new Error('Cannot iterate over a consumed stream, use `.tee()` to split the stream.');\n            }\n            consumed = true;\n            let done = false;\n            try {\n                for await (const sse of _iterSSEMessages(response, controller)) {\n                    if (done)\n                        continue;\n                    if (sse.data.startsWith('[DONE]')) {\n                        done = true;\n                        continue;\n                    }\n                    if (sse.event === null ||\n                        sse.event.startsWith('response.') ||\n                        sse.event.startsWith('transcript.')) {\n                        let data;\n                        try {\n                            data = JSON.parse(sse.data);\n                        }\n                        catch (e) {\n                            console.error(`Could not parse message into JSON:`, sse.data);\n                            console.error(`From chunk:`, sse.raw);\n                            throw e;\n                        }\n                        if (data && data.error) {\n                            throw new APIError(undefined, data.error, undefined, createResponseHeaders(response.headers));\n                        }\n                        yield data;\n                    }\n                    else {\n                        let data;\n                        try {\n                            data = JSON.parse(sse.data);\n                        }\n                        catch (e) {\n                            console.error(`Could not parse message into JSON:`, sse.data);\n                            console.error(`From chunk:`, sse.raw);\n                            throw e;\n                        }\n                        // TODO: Is this where the error should be thrown?\n                        if (sse.event == 'error') {\n                            throw new APIError(undefined, data.error, data.message, undefined);\n                        }\n                        yield { event: sse.event, data: data };\n                    }\n                }\n                done = true;\n            }\n            catch (e) {\n                // If the user calls `stream.controller.abort()`, we should exit without throwing.\n                if (e instanceof Error && e.name === 'AbortError')\n                    return;\n                throw e;\n            }\n            finally {\n                // If the user `break`s, abort the ongoing request.\n                if (!done)\n                    controller.abort();\n            }\n        }\n        return new Stream(iterator, controller);\n    }\n    /**\n     * Generates a Stream from a newline-separated ReadableStream\n     * where each item is a JSON value.\n     */\n    static fromReadableStream(readableStream, controller) {\n        let consumed = false;\n        async function* iterLines() {\n            const lineDecoder = new LineDecoder();\n            const iter = ReadableStreamToAsyncIterable(readableStream);\n            for await (const chunk of iter) {\n                for (const line of lineDecoder.decode(chunk)) {\n                    yield line;\n                }\n            }\n            for (const line of lineDecoder.flush()) {\n                yield line;\n            }\n        }\n        async function* iterator() {\n            if (consumed) {\n                throw new Error('Cannot iterate over a consumed stream, use `.tee()` to split the stream.');\n            }\n            consumed = true;\n            let done = false;\n            try {\n                for await (const line of iterLines()) {\n                    if (done)\n                        continue;\n                    if (line)\n                        yield JSON.parse(line);\n                }\n                done = true;\n            }\n            catch (e) {\n                // If the user calls `stream.controller.abort()`, we should exit without throwing.\n                if (e instanceof Error && e.name === 'AbortError')\n                    return;\n                throw e;\n            }\n            finally {\n                // If the user `break`s, abort the ongoing request.\n                if (!done)\n                    controller.abort();\n            }\n        }\n        return new Stream(iterator, controller);\n    }\n    [Symbol.asyncIterator]() {\n        return this.iterator();\n    }\n    /**\n     * Splits the stream into two streams which can be\n     * independently read from at different speeds.\n     */\n    tee() {\n        const left = [];\n        const right = [];\n        const iterator = this.iterator();\n        const teeIterator = (queue) => {\n            return {\n                next: () => {\n                    if (queue.length === 0) {\n                        const result = iterator.next();\n                        left.push(result);\n                        right.push(result);\n                    }\n                    return queue.shift();\n                },\n            };\n        };\n        return [\n            new Stream(() => teeIterator(left), this.controller),\n            new Stream(() => teeIterator(right), this.controller),\n        ];\n    }\n    /**\n     * Converts this stream to a newline-separated ReadableStream of\n     * JSON stringified values in the stream\n     * which can be turned back into a Stream with `Stream.fromReadableStream()`.\n     */\n    toReadableStream() {\n        const self = this;\n        let iter;\n        const encoder = new TextEncoder();\n        return new ReadableStream({\n            async start() {\n                iter = self[Symbol.asyncIterator]();\n            },\n            async pull(ctrl) {\n                try {\n                    const { value, done } = await iter.next();\n                    if (done)\n                        return ctrl.close();\n                    const bytes = encoder.encode(JSON.stringify(value) + '\\n');\n                    ctrl.enqueue(bytes);\n                }\n                catch (err) {\n                    ctrl.error(err);\n                }\n            },\n            async cancel() {\n                await iter.return?.();\n            },\n        });\n    }\n}\nexport async function* _iterSSEMessages(response, controller) {\n    if (!response.body) {\n        controller.abort();\n        throw new OpenAIError(`Attempted to iterate over a response with no body`);\n    }\n    const sseDecoder = new SSEDecoder();\n    const lineDecoder = new LineDecoder();\n    const iter = ReadableStreamToAsyncIterable(response.body);\n    for await (const sseChunk of iterSSEChunks(iter)) {\n        for (const line of lineDecoder.decode(sseChunk)) {\n            const sse = sseDecoder.decode(line);\n            if (sse)\n                yield sse;\n        }\n    }\n    for (const line of lineDecoder.flush()) {\n        const sse = sseDecoder.decode(line);\n        if (sse)\n            yield sse;\n    }\n}\n/**\n * Given an async iterable iterator, iterates over it and yields full\n * SSE chunks, i.e. yields when a double new-line is encountered.\n */\nasync function* iterSSEChunks(iterator) {\n    let data = new Uint8Array();\n    for await (const chunk of iterator) {\n        if (chunk == null) {\n            continue;\n        }\n        const binaryChunk = chunk instanceof ArrayBuffer ? new Uint8Array(chunk)\n            : typeof chunk === 'string' ? new TextEncoder().encode(chunk)\n                : chunk;\n        let newData = new Uint8Array(data.length + binaryChunk.length);\n        newData.set(data);\n        newData.set(binaryChunk, data.length);\n        data = newData;\n        let patternIndex;\n        while ((patternIndex = findDoubleNewlineIndex(data)) !== -1) {\n            yield data.slice(0, patternIndex);\n            data = data.slice(patternIndex);\n        }\n    }\n    if (data.length > 0) {\n        yield data;\n    }\n}\nclass SSEDecoder {\n    constructor() {\n        this.event = null;\n        this.data = [];\n        this.chunks = [];\n    }\n    decode(line) {\n        if (line.endsWith('\\r')) {\n            line = line.substring(0, line.length - 1);\n        }\n        if (!line) {\n            // empty line and we didn't previously encounter any messages\n            if (!this.event && !this.data.length)\n                return null;\n            const sse = {\n                event: this.event,\n                data: this.data.join('\\n'),\n                raw: this.chunks,\n            };\n            this.event = null;\n            this.data = [];\n            this.chunks = [];\n            return sse;\n        }\n        this.chunks.push(line);\n        if (line.startsWith(':')) {\n            return null;\n        }\n        let [fieldname, _, value] = partition(line, ':');\n        if (value.startsWith(' ')) {\n            value = value.substring(1);\n        }\n        if (fieldname === 'event') {\n            this.event = value;\n        }\n        else if (fieldname === 'data') {\n            this.data.push(value);\n        }\n        return null;\n    }\n}\nfunction partition(str, delimiter) {\n    const index = str.indexOf(delimiter);\n    if (index !== -1) {\n        return [str.substring(0, index), delimiter, str.substring(index + delimiter.length)];\n    }\n    return [str, '', ''];\n}\n//# sourceMappingURL=streaming.mjs.map","import { FormData, File, getMultipartRequestOptions, isFsReadStream, } from \"./_shims/index.mjs\";\nexport { fileFromPath } from \"./_shims/index.mjs\";\nexport const isResponseLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.url === 'string' &&\n    typeof value.blob === 'function';\nexport const isFileLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.name === 'string' &&\n    typeof value.lastModified === 'number' &&\n    isBlobLike(value);\n/**\n * The BlobLike type omits arrayBuffer() because @types/node-fetch@^2.6.4 lacks it; but this check\n * adds the arrayBuffer() method type because it is available and used at runtime\n */\nexport const isBlobLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.size === 'number' &&\n    typeof value.type === 'string' &&\n    typeof value.text === 'function' &&\n    typeof value.slice === 'function' &&\n    typeof value.arrayBuffer === 'function';\nexport const isUploadable = (value) => {\n    return isFileLike(value) || isResponseLike(value) || isFsReadStream(value);\n};\n/**\n * Helper for creating a {@link File} to pass to an SDK upload method from a variety of different data formats\n * @param value the raw content of the file.  Can be an {@link Uploadable}, {@link BlobLikePart}, or {@link AsyncIterable} of {@link BlobLikePart}s\n * @param {string=} name the name of the file. If omitted, toFile will try to determine a file name from bits if possible\n * @param {Object=} options additional properties\n * @param {string=} options.type the MIME type of the content\n * @param {number=} options.lastModified the last modified timestamp\n * @returns a {@link File} with the given properties\n */\nexport async function toFile(value, name, options) {\n    // If it's a promise, resolve it.\n    value = await value;\n    // If we've been given a `File` we don't need to do anything\n    if (isFileLike(value)) {\n        return value;\n    }\n    if (isResponseLike(value)) {\n        const blob = await value.blob();\n        name || (name = new URL(value.url).pathname.split(/[\\\\/]/).pop() ?? 'unknown_file');\n        // we need to convert the `Blob` into an array buffer because the `Blob` class\n        // that `node-fetch` defines is incompatible with the web standard which results\n        // in `new File` interpreting it as a string instead of binary data.\n        const data = isBlobLike(blob) ? [(await blob.arrayBuffer())] : [blob];\n        return new File(data, name, options);\n    }\n    const bits = await getBytes(value);\n    name || (name = getName(value) ?? 'unknown_file');\n    if (!options?.type) {\n        const type = bits[0]?.type;\n        if (typeof type === 'string') {\n            options = { ...options, type };\n        }\n    }\n    return new File(bits, name, options);\n}\nasync function getBytes(value) {\n    let parts = [];\n    if (typeof value === 'string' ||\n        ArrayBuffer.isView(value) || // includes Uint8Array, Buffer, etc.\n        value instanceof ArrayBuffer) {\n        parts.push(value);\n    }\n    else if (isBlobLike(value)) {\n        parts.push(await value.arrayBuffer());\n    }\n    else if (isAsyncIterableIterator(value) // includes Readable, ReadableStream, etc.\n    ) {\n        for await (const chunk of value) {\n            parts.push(chunk); // TODO, consider validating?\n        }\n    }\n    else {\n        throw new Error(`Unexpected data type: ${typeof value}; constructor: ${value?.constructor\n            ?.name}; props: ${propsForError(value)}`);\n    }\n    return parts;\n}\nfunction propsForError(value) {\n    const props = Object.getOwnPropertyNames(value);\n    return `[${props.map((p) => `\"${p}\"`).join(', ')}]`;\n}\nfunction getName(value) {\n    return (getStringFromMaybeBuffer(value.name) ||\n        getStringFromMaybeBuffer(value.filename) ||\n        // For fs.ReadStream\n        getStringFromMaybeBuffer(value.path)?.split(/[\\\\/]/).pop());\n}\nconst getStringFromMaybeBuffer = (x) => {\n    if (typeof x === 'string')\n        return x;\n    if (typeof Buffer !== 'undefined' && x instanceof Buffer)\n        return String(x);\n    return undefined;\n};\nconst isAsyncIterableIterator = (value) => value != null && typeof value === 'object' && typeof value[Symbol.asyncIterator] === 'function';\nexport const isMultipartBody = (body) => body && typeof body === 'object' && body.body && body[Symbol.toStringTag] === 'MultipartBody';\n/**\n * Returns a multipart/form-data request if any part of the given request body contains a File / Blob value.\n * Otherwise returns the request as is.\n */\nexport const maybeMultipartFormRequestOptions = async (opts) => {\n    if (!hasUploadableValue(opts.body))\n        return opts;\n    const form = await createForm(opts.body);\n    return getMultipartRequestOptions(form, opts);\n};\nexport const multipartFormRequestOptions = async (opts) => {\n    const form = await createForm(opts.body);\n    return getMultipartRequestOptions(form, opts);\n};\nexport const createForm = async (body) => {\n    const form = new FormData();\n    await Promise.all(Object.entries(body || {}).map(([key, value]) => addFormValue(form, key, value)));\n    return form;\n};\nconst hasUploadableValue = (value) => {\n    if (isUploadable(value))\n        return true;\n    if (Array.isArray(value))\n        return value.some(hasUploadableValue);\n    if (value && typeof value === 'object') {\n        for (const k in value) {\n            if (hasUploadableValue(value[k]))\n                return true;\n        }\n    }\n    return false;\n};\nconst addFormValue = async (form, key, value) => {\n    if (value === undefined)\n        return;\n    if (value == null) {\n        throw new TypeError(`Received null for \"${key}\"; to pass null in FormData, you must use the string 'null'`);\n    }\n    // TODO: make nested formats configurable\n    if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        form.append(key, String(value));\n    }\n    else if (isUploadable(value)) {\n        const file = await toFile(value);\n        form.append(key, file);\n    }\n    else if (Array.isArray(value)) {\n        await Promise.all(value.map((entry) => addFormValue(form, key + '[]', entry)));\n    }\n    else if (typeof value === 'object') {\n        await Promise.all(Object.entries(value).map(([name, prop]) => addFormValue(form, `${key}[${name}]`, prop)));\n    }\n    else {\n        throw new TypeError(`Invalid value given to form, expected a string, number, boolean, object, Array, File or Blob but got ${value} instead`);\n    }\n};\n//# sourceMappingURL=uploads.mjs.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _AbstractPage_client;\nimport { VERSION } from \"./version.mjs\";\nimport { Stream } from \"./streaming.mjs\";\nimport { OpenAIError, APIError, APIConnectionError, APIConnectionTimeoutError, APIUserAbortError, } from \"./error.mjs\";\nimport { kind as shimsKind, getDefaultAgent, fetch, init, } from \"./_shims/index.mjs\";\n// try running side effects outside of _shims/index to workaround https://github.com/vercel/next.js/issues/76881\ninit();\nimport { isBlobLike, isMultipartBody } from \"./uploads.mjs\";\nexport { maybeMultipartFormRequestOptions, multipartFormRequestOptions, createForm, } from \"./uploads.mjs\";\nasync function defaultParseResponse(props) {\n    const { response } = props;\n    if (props.options.stream) {\n        debug('response', response.status, response.url, response.headers, response.body);\n        // Note: there is an invariant here that isn't represented in the type system\n        // that if you set `stream: true` the response type must also be `Stream<T>`\n        if (props.options.__streamClass) {\n            return props.options.__streamClass.fromSSEResponse(response, props.controller);\n        }\n        return Stream.fromSSEResponse(response, props.controller);\n    }\n    // fetch refuses to read the body when the status code is 204.\n    if (response.status === 204) {\n        return null;\n    }\n    if (props.options.__binaryResponse) {\n        return response;\n    }\n    const contentType = response.headers.get('content-type');\n    const mediaType = contentType?.split(';')[0]?.trim();\n    const isJSON = mediaType?.includes('application/json') || mediaType?.endsWith('+json');\n    if (isJSON) {\n        const json = await response.json();\n        debug('response', response.status, response.url, response.headers, json);\n        return _addRequestID(json, response);\n    }\n    const text = await response.text();\n    debug('response', response.status, response.url, response.headers, text);\n    // TODO handle blob, arraybuffer, other content types, etc.\n    return text;\n}\nfunction _addRequestID(value, response) {\n    if (!value || typeof value !== 'object' || Array.isArray(value)) {\n        return value;\n    }\n    return Object.defineProperty(value, '_request_id', {\n        value: response.headers.get('x-request-id'),\n        enumerable: false,\n    });\n}\n/**\n * A subclass of `Promise` providing additional helper methods\n * for interacting with the SDK.\n */\nexport class APIPromise extends Promise {\n    constructor(responsePromise, parseResponse = defaultParseResponse) {\n        super((resolve) => {\n            // this is maybe a bit weird but this has to be a no-op to not implicitly\n            // parse the response body; instead .then, .catch, .finally are overridden\n            // to parse the response\n            resolve(null);\n        });\n        this.responsePromise = responsePromise;\n        this.parseResponse = parseResponse;\n    }\n    _thenUnwrap(transform) {\n        return new APIPromise(this.responsePromise, async (props) => _addRequestID(transform(await this.parseResponse(props), props), props.response));\n    }\n    /**\n     * Gets the raw `Response` instance instead of parsing the response\n     * data.\n     *\n     * If you want to parse the response body but still get the `Response`\n     * instance, you can use {@link withResponse()}.\n     *\n     * 👋 Getting the wrong TypeScript type for `Response`?\n     * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n     * or add one of these imports before your first `import … from 'openai'`:\n     * - `import 'openai/shims/node'` (if you're running on Node)\n     * - `import 'openai/shims/web'` (otherwise)\n     */\n    asResponse() {\n        return this.responsePromise.then((p) => p.response);\n    }\n    /**\n     * Gets the parsed response data, the raw `Response` instance and the ID of the request,\n     * returned via the X-Request-ID header which is useful for debugging requests and reporting\n     * issues to OpenAI.\n     *\n     * If you just want to get the raw `Response` instance without parsing it,\n     * you can use {@link asResponse()}.\n     *\n     *\n     * 👋 Getting the wrong TypeScript type for `Response`?\n     * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n     * or add one of these imports before your first `import … from 'openai'`:\n     * - `import 'openai/shims/node'` (if you're running on Node)\n     * - `import 'openai/shims/web'` (otherwise)\n     */\n    async withResponse() {\n        const [data, response] = await Promise.all([this.parse(), this.asResponse()]);\n        return { data, response, request_id: response.headers.get('x-request-id') };\n    }\n    parse() {\n        if (!this.parsedPromise) {\n            this.parsedPromise = this.responsePromise.then(this.parseResponse);\n        }\n        return this.parsedPromise;\n    }\n    then(onfulfilled, onrejected) {\n        return this.parse().then(onfulfilled, onrejected);\n    }\n    catch(onrejected) {\n        return this.parse().catch(onrejected);\n    }\n    finally(onfinally) {\n        return this.parse().finally(onfinally);\n    }\n}\nexport class APIClient {\n    constructor({ baseURL, maxRetries = 2, timeout = 600000, // 10 minutes\n    httpAgent, fetch: overriddenFetch, }) {\n        this.baseURL = baseURL;\n        this.maxRetries = validatePositiveInteger('maxRetries', maxRetries);\n        this.timeout = validatePositiveInteger('timeout', timeout);\n        this.httpAgent = httpAgent;\n        this.fetch = overriddenFetch ?? fetch;\n    }\n    authHeaders(opts) {\n        return {};\n    }\n    /**\n     * Override this to add your own default headers, for example:\n     *\n     *  {\n     *    ...super.defaultHeaders(),\n     *    Authorization: 'Bearer 123',\n     *  }\n     */\n    defaultHeaders(opts) {\n        return {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            'User-Agent': this.getUserAgent(),\n            ...getPlatformHeaders(),\n            ...this.authHeaders(opts),\n        };\n    }\n    /**\n     * Override this to add your own headers validation:\n     */\n    validateHeaders(headers, customHeaders) { }\n    defaultIdempotencyKey() {\n        return `stainless-node-retry-${uuid4()}`;\n    }\n    get(path, opts) {\n        return this.methodRequest('get', path, opts);\n    }\n    post(path, opts) {\n        return this.methodRequest('post', path, opts);\n    }\n    patch(path, opts) {\n        return this.methodRequest('patch', path, opts);\n    }\n    put(path, opts) {\n        return this.methodRequest('put', path, opts);\n    }\n    delete(path, opts) {\n        return this.methodRequest('delete', path, opts);\n    }\n    methodRequest(method, path, opts) {\n        return this.request(Promise.resolve(opts).then(async (opts) => {\n            const body = opts && isBlobLike(opts?.body) ? new DataView(await opts.body.arrayBuffer())\n                : opts?.body instanceof DataView ? opts.body\n                    : opts?.body instanceof ArrayBuffer ? new DataView(opts.body)\n                        : opts && ArrayBuffer.isView(opts?.body) ? new DataView(opts.body.buffer)\n                            : opts?.body;\n            return { method, path, ...opts, body };\n        }));\n    }\n    getAPIList(path, Page, opts) {\n        return this.requestAPIList(Page, { method: 'get', path, ...opts });\n    }\n    calculateContentLength(body) {\n        if (typeof body === 'string') {\n            if (typeof Buffer !== 'undefined') {\n                return Buffer.byteLength(body, 'utf8').toString();\n            }\n            if (typeof TextEncoder !== 'undefined') {\n                const encoder = new TextEncoder();\n                const encoded = encoder.encode(body);\n                return encoded.length.toString();\n            }\n        }\n        else if (ArrayBuffer.isView(body)) {\n            return body.byteLength.toString();\n        }\n        return null;\n    }\n    buildRequest(options, { retryCount = 0 } = {}) {\n        options = { ...options };\n        const { method, path, query, headers: headers = {} } = options;\n        const body = ArrayBuffer.isView(options.body) || (options.__binaryRequest && typeof options.body === 'string') ?\n            options.body\n            : isMultipartBody(options.body) ? options.body.body\n                : options.body ? JSON.stringify(options.body, null, 2)\n                    : null;\n        const contentLength = this.calculateContentLength(body);\n        const url = this.buildURL(path, query);\n        if ('timeout' in options)\n            validatePositiveInteger('timeout', options.timeout);\n        options.timeout = options.timeout ?? this.timeout;\n        const httpAgent = options.httpAgent ?? this.httpAgent ?? getDefaultAgent(url);\n        const minAgentTimeout = options.timeout + 1000;\n        if (typeof httpAgent?.options?.timeout === 'number' &&\n            minAgentTimeout > (httpAgent.options.timeout ?? 0)) {\n            // Allow any given request to bump our agent active socket timeout.\n            // This may seem strange, but leaking active sockets should be rare and not particularly problematic,\n            // and without mutating agent we would need to create more of them.\n            // This tradeoff optimizes for performance.\n            httpAgent.options.timeout = minAgentTimeout;\n        }\n        if (this.idempotencyHeader && method !== 'get') {\n            if (!options.idempotencyKey)\n                options.idempotencyKey = this.defaultIdempotencyKey();\n            headers[this.idempotencyHeader] = options.idempotencyKey;\n        }\n        const reqHeaders = this.buildHeaders({ options, headers, contentLength, retryCount });\n        const req = {\n            method,\n            ...(body && { body: body }),\n            headers: reqHeaders,\n            ...(httpAgent && { agent: httpAgent }),\n            // @ts-ignore node-fetch uses a custom AbortSignal type that is\n            // not compatible with standard web types\n            signal: options.signal ?? null,\n        };\n        return { req, url, timeout: options.timeout };\n    }\n    buildHeaders({ options, headers, contentLength, retryCount, }) {\n        const reqHeaders = {};\n        if (contentLength) {\n            reqHeaders['content-length'] = contentLength;\n        }\n        const defaultHeaders = this.defaultHeaders(options);\n        applyHeadersMut(reqHeaders, defaultHeaders);\n        applyHeadersMut(reqHeaders, headers);\n        // let builtin fetch set the Content-Type for multipart bodies\n        if (isMultipartBody(options.body) && shimsKind !== 'node') {\n            delete reqHeaders['content-type'];\n        }\n        // Don't set theses headers if they were already set or removed through default headers or by the caller.\n        // We check `defaultHeaders` and `headers`, which can contain nulls, instead of `reqHeaders` to account\n        // for the removal case.\n        if (getHeader(defaultHeaders, 'x-stainless-retry-count') === undefined &&\n            getHeader(headers, 'x-stainless-retry-count') === undefined) {\n            reqHeaders['x-stainless-retry-count'] = String(retryCount);\n        }\n        if (getHeader(defaultHeaders, 'x-stainless-timeout') === undefined &&\n            getHeader(headers, 'x-stainless-timeout') === undefined &&\n            options.timeout) {\n            reqHeaders['x-stainless-timeout'] = String(options.timeout);\n        }\n        this.validateHeaders(reqHeaders, headers);\n        return reqHeaders;\n    }\n    /**\n     * Used as a callback for mutating the given `FinalRequestOptions` object.\n     */\n    async prepareOptions(options) { }\n    /**\n     * Used as a callback for mutating the given `RequestInit` object.\n     *\n     * This is useful for cases where you want to add certain headers based off of\n     * the request properties, e.g. `method` or `url`.\n     */\n    async prepareRequest(request, { url, options }) { }\n    parseHeaders(headers) {\n        return (!headers ? {}\n            : Symbol.iterator in headers ?\n                Object.fromEntries(Array.from(headers).map((header) => [...header]))\n                : { ...headers });\n    }\n    makeStatusError(status, error, message, headers) {\n        return APIError.generate(status, error, message, headers);\n    }\n    request(options, remainingRetries = null) {\n        return new APIPromise(this.makeRequest(options, remainingRetries));\n    }\n    async makeRequest(optionsInput, retriesRemaining) {\n        const options = await optionsInput;\n        const maxRetries = options.maxRetries ?? this.maxRetries;\n        if (retriesRemaining == null) {\n            retriesRemaining = maxRetries;\n        }\n        await this.prepareOptions(options);\n        const { req, url, timeout } = this.buildRequest(options, { retryCount: maxRetries - retriesRemaining });\n        await this.prepareRequest(req, { url, options });\n        debug('request', url, options, req.headers);\n        if (options.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        const controller = new AbortController();\n        const response = await this.fetchWithTimeout(url, req, timeout, controller).catch(castToError);\n        if (response instanceof Error) {\n            if (options.signal?.aborted) {\n                throw new APIUserAbortError();\n            }\n            if (retriesRemaining) {\n                return this.retryRequest(options, retriesRemaining);\n            }\n            if (response.name === 'AbortError') {\n                throw new APIConnectionTimeoutError();\n            }\n            throw new APIConnectionError({ cause: response });\n        }\n        const responseHeaders = createResponseHeaders(response.headers);\n        if (!response.ok) {\n            if (retriesRemaining && this.shouldRetry(response)) {\n                const retryMessage = `retrying, ${retriesRemaining} attempts remaining`;\n                debug(`response (error; ${retryMessage})`, response.status, url, responseHeaders);\n                return this.retryRequest(options, retriesRemaining, responseHeaders);\n            }\n            const errText = await response.text().catch((e) => castToError(e).message);\n            const errJSON = safeJSON(errText);\n            const errMessage = errJSON ? undefined : errText;\n            const retryMessage = retriesRemaining ? `(error; no more retries left)` : `(error; not retryable)`;\n            debug(`response (error; ${retryMessage})`, response.status, url, responseHeaders, errMessage);\n            const err = this.makeStatusError(response.status, errJSON, errMessage, responseHeaders);\n            throw err;\n        }\n        return { response, options, controller };\n    }\n    requestAPIList(Page, options) {\n        const request = this.makeRequest(options, null);\n        return new PagePromise(this, request, Page);\n    }\n    buildURL(path, query) {\n        const url = isAbsoluteURL(path) ?\n            new URL(path)\n            : new URL(this.baseURL + (this.baseURL.endsWith('/') && path.startsWith('/') ? path.slice(1) : path));\n        const defaultQuery = this.defaultQuery();\n        if (!isEmptyObj(defaultQuery)) {\n            query = { ...defaultQuery, ...query };\n        }\n        if (typeof query === 'object' && query && !Array.isArray(query)) {\n            url.search = this.stringifyQuery(query);\n        }\n        return url.toString();\n    }\n    stringifyQuery(query) {\n        return Object.entries(query)\n            .filter(([_, value]) => typeof value !== 'undefined')\n            .map(([key, value]) => {\n            if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n                return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n            }\n            if (value === null) {\n                return `${encodeURIComponent(key)}=`;\n            }\n            throw new OpenAIError(`Cannot stringify type ${typeof value}; Expected string, number, boolean, or null. If you need to pass nested query parameters, you can manually encode them, e.g. { query: { 'foo[key1]': value1, 'foo[key2]': value2 } }, and please open a GitHub issue requesting better support for your use case.`);\n        })\n            .join('&');\n    }\n    async fetchWithTimeout(url, init, ms, controller) {\n        const { signal, ...options } = init || {};\n        if (signal)\n            signal.addEventListener('abort', () => controller.abort());\n        const timeout = setTimeout(() => controller.abort(), ms);\n        const fetchOptions = {\n            signal: controller.signal,\n            ...options,\n        };\n        if (fetchOptions.method) {\n            // Custom methods like 'patch' need to be uppercased\n            // See https://github.com/nodejs/undici/issues/2294\n            fetchOptions.method = fetchOptions.method.toUpperCase();\n        }\n        return (\n        // use undefined this binding; fetch errors if bound to something else in browser/cloudflare\n        this.fetch.call(undefined, url, fetchOptions).finally(() => {\n            clearTimeout(timeout);\n        }));\n    }\n    shouldRetry(response) {\n        // Note this is not a standard header.\n        const shouldRetryHeader = response.headers.get('x-should-retry');\n        // If the server explicitly says whether or not to retry, obey.\n        if (shouldRetryHeader === 'true')\n            return true;\n        if (shouldRetryHeader === 'false')\n            return false;\n        // Retry on request timeouts.\n        if (response.status === 408)\n            return true;\n        // Retry on lock timeouts.\n        if (response.status === 409)\n            return true;\n        // Retry on rate limits.\n        if (response.status === 429)\n            return true;\n        // Retry internal errors.\n        if (response.status >= 500)\n            return true;\n        return false;\n    }\n    async retryRequest(options, retriesRemaining, responseHeaders) {\n        let timeoutMillis;\n        // Note the `retry-after-ms` header may not be standard, but is a good idea and we'd like proactive support for it.\n        const retryAfterMillisHeader = responseHeaders?.['retry-after-ms'];\n        if (retryAfterMillisHeader) {\n            const timeoutMs = parseFloat(retryAfterMillisHeader);\n            if (!Number.isNaN(timeoutMs)) {\n                timeoutMillis = timeoutMs;\n            }\n        }\n        // About the Retry-After header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After\n        const retryAfterHeader = responseHeaders?.['retry-after'];\n        if (retryAfterHeader && !timeoutMillis) {\n            const timeoutSeconds = parseFloat(retryAfterHeader);\n            if (!Number.isNaN(timeoutSeconds)) {\n                timeoutMillis = timeoutSeconds * 1000;\n            }\n            else {\n                timeoutMillis = Date.parse(retryAfterHeader) - Date.now();\n            }\n        }\n        // If the API asks us to wait a certain amount of time (and it's a reasonable amount),\n        // just do what it says, but otherwise calculate a default\n        if (!(timeoutMillis && 0 <= timeoutMillis && timeoutMillis < 60 * 1000)) {\n            const maxRetries = options.maxRetries ?? this.maxRetries;\n            timeoutMillis = this.calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries);\n        }\n        await sleep(timeoutMillis);\n        return this.makeRequest(options, retriesRemaining - 1);\n    }\n    calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries) {\n        const initialRetryDelay = 0.5;\n        const maxRetryDelay = 8.0;\n        const numRetries = maxRetries - retriesRemaining;\n        // Apply exponential backoff, but not more than the max.\n        const sleepSeconds = Math.min(initialRetryDelay * Math.pow(2, numRetries), maxRetryDelay);\n        // Apply some jitter, take up to at most 25 percent of the retry time.\n        const jitter = 1 - Math.random() * 0.25;\n        return sleepSeconds * jitter * 1000;\n    }\n    getUserAgent() {\n        return `${this.constructor.name}/JS ${VERSION}`;\n    }\n}\nexport class AbstractPage {\n    constructor(client, response, body, options) {\n        _AbstractPage_client.set(this, void 0);\n        __classPrivateFieldSet(this, _AbstractPage_client, client, \"f\");\n        this.options = options;\n        this.response = response;\n        this.body = body;\n    }\n    hasNextPage() {\n        const items = this.getPaginatedItems();\n        if (!items.length)\n            return false;\n        return this.nextPageInfo() != null;\n    }\n    async getNextPage() {\n        const nextInfo = this.nextPageInfo();\n        if (!nextInfo) {\n            throw new OpenAIError('No next page expected; please check `.hasNextPage()` before calling `.getNextPage()`.');\n        }\n        const nextOptions = { ...this.options };\n        if ('params' in nextInfo && typeof nextOptions.query === 'object') {\n            nextOptions.query = { ...nextOptions.query, ...nextInfo.params };\n        }\n        else if ('url' in nextInfo) {\n            const params = [...Object.entries(nextOptions.query || {}), ...nextInfo.url.searchParams.entries()];\n            for (const [key, value] of params) {\n                nextInfo.url.searchParams.set(key, value);\n            }\n            nextOptions.query = undefined;\n            nextOptions.path = nextInfo.url.toString();\n        }\n        return await __classPrivateFieldGet(this, _AbstractPage_client, \"f\").requestAPIList(this.constructor, nextOptions);\n    }\n    async *iterPages() {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        let page = this;\n        yield page;\n        while (page.hasNextPage()) {\n            page = await page.getNextPage();\n            yield page;\n        }\n    }\n    async *[(_AbstractPage_client = new WeakMap(), Symbol.asyncIterator)]() {\n        for await (const page of this.iterPages()) {\n            for (const item of page.getPaginatedItems()) {\n                yield item;\n            }\n        }\n    }\n}\n/**\n * This subclass of Promise will resolve to an instantiated Page once the request completes.\n *\n * It also implements AsyncIterable to allow auto-paginating iteration on an unawaited list call, eg:\n *\n *    for await (const item of client.items.list()) {\n *      console.log(item)\n *    }\n */\nexport class PagePromise extends APIPromise {\n    constructor(client, request, Page) {\n        super(request, async (props) => new Page(client, props.response, await defaultParseResponse(props), props.options));\n    }\n    /**\n     * Allow auto-paginating iteration on an unawaited list call, eg:\n     *\n     *    for await (const item of client.items.list()) {\n     *      console.log(item)\n     *    }\n     */\n    async *[Symbol.asyncIterator]() {\n        const page = await this;\n        for await (const item of page) {\n            yield item;\n        }\n    }\n}\nexport const createResponseHeaders = (headers) => {\n    return new Proxy(Object.fromEntries(\n    // @ts-ignore\n    headers.entries()), {\n        get(target, name) {\n            const key = name.toString();\n            return target[key.toLowerCase()] || target[key];\n        },\n    });\n};\n// This is required so that we can determine if a given object matches the RequestOptions\n// type at runtime. While this requires duplication, it is enforced by the TypeScript\n// compiler such that any missing / extraneous keys will cause an error.\nconst requestOptionsKeys = {\n    method: true,\n    path: true,\n    query: true,\n    body: true,\n    headers: true,\n    maxRetries: true,\n    stream: true,\n    timeout: true,\n    httpAgent: true,\n    signal: true,\n    idempotencyKey: true,\n    __metadata: true,\n    __binaryRequest: true,\n    __binaryResponse: true,\n    __streamClass: true,\n};\nexport const isRequestOptions = (obj) => {\n    return (typeof obj === 'object' &&\n        obj !== null &&\n        !isEmptyObj(obj) &&\n        Object.keys(obj).every((k) => hasOwn(requestOptionsKeys, k)));\n};\nconst getPlatformProperties = () => {\n    if (typeof Deno !== 'undefined' && Deno.build != null) {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': normalizePlatform(Deno.build.os),\n            'X-Stainless-Arch': normalizeArch(Deno.build.arch),\n            'X-Stainless-Runtime': 'deno',\n            'X-Stainless-Runtime-Version': typeof Deno.version === 'string' ? Deno.version : Deno.version?.deno ?? 'unknown',\n        };\n    }\n    if (typeof EdgeRuntime !== 'undefined') {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': 'Unknown',\n            'X-Stainless-Arch': `other:${EdgeRuntime}`,\n            'X-Stainless-Runtime': 'edge',\n            'X-Stainless-Runtime-Version': process.version,\n        };\n    }\n    // Check if Node.js\n    if (Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]') {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': normalizePlatform(process.platform),\n            'X-Stainless-Arch': normalizeArch(process.arch),\n            'X-Stainless-Runtime': 'node',\n            'X-Stainless-Runtime-Version': process.version,\n        };\n    }\n    const browserInfo = getBrowserInfo();\n    if (browserInfo) {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': 'Unknown',\n            'X-Stainless-Arch': 'unknown',\n            'X-Stainless-Runtime': `browser:${browserInfo.browser}`,\n            'X-Stainless-Runtime-Version': browserInfo.version,\n        };\n    }\n    // TODO add support for Cloudflare workers, etc.\n    return {\n        'X-Stainless-Lang': 'js',\n        'X-Stainless-Package-Version': VERSION,\n        'X-Stainless-OS': 'Unknown',\n        'X-Stainless-Arch': 'unknown',\n        'X-Stainless-Runtime': 'unknown',\n        'X-Stainless-Runtime-Version': 'unknown',\n    };\n};\n// Note: modified from https://github.com/JS-DevTools/host-environment/blob/b1ab79ecde37db5d6e163c050e54fe7d287d7c92/src/isomorphic.browser.ts\nfunction getBrowserInfo() {\n    if (typeof navigator === 'undefined' || !navigator) {\n        return null;\n    }\n    // NOTE: The order matters here!\n    const browserPatterns = [\n        { key: 'edge', pattern: /Edge(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'ie', pattern: /MSIE(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'ie', pattern: /Trident(?:.*rv\\:(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'chrome', pattern: /Chrome(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'firefox', pattern: /Firefox(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'safari', pattern: /(?:Version\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?(?:\\W+Mobile\\S*)?\\W+Safari/ },\n    ];\n    // Find the FIRST matching browser\n    for (const { key, pattern } of browserPatterns) {\n        const match = pattern.exec(navigator.userAgent);\n        if (match) {\n            const major = match[1] || 0;\n            const minor = match[2] || 0;\n            const patch = match[3] || 0;\n            return { browser: key, version: `${major}.${minor}.${patch}` };\n        }\n    }\n    return null;\n}\nconst normalizeArch = (arch) => {\n    // Node docs:\n    // - https://nodejs.org/api/process.html#processarch\n    // Deno docs:\n    // - https://doc.deno.land/deno/stable/~/Deno.build\n    if (arch === 'x32')\n        return 'x32';\n    if (arch === 'x86_64' || arch === 'x64')\n        return 'x64';\n    if (arch === 'arm')\n        return 'arm';\n    if (arch === 'aarch64' || arch === 'arm64')\n        return 'arm64';\n    if (arch)\n        return `other:${arch}`;\n    return 'unknown';\n};\nconst normalizePlatform = (platform) => {\n    // Node platforms:\n    // - https://nodejs.org/api/process.html#processplatform\n    // Deno platforms:\n    // - https://doc.deno.land/deno/stable/~/Deno.build\n    // - https://github.com/denoland/deno/issues/14799\n    platform = platform.toLowerCase();\n    // NOTE: this iOS check is untested and may not work\n    // Node does not work natively on IOS, there is a fork at\n    // https://github.com/nodejs-mobile/nodejs-mobile\n    // however it is unknown at the time of writing how to detect if it is running\n    if (platform.includes('ios'))\n        return 'iOS';\n    if (platform === 'android')\n        return 'Android';\n    if (platform === 'darwin')\n        return 'MacOS';\n    if (platform === 'win32')\n        return 'Windows';\n    if (platform === 'freebsd')\n        return 'FreeBSD';\n    if (platform === 'openbsd')\n        return 'OpenBSD';\n    if (platform === 'linux')\n        return 'Linux';\n    if (platform)\n        return `Other:${platform}`;\n    return 'Unknown';\n};\nlet _platformHeaders;\nconst getPlatformHeaders = () => {\n    return (_platformHeaders ?? (_platformHeaders = getPlatformProperties()));\n};\nexport const safeJSON = (text) => {\n    try {\n        return JSON.parse(text);\n    }\n    catch (err) {\n        return undefined;\n    }\n};\n// https://url.spec.whatwg.org/#url-scheme-string\nconst startsWithSchemeRegexp = /^[a-z][a-z0-9+.-]*:/i;\nconst isAbsoluteURL = (url) => {\n    return startsWithSchemeRegexp.test(url);\n};\nexport const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\nconst validatePositiveInteger = (name, n) => {\n    if (typeof n !== 'number' || !Number.isInteger(n)) {\n        throw new OpenAIError(`${name} must be an integer`);\n    }\n    if (n < 0) {\n        throw new OpenAIError(`${name} must be a positive integer`);\n    }\n    return n;\n};\nexport const castToError = (err) => {\n    if (err instanceof Error)\n        return err;\n    if (typeof err === 'object' && err !== null) {\n        try {\n            return new Error(JSON.stringify(err));\n        }\n        catch { }\n    }\n    return new Error(err);\n};\nexport const ensurePresent = (value) => {\n    if (value == null)\n        throw new OpenAIError(`Expected a value to be given but received ${value} instead.`);\n    return value;\n};\n/**\n * Read an environment variable.\n *\n * Trims beginning and trailing whitespace.\n *\n * Will return undefined if the environment variable doesn't exist or cannot be accessed.\n */\nexport const readEnv = (env) => {\n    if (typeof process !== 'undefined') {\n        return process.env?.[env]?.trim() ?? undefined;\n    }\n    if (typeof Deno !== 'undefined') {\n        return Deno.env?.get?.(env)?.trim();\n    }\n    return undefined;\n};\nexport const coerceInteger = (value) => {\n    if (typeof value === 'number')\n        return Math.round(value);\n    if (typeof value === 'string')\n        return parseInt(value, 10);\n    throw new OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nexport const coerceFloat = (value) => {\n    if (typeof value === 'number')\n        return value;\n    if (typeof value === 'string')\n        return parseFloat(value);\n    throw new OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nexport const coerceBoolean = (value) => {\n    if (typeof value === 'boolean')\n        return value;\n    if (typeof value === 'string')\n        return value === 'true';\n    return Boolean(value);\n};\nexport const maybeCoerceInteger = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceInteger(value);\n};\nexport const maybeCoerceFloat = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceFloat(value);\n};\nexport const maybeCoerceBoolean = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceBoolean(value);\n};\n// https://stackoverflow.com/a/34491287\nexport function isEmptyObj(obj) {\n    if (!obj)\n        return true;\n    for (const _k in obj)\n        return false;\n    return true;\n}\n// https://eslint.org/docs/latest/rules/no-prototype-builtins\nexport function hasOwn(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n/**\n * Copies headers from \"newHeaders\" onto \"targetHeaders\",\n * using lower-case for all properties,\n * ignoring any keys with undefined values,\n * and deleting any keys with null values.\n */\nfunction applyHeadersMut(targetHeaders, newHeaders) {\n    for (const k in newHeaders) {\n        if (!hasOwn(newHeaders, k))\n            continue;\n        const lowerKey = k.toLowerCase();\n        if (!lowerKey)\n            continue;\n        const val = newHeaders[k];\n        if (val === null) {\n            delete targetHeaders[lowerKey];\n        }\n        else if (val !== undefined) {\n            targetHeaders[lowerKey] = val;\n        }\n    }\n}\nconst SENSITIVE_HEADERS = new Set(['authorization', 'api-key']);\nexport function debug(action, ...args) {\n    if (typeof process !== 'undefined' && process?.env?.['DEBUG'] === 'true') {\n        const modifiedArgs = args.map((arg) => {\n            if (!arg) {\n                return arg;\n            }\n            // Check for sensitive headers in request body 'headers' object\n            if (arg['headers']) {\n                // clone so we don't mutate\n                const modifiedArg = { ...arg, headers: { ...arg['headers'] } };\n                for (const header in arg['headers']) {\n                    if (SENSITIVE_HEADERS.has(header.toLowerCase())) {\n                        modifiedArg['headers'][header] = 'REDACTED';\n                    }\n                }\n                return modifiedArg;\n            }\n            let modifiedArg = null;\n            // Check for sensitive headers in headers object\n            for (const header in arg) {\n                if (SENSITIVE_HEADERS.has(header.toLowerCase())) {\n                    // avoid making a copy until we need to\n                    modifiedArg ?? (modifiedArg = { ...arg });\n                    modifiedArg[header] = 'REDACTED';\n                }\n            }\n            return modifiedArg ?? arg;\n        });\n        console.log(`OpenAI:DEBUG:${action}`, ...modifiedArgs);\n    }\n}\n/**\n * https://stackoverflow.com/a/2117523\n */\nconst uuid4 = () => {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n        const r = (Math.random() * 16) | 0;\n        const v = c === 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n};\nexport const isRunningInBrowser = () => {\n    return (\n    // @ts-ignore\n    typeof window !== 'undefined' &&\n        // @ts-ignore\n        typeof window.document !== 'undefined' &&\n        // @ts-ignore\n        typeof navigator !== 'undefined');\n};\nexport const isHeadersProtocol = (headers) => {\n    return typeof headers?.get === 'function';\n};\nexport const getRequiredHeader = (headers, header) => {\n    const foundHeader = getHeader(headers, header);\n    if (foundHeader === undefined) {\n        throw new Error(`Could not find ${header} header`);\n    }\n    return foundHeader;\n};\nexport const getHeader = (headers, header) => {\n    const lowerCasedHeader = header.toLowerCase();\n    if (isHeadersProtocol(headers)) {\n        // to deal with the case where the header looks like Stainless-Event-Id\n        const intercapsHeader = header[0]?.toUpperCase() +\n            header.substring(1).replace(/([^\\w])(\\w)/g, (_m, g1, g2) => g1 + g2.toUpperCase());\n        for (const key of [header, lowerCasedHeader, header.toUpperCase(), intercapsHeader]) {\n            const value = headers.get(key);\n            if (value) {\n                return value;\n            }\n        }\n    }\n    for (const [key, value] of Object.entries(headers)) {\n        if (key.toLowerCase() === lowerCasedHeader) {\n            if (Array.isArray(value)) {\n                if (value.length <= 1)\n                    return value[0];\n                console.warn(`Received ${value.length} entries for the ${header} header, using the first entry.`);\n                return value[0];\n            }\n            return value;\n        }\n    }\n    return undefined;\n};\n/**\n * Encodes a string to Base64 format.\n */\nexport const toBase64 = (str) => {\n    if (!str)\n        return '';\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str).toString('base64');\n    }\n    if (typeof btoa !== 'undefined') {\n        return btoa(str);\n    }\n    throw new OpenAIError('Cannot generate b64 string; Expected `Buffer` or `btoa` to be defined');\n};\nexport function isObj(obj) {\n    return obj != null && typeof obj === 'object' && !Array.isArray(obj);\n}\n//# sourceMappingURL=core.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nexport class APIResource {\n    constructor(client) {\n        this._client = client;\n    }\n}\n//# sourceMappingURL=resource.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nexport class Completions extends APIResource {\n    create(body, options) {\n        return this._client.post('/completions', { body, ...options, stream: body.stream ?? false });\n    }\n}\n//# sourceMappingURL=completions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../core.mjs\";\nimport { ChatCompletionStoreMessagesPage } from \"./completions.mjs\";\nexport class Messages extends APIResource {\n    list(completionId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(completionId, {}, query);\n        }\n        return this._client.getAPIList(`/chat/completions/${completionId}/messages`, ChatCompletionStoreMessagesPage, { query, ...options });\n    }\n}\nexport { ChatCompletionStoreMessagesPage };\n//# sourceMappingURL=messages.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { AbstractPage } from \"./core.mjs\";\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */\nexport class Page extends AbstractPage {\n    constructor(client, response, body, options) {\n        super(client, response, body, options);\n        this.data = body.data || [];\n        this.object = body.object;\n    }\n    getPaginatedItems() {\n        return this.data ?? [];\n    }\n    // @deprecated Please use `nextPageInfo()` instead\n    /**\n     * This page represents a response that isn't actually paginated at the API level\n     * so there will never be any next page params.\n     */\n    nextPageParams() {\n        return null;\n    }\n    nextPageInfo() {\n        return null;\n    }\n}\nexport class CursorPage extends AbstractPage {\n    constructor(client, response, body, options) {\n        super(client, response, body, options);\n        this.data = body.data || [];\n        this.has_more = body.has_more || false;\n    }\n    getPaginatedItems() {\n        return this.data ?? [];\n    }\n    hasNextPage() {\n        if (this.has_more === false) {\n            return false;\n        }\n        return super.hasNextPage();\n    }\n    // @deprecated Please use `nextPageInfo()` instead\n    nextPageParams() {\n        const info = this.nextPageInfo();\n        if (!info)\n            return null;\n        if ('params' in info)\n            return info.params;\n        const params = Object.fromEntries(info.url.searchParams);\n        if (!Object.keys(params).length)\n            return null;\n        return params;\n    }\n    nextPageInfo() {\n        const data = this.getPaginatedItems();\n        if (!data.length) {\n            return null;\n        }\n        const id = data[data.length - 1]?.id;\n        if (!id) {\n            return null;\n        }\n        return { params: { after: id } };\n    }\n}\n//# sourceMappingURL=pagination.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../core.mjs\";\nimport * as MessagesAPI from \"./messages.mjs\";\nimport { Messages } from \"./messages.mjs\";\nimport { CursorPage } from \"../../../pagination.mjs\";\nexport class Completions extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.messages = new MessagesAPI.Messages(this._client);\n    }\n    create(body, options) {\n        return this._client.post('/chat/completions', { body, ...options, stream: body.stream ?? false });\n    }\n    /**\n     * Get a stored chat completion. Only Chat Completions that have been created with\n     * the `store` parameter set to `true` will be returned.\n     */\n    retrieve(completionId, options) {\n        return this._client.get(`/chat/completions/${completionId}`, options);\n    }\n    /**\n     * Modify a stored chat completion. Only Chat Completions that have been created\n     * with the `store` parameter set to `true` can be modified. Currently, the only\n     * supported modification is to update the `metadata` field.\n     */\n    update(completionId, body, options) {\n        return this._client.post(`/chat/completions/${completionId}`, { body, ...options });\n    }\n    list(query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/chat/completions', ChatCompletionsPage, { query, ...options });\n    }\n    /**\n     * Delete a stored chat completion. Only Chat Completions that have been created\n     * with the `store` parameter set to `true` can be deleted.\n     */\n    del(completionId, options) {\n        return this._client.delete(`/chat/completions/${completionId}`, options);\n    }\n}\nexport class ChatCompletionsPage extends CursorPage {\n}\nexport class ChatCompletionStoreMessagesPage extends CursorPage {\n}\nCompletions.ChatCompletionsPage = ChatCompletionsPage;\nCompletions.Messages = Messages;\n//# sourceMappingURL=completions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as CompletionsAPI from \"./completions/completions.mjs\";\nimport { ChatCompletionsPage, Completions, } from \"./completions/completions.mjs\";\nexport class Chat extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.completions = new CompletionsAPI.Completions(this._client);\n    }\n}\nChat.Completions = Completions;\nChat.ChatCompletionsPage = ChatCompletionsPage;\n//# sourceMappingURL=chat.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nexport class Embeddings extends APIResource {\n    /**\n     * Creates an embedding vector representing the input text.\n     */\n    create(body, options) {\n        return this._client.post('/embeddings', { body, ...options });\n    }\n}\n//# sourceMappingURL=embeddings.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nimport { isRequestOptions } from \"../core.mjs\";\nimport { sleep } from \"../core.mjs\";\nimport { APIConnectionTimeoutError } from \"../error.mjs\";\nimport * as Core from \"../core.mjs\";\nimport { CursorPage } from \"../pagination.mjs\";\nexport class Files extends APIResource {\n    /**\n     * Upload a file that can be used across various endpoints. Individual files can be\n     * up to 512 MB, and the size of all files uploaded by one organization can be up\n     * to 100 GB.\n     *\n     * The Assistants API supports files up to 2 million tokens and of specific file\n     * types. See the\n     * [Assistants Tools guide](https://platform.openai.com/docs/assistants/tools) for\n     * details.\n     *\n     * The Fine-tuning API only supports `.jsonl` files. The input also has certain\n     * required formats for fine-tuning\n     * [chat](https://platform.openai.com/docs/api-reference/fine-tuning/chat-input) or\n     * [completions](https://platform.openai.com/docs/api-reference/fine-tuning/completions-input)\n     * models.\n     *\n     * The Batch API only supports `.jsonl` files up to 200 MB in size. The input also\n     * has a specific required\n     * [format](https://platform.openai.com/docs/api-reference/batch/request-input).\n     *\n     * Please [contact us](https://help.openai.com/) if you need to increase these\n     * storage limits.\n     */\n    create(body, options) {\n        return this._client.post('/files', Core.multipartFormRequestOptions({ body, ...options }));\n    }\n    /**\n     * Returns information about a specific file.\n     */\n    retrieve(fileId, options) {\n        return this._client.get(`/files/${fileId}`, options);\n    }\n    list(query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/files', FileObjectsPage, { query, ...options });\n    }\n    /**\n     * Delete a file.\n     */\n    del(fileId, options) {\n        return this._client.delete(`/files/${fileId}`, options);\n    }\n    /**\n     * Returns the contents of the specified file.\n     */\n    content(fileId, options) {\n        return this._client.get(`/files/${fileId}/content`, {\n            ...options,\n            headers: { Accept: 'application/binary', ...options?.headers },\n            __binaryResponse: true,\n        });\n    }\n    /**\n     * Returns the contents of the specified file.\n     *\n     * @deprecated The `.content()` method should be used instead\n     */\n    retrieveContent(fileId, options) {\n        return this._client.get(`/files/${fileId}/content`, options);\n    }\n    /**\n     * Waits for the given file to be processed, default timeout is 30 mins.\n     */\n    async waitForProcessing(id, { pollInterval = 5000, maxWait = 30 * 60 * 1000 } = {}) {\n        const TERMINAL_STATES = new Set(['processed', 'error', 'deleted']);\n        const start = Date.now();\n        let file = await this.retrieve(id);\n        while (!file.status || !TERMINAL_STATES.has(file.status)) {\n            await sleep(pollInterval);\n            file = await this.retrieve(id);\n            if (Date.now() - start > maxWait) {\n                throw new APIConnectionTimeoutError({\n                    message: `Giving up on waiting for file ${id} to finish processing after ${maxWait} milliseconds.`,\n                });\n            }\n        }\n        return file;\n    }\n}\nexport class FileObjectsPage extends CursorPage {\n}\nFiles.FileObjectsPage = FileObjectsPage;\n//# sourceMappingURL=files.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nimport * as Core from \"../core.mjs\";\nexport class Images extends APIResource {\n    /**\n     * Creates a variation of a given image.\n     */\n    createVariation(body, options) {\n        return this._client.post('/images/variations', Core.multipartFormRequestOptions({ body, ...options }));\n    }\n    /**\n     * Creates an edited or extended image given an original image and a prompt.\n     */\n    edit(body, options) {\n        return this._client.post('/images/edits', Core.multipartFormRequestOptions({ body, ...options }));\n    }\n    /**\n     * Creates an image given a prompt.\n     */\n    generate(body, options) {\n        return this._client.post('/images/generations', { body, ...options });\n    }\n}\n//# sourceMappingURL=images.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nexport class Speech extends APIResource {\n    /**\n     * Generates audio from the input text.\n     */\n    create(body, options) {\n        return this._client.post('/audio/speech', {\n            body,\n            ...options,\n            headers: { Accept: 'application/octet-stream', ...options?.headers },\n            __binaryResponse: true,\n        });\n    }\n}\n//# sourceMappingURL=speech.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as Core from \"../../core.mjs\";\nexport class Transcriptions extends APIResource {\n    create(body, options) {\n        return this._client.post('/audio/transcriptions', Core.multipartFormRequestOptions({\n            body,\n            ...options,\n            stream: body.stream ?? false,\n            __metadata: { model: body.model },\n        }));\n    }\n}\n//# sourceMappingURL=transcriptions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as Core from \"../../core.mjs\";\nexport class Translations extends APIResource {\n    create(body, options) {\n        return this._client.post('/audio/translations', Core.multipartFormRequestOptions({ body, ...options, __metadata: { model: body.model } }));\n    }\n}\n//# sourceMappingURL=translations.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as SpeechAPI from \"./speech.mjs\";\nimport { Speech } from \"./speech.mjs\";\nimport * as TranscriptionsAPI from \"./transcriptions.mjs\";\nimport { Transcriptions, } from \"./transcriptions.mjs\";\nimport * as TranslationsAPI from \"./translations.mjs\";\nimport { Translations, } from \"./translations.mjs\";\nexport class Audio extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.transcriptions = new TranscriptionsAPI.Transcriptions(this._client);\n        this.translations = new TranslationsAPI.Translations(this._client);\n        this.speech = new SpeechAPI.Speech(this._client);\n    }\n}\nAudio.Transcriptions = Transcriptions;\nAudio.Translations = Translations;\nAudio.Speech = Speech;\n//# sourceMappingURL=audio.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nexport class Moderations extends APIResource {\n    /**\n     * Classifies if text and/or image inputs are potentially harmful. Learn more in\n     * the [moderation guide](https://platform.openai.com/docs/guides/moderation).\n     */\n    create(body, options) {\n        return this._client.post('/moderations', { body, ...options });\n    }\n}\n//# sourceMappingURL=moderations.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nimport { Page } from \"../pagination.mjs\";\nexport class Models extends APIResource {\n    /**\n     * Retrieves a model instance, providing basic information about the model such as\n     * the owner and permissioning.\n     */\n    retrieve(model, options) {\n        return this._client.get(`/models/${model}`, options);\n    }\n    /**\n     * Lists the currently available models, and provides basic information about each\n     * one such as the owner and availability.\n     */\n    list(options) {\n        return this._client.getAPIList('/models', ModelsPage, options);\n    }\n    /**\n     * Delete a fine-tuned model. You must have the Owner role in your organization to\n     * delete a model.\n     */\n    del(model, options) {\n        return this._client.delete(`/models/${model}`, options);\n    }\n}\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */\nexport class ModelsPage extends Page {\n}\nModels.ModelsPage = ModelsPage;\n//# sourceMappingURL=models.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../core.mjs\";\nimport { CursorPage } from \"../../../pagination.mjs\";\nexport class Checkpoints extends APIResource {\n    list(fineTuningJobId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(fineTuningJobId, {}, query);\n        }\n        return this._client.getAPIList(`/fine_tuning/jobs/${fineTuningJobId}/checkpoints`, FineTuningJobCheckpointsPage, { query, ...options });\n    }\n}\nexport class FineTuningJobCheckpointsPage extends CursorPage {\n}\nCheckpoints.FineTuningJobCheckpointsPage = FineTuningJobCheckpointsPage;\n//# sourceMappingURL=checkpoints.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../core.mjs\";\nimport * as CheckpointsAPI from \"./checkpoints.mjs\";\nimport { Checkpoints, FineTuningJobCheckpointsPage, } from \"./checkpoints.mjs\";\nimport { CursorPage } from \"../../../pagination.mjs\";\nexport class Jobs extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.checkpoints = new CheckpointsAPI.Checkpoints(this._client);\n    }\n    /**\n     * Creates a fine-tuning job which begins the process of creating a new model from\n     * a given dataset.\n     *\n     * Response includes details of the enqueued job including job status and the name\n     * of the fine-tuned models once complete.\n     *\n     * [Learn more about fine-tuning](https://platform.openai.com/docs/guides/fine-tuning)\n     */\n    create(body, options) {\n        return this._client.post('/fine_tuning/jobs', { body, ...options });\n    }\n    /**\n     * Get info about a fine-tuning job.\n     *\n     * [Learn more about fine-tuning](https://platform.openai.com/docs/guides/fine-tuning)\n     */\n    retrieve(fineTuningJobId, options) {\n        return this._client.get(`/fine_tuning/jobs/${fineTuningJobId}`, options);\n    }\n    list(query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/fine_tuning/jobs', FineTuningJobsPage, { query, ...options });\n    }\n    /**\n     * Immediately cancel a fine-tune job.\n     */\n    cancel(fineTuningJobId, options) {\n        return this._client.post(`/fine_tuning/jobs/${fineTuningJobId}/cancel`, options);\n    }\n    listEvents(fineTuningJobId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.listEvents(fineTuningJobId, {}, query);\n        }\n        return this._client.getAPIList(`/fine_tuning/jobs/${fineTuningJobId}/events`, FineTuningJobEventsPage, {\n            query,\n            ...options,\n        });\n    }\n}\nexport class FineTuningJobsPage extends CursorPage {\n}\nexport class FineTuningJobEventsPage extends CursorPage {\n}\nJobs.FineTuningJobsPage = FineTuningJobsPage;\nJobs.FineTuningJobEventsPage = FineTuningJobEventsPage;\nJobs.Checkpoints = Checkpoints;\nJobs.FineTuningJobCheckpointsPage = FineTuningJobCheckpointsPage;\n//# sourceMappingURL=jobs.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as JobsAPI from \"./jobs/jobs.mjs\";\nimport { FineTuningJobEventsPage, FineTuningJobsPage, Jobs, } from \"./jobs/jobs.mjs\";\nexport class FineTuning extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.jobs = new JobsAPI.Jobs(this._client);\n    }\n}\nFineTuning.Jobs = Jobs;\nFineTuning.FineTuningJobsPage = FineTuningJobsPage;\nFineTuning.FineTuningJobEventsPage = FineTuningJobEventsPage;\n//# sourceMappingURL=fine-tuning.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport { sleep, isRequestOptions } from \"../../core.mjs\";\nimport { CursorPage, Page } from \"../../pagination.mjs\";\nexport class Files extends APIResource {\n    /**\n     * Create a vector store file by attaching a\n     * [File](https://platform.openai.com/docs/api-reference/files) to a\n     * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object).\n     */\n    create(vectorStoreId, body, options) {\n        return this._client.post(`/vector_stores/${vectorStoreId}/files`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Retrieves a vector store file.\n     */\n    retrieve(vectorStoreId, fileId, options) {\n        return this._client.get(`/vector_stores/${vectorStoreId}/files/${fileId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Update attributes on a vector store file.\n     */\n    update(vectorStoreId, fileId, body, options) {\n        return this._client.post(`/vector_stores/${vectorStoreId}/files/${fileId}`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    list(vectorStoreId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(vectorStoreId, {}, query);\n        }\n        return this._client.getAPIList(`/vector_stores/${vectorStoreId}/files`, VectorStoreFilesPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Delete a vector store file. This will remove the file from the vector store but\n     * the file itself will not be deleted. To delete the file, use the\n     * [delete file](https://platform.openai.com/docs/api-reference/files/delete)\n     * endpoint.\n     */\n    del(vectorStoreId, fileId, options) {\n        return this._client.delete(`/vector_stores/${vectorStoreId}/files/${fileId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Attach a file to the given vector store and wait for it to be processed.\n     */\n    async createAndPoll(vectorStoreId, body, options) {\n        const file = await this.create(vectorStoreId, body, options);\n        return await this.poll(vectorStoreId, file.id, options);\n    }\n    /**\n     * Wait for the vector store file to finish processing.\n     *\n     * Note: this will return even if the file failed to process, you need to check\n     * file.last_error and file.status to handle these cases\n     */\n    async poll(vectorStoreId, fileId, options) {\n        const headers = { ...options?.headers, 'X-Stainless-Poll-Helper': 'true' };\n        if (options?.pollIntervalMs) {\n            headers['X-Stainless-Custom-Poll-Interval'] = options.pollIntervalMs.toString();\n        }\n        while (true) {\n            const fileResponse = await this.retrieve(vectorStoreId, fileId, {\n                ...options,\n                headers,\n            }).withResponse();\n            const file = fileResponse.data;\n            switch (file.status) {\n                case 'in_progress':\n                    let sleepInterval = 5000;\n                    if (options?.pollIntervalMs) {\n                        sleepInterval = options.pollIntervalMs;\n                    }\n                    else {\n                        const headerInterval = fileResponse.response.headers.get('openai-poll-after-ms');\n                        if (headerInterval) {\n                            const headerIntervalMs = parseInt(headerInterval);\n                            if (!isNaN(headerIntervalMs)) {\n                                sleepInterval = headerIntervalMs;\n                            }\n                        }\n                    }\n                    await sleep(sleepInterval);\n                    break;\n                case 'failed':\n                case 'completed':\n                    return file;\n            }\n        }\n    }\n    /**\n     * Upload a file to the `files` API and then attach it to the given vector store.\n     *\n     * Note the file will be asynchronously processed (you can use the alternative\n     * polling helper method to wait for processing to complete).\n     */\n    async upload(vectorStoreId, file, options) {\n        const fileInfo = await this._client.files.create({ file: file, purpose: 'assistants' }, options);\n        return this.create(vectorStoreId, { file_id: fileInfo.id }, options);\n    }\n    /**\n     * Add a file to a vector store and poll until processing is complete.\n     */\n    async uploadAndPoll(vectorStoreId, file, options) {\n        const fileInfo = await this.upload(vectorStoreId, file, options);\n        return await this.poll(vectorStoreId, fileInfo.id, options);\n    }\n    /**\n     * Retrieve the parsed contents of a vector store file.\n     */\n    content(vectorStoreId, fileId, options) {\n        return this._client.getAPIList(`/vector_stores/${vectorStoreId}/files/${fileId}/content`, FileContentResponsesPage, { ...options, headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers } });\n    }\n}\nexport class VectorStoreFilesPage extends CursorPage {\n}\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */\nexport class FileContentResponsesPage extends Page {\n}\nFiles.VectorStoreFilesPage = VectorStoreFilesPage;\nFiles.FileContentResponsesPage = FileContentResponsesPage;\n//# sourceMappingURL=files.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport { isRequestOptions } from \"../../core.mjs\";\nimport { sleep } from \"../../core.mjs\";\nimport { allSettledWithThrow } from \"../../lib/Util.mjs\";\nimport { VectorStoreFilesPage } from \"./files.mjs\";\nexport class FileBatches extends APIResource {\n    /**\n     * Create a vector store file batch.\n     */\n    create(vectorStoreId, body, options) {\n        return this._client.post(`/vector_stores/${vectorStoreId}/file_batches`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Retrieves a vector store file batch.\n     */\n    retrieve(vectorStoreId, batchId, options) {\n        return this._client.get(`/vector_stores/${vectorStoreId}/file_batches/${batchId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Cancel a vector store file batch. This attempts to cancel the processing of\n     * files in this batch as soon as possible.\n     */\n    cancel(vectorStoreId, batchId, options) {\n        return this._client.post(`/vector_stores/${vectorStoreId}/file_batches/${batchId}/cancel`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Create a vector store batch and poll until all files have been processed.\n     */\n    async createAndPoll(vectorStoreId, body, options) {\n        const batch = await this.create(vectorStoreId, body);\n        return await this.poll(vectorStoreId, batch.id, options);\n    }\n    listFiles(vectorStoreId, batchId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.listFiles(vectorStoreId, batchId, {}, query);\n        }\n        return this._client.getAPIList(`/vector_stores/${vectorStoreId}/file_batches/${batchId}/files`, VectorStoreFilesPage, { query, ...options, headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers } });\n    }\n    /**\n     * Wait for the given file batch to be processed.\n     *\n     * Note: this will return even if one of the files failed to process, you need to\n     * check batch.file_counts.failed_count to handle this case.\n     */\n    async poll(vectorStoreId, batchId, options) {\n        const headers = { ...options?.headers, 'X-Stainless-Poll-Helper': 'true' };\n        if (options?.pollIntervalMs) {\n            headers['X-Stainless-Custom-Poll-Interval'] = options.pollIntervalMs.toString();\n        }\n        while (true) {\n            const { data: batch, response } = await this.retrieve(vectorStoreId, batchId, {\n                ...options,\n                headers,\n            }).withResponse();\n            switch (batch.status) {\n                case 'in_progress':\n                    let sleepInterval = 5000;\n                    if (options?.pollIntervalMs) {\n                        sleepInterval = options.pollIntervalMs;\n                    }\n                    else {\n                        const headerInterval = response.headers.get('openai-poll-after-ms');\n                        if (headerInterval) {\n                            const headerIntervalMs = parseInt(headerInterval);\n                            if (!isNaN(headerIntervalMs)) {\n                                sleepInterval = headerIntervalMs;\n                            }\n                        }\n                    }\n                    await sleep(sleepInterval);\n                    break;\n                case 'failed':\n                case 'cancelled':\n                case 'completed':\n                    return batch;\n            }\n        }\n    }\n    /**\n     * Uploads the given files concurrently and then creates a vector store file batch.\n     *\n     * The concurrency limit is configurable using the `maxConcurrency` parameter.\n     */\n    async uploadAndPoll(vectorStoreId, { files, fileIds = [] }, options) {\n        if (files == null || files.length == 0) {\n            throw new Error(`No \\`files\\` provided to process. If you've already uploaded files you should use \\`.createAndPoll()\\` instead`);\n        }\n        const configuredConcurrency = options?.maxConcurrency ?? 5;\n        // We cap the number of workers at the number of files (so we don't start any unnecessary workers)\n        const concurrencyLimit = Math.min(configuredConcurrency, files.length);\n        const client = this._client;\n        const fileIterator = files.values();\n        const allFileIds = [...fileIds];\n        // This code is based on this design. The libraries don't accommodate our environment limits.\n        // https://stackoverflow.com/questions/40639432/what-is-the-best-way-to-limit-concurrency-when-using-es6s-promise-all\n        async function processFiles(iterator) {\n            for (let item of iterator) {\n                const fileObj = await client.files.create({ file: item, purpose: 'assistants' }, options);\n                allFileIds.push(fileObj.id);\n            }\n        }\n        // Start workers to process results\n        const workers = Array(concurrencyLimit).fill(fileIterator).map(processFiles);\n        // Wait for all processing to complete.\n        await allSettledWithThrow(workers);\n        return await this.createAndPoll(vectorStoreId, {\n            file_ids: allFileIds,\n        });\n    }\n}\nexport { VectorStoreFilesPage };\n//# sourceMappingURL=file-batches.mjs.map","/**\n * Like `Promise.allSettled()` but throws an error if any promises are rejected.\n */\nexport const allSettledWithThrow = async (promises) => {\n    const results = await Promise.allSettled(promises);\n    const rejected = results.filter((result) => result.status === 'rejected');\n    if (rejected.length) {\n        for (const result of rejected) {\n            console.error(result.reason);\n        }\n        throw new Error(`${rejected.length} promise(s) failed - see the above errors`);\n    }\n    // Note: TS was complaining about using `.filter().map()` here for some reason\n    const values = [];\n    for (const result of results) {\n        if (result.status === 'fulfilled') {\n            values.push(result.value);\n        }\n    }\n    return values;\n};\n//# sourceMappingURL=Util.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport { isRequestOptions } from \"../../core.mjs\";\nimport * as FileBatchesAPI from \"./file-batches.mjs\";\nimport { FileBatches, } from \"./file-batches.mjs\";\nimport * as FilesAPI from \"./files.mjs\";\nimport { FileContentResponsesPage, Files, VectorStoreFilesPage, } from \"./files.mjs\";\nimport { CursorPage, Page } from \"../../pagination.mjs\";\nexport class VectorStores extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.files = new FilesAPI.Files(this._client);\n        this.fileBatches = new FileBatchesAPI.FileBatches(this._client);\n    }\n    /**\n     * Create a vector store.\n     */\n    create(body, options) {\n        return this._client.post('/vector_stores', {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Retrieves a vector store.\n     */\n    retrieve(vectorStoreId, options) {\n        return this._client.get(`/vector_stores/${vectorStoreId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Modifies a vector store.\n     */\n    update(vectorStoreId, body, options) {\n        return this._client.post(`/vector_stores/${vectorStoreId}`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    list(query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/vector_stores', VectorStoresPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Delete a vector store.\n     */\n    del(vectorStoreId, options) {\n        return this._client.delete(`/vector_stores/${vectorStoreId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Search a vector store for relevant chunks based on a query and file attributes\n     * filter.\n     */\n    search(vectorStoreId, body, options) {\n        return this._client.getAPIList(`/vector_stores/${vectorStoreId}/search`, VectorStoreSearchResponsesPage, {\n            body,\n            method: 'post',\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n}\nexport class VectorStoresPage extends CursorPage {\n}\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */\nexport class VectorStoreSearchResponsesPage extends Page {\n}\nVectorStores.VectorStoresPage = VectorStoresPage;\nVectorStores.VectorStoreSearchResponsesPage = VectorStoreSearchResponsesPage;\nVectorStores.Files = Files;\nVectorStores.VectorStoreFilesPage = VectorStoreFilesPage;\nVectorStores.FileContentResponsesPage = FileContentResponsesPage;\nVectorStores.FileBatches = FileBatches;\n//# sourceMappingURL=vector-stores.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport { isRequestOptions } from \"../../core.mjs\";\nimport { CursorPage } from \"../../pagination.mjs\";\nexport class Assistants extends APIResource {\n    /**\n     * Create an assistant with a model and instructions.\n     */\n    create(body, options) {\n        return this._client.post('/assistants', {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Retrieves an assistant.\n     */\n    retrieve(assistantId, options) {\n        return this._client.get(`/assistants/${assistantId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Modifies an assistant.\n     */\n    update(assistantId, body, options) {\n        return this._client.post(`/assistants/${assistantId}`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    list(query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/assistants', AssistantsPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Delete an assistant.\n     */\n    del(assistantId, options) {\n        return this._client.delete(`/assistants/${assistantId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n}\nexport class AssistantsPage extends CursorPage {\n}\nAssistants.AssistantsPage = AssistantsPage;\n//# sourceMappingURL=assistants.mjs.map","export function isRunnableFunctionWithParse(fn) {\n    return typeof fn.parse === 'function';\n}\n/**\n * This is helper class for passing a `function` and `parse` where the `function`\n * argument type matches the `parse` return type.\n *\n * @deprecated - please use ParsingToolFunction instead.\n */\nexport class ParsingFunction {\n    constructor(input) {\n        this.function = input.function;\n        this.parse = input.parse;\n        this.parameters = input.parameters;\n        this.description = input.description;\n        this.name = input.name;\n    }\n}\n/**\n * This is helper class for passing a `function` and `parse` where the `function`\n * argument type matches the `parse` return type.\n */\nexport class ParsingToolFunction {\n    constructor(input) {\n        this.type = 'function';\n        this.function = input;\n    }\n}\n//# sourceMappingURL=RunnableFunction.mjs.map","export const isAssistantMessage = (message) => {\n    return message?.role === 'assistant';\n};\nexport const isFunctionMessage = (message) => {\n    return message?.role === 'function';\n};\nexport const isToolMessage = (message) => {\n    return message?.role === 'tool';\n};\nexport function isPresent(obj) {\n    return obj != null;\n}\n//# sourceMappingURL=chatCompletionUtils.mjs.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _EventStream_instances, _EventStream_connectedPromise, _EventStream_resolveConnectedPromise, _EventStream_rejectConnectedPromise, _EventStream_endPromise, _EventStream_resolveEndPromise, _EventStream_rejectEndPromise, _EventStream_listeners, _EventStream_ended, _EventStream_errored, _EventStream_aborted, _EventStream_catchingPromiseCreated, _EventStream_handleError;\nimport { APIUserAbortError, OpenAIError } from \"../error.mjs\";\nexport class EventStream {\n    constructor() {\n        _EventStream_instances.add(this);\n        this.controller = new AbortController();\n        _EventStream_connectedPromise.set(this, void 0);\n        _EventStream_resolveConnectedPromise.set(this, () => { });\n        _EventStream_rejectConnectedPromise.set(this, () => { });\n        _EventStream_endPromise.set(this, void 0);\n        _EventStream_resolveEndPromise.set(this, () => { });\n        _EventStream_rejectEndPromise.set(this, () => { });\n        _EventStream_listeners.set(this, {});\n        _EventStream_ended.set(this, false);\n        _EventStream_errored.set(this, false);\n        _EventStream_aborted.set(this, false);\n        _EventStream_catchingPromiseCreated.set(this, false);\n        __classPrivateFieldSet(this, _EventStream_connectedPromise, new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _EventStream_resolveConnectedPromise, resolve, \"f\");\n            __classPrivateFieldSet(this, _EventStream_rejectConnectedPromise, reject, \"f\");\n        }), \"f\");\n        __classPrivateFieldSet(this, _EventStream_endPromise, new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _EventStream_resolveEndPromise, resolve, \"f\");\n            __classPrivateFieldSet(this, _EventStream_rejectEndPromise, reject, \"f\");\n        }), \"f\");\n        // Don't let these promises cause unhandled rejection errors.\n        // we will manually cause an unhandled rejection error later\n        // if the user hasn't registered any error listener or called\n        // any promise-returning method.\n        __classPrivateFieldGet(this, _EventStream_connectedPromise, \"f\").catch(() => { });\n        __classPrivateFieldGet(this, _EventStream_endPromise, \"f\").catch(() => { });\n    }\n    _run(executor) {\n        // Unfortunately if we call `executor()` immediately we get runtime errors about\n        // references to `this` before the `super()` constructor call returns.\n        setTimeout(() => {\n            executor().then(() => {\n                this._emitFinal();\n                this._emit('end');\n            }, __classPrivateFieldGet(this, _EventStream_instances, \"m\", _EventStream_handleError).bind(this));\n        }, 0);\n    }\n    _connected() {\n        if (this.ended)\n            return;\n        __classPrivateFieldGet(this, _EventStream_resolveConnectedPromise, \"f\").call(this);\n        this._emit('connect');\n    }\n    get ended() {\n        return __classPrivateFieldGet(this, _EventStream_ended, \"f\");\n    }\n    get errored() {\n        return __classPrivateFieldGet(this, _EventStream_errored, \"f\");\n    }\n    get aborted() {\n        return __classPrivateFieldGet(this, _EventStream_aborted, \"f\");\n    }\n    abort() {\n        this.controller.abort();\n    }\n    /**\n     * Adds the listener function to the end of the listeners array for the event.\n     * No checks are made to see if the listener has already been added. Multiple calls passing\n     * the same combination of event and listener will result in the listener being added, and\n     * called, multiple times.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */\n    on(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] || (__classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] = []);\n        listeners.push({ listener });\n        return this;\n    }\n    /**\n     * Removes the specified listener from the listener array for the event.\n     * off() will remove, at most, one instance of a listener from the listener array. If any single\n     * listener has been added multiple times to the listener array for the specified event, then\n     * off() must be called multiple times to remove each instance.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */\n    off(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event];\n        if (!listeners)\n            return this;\n        const index = listeners.findIndex((l) => l.listener === listener);\n        if (index >= 0)\n            listeners.splice(index, 1);\n        return this;\n    }\n    /**\n     * Adds a one-time listener function for the event. The next time the event is triggered,\n     * this listener is removed and then invoked.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */\n    once(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] || (__classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] = []);\n        listeners.push({ listener, once: true });\n        return this;\n    }\n    /**\n     * This is similar to `.once()`, but returns a Promise that resolves the next time\n     * the event is triggered, instead of calling a listener callback.\n     * @returns a Promise that resolves the next time given event is triggered,\n     * or rejects if an error is emitted.  (If you request the 'error' event,\n     * returns a promise that resolves with the error).\n     *\n     * Example:\n     *\n     *   const message = await stream.emitted('message') // rejects if the stream errors\n     */\n    emitted(event) {\n        return new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _EventStream_catchingPromiseCreated, true, \"f\");\n            if (event !== 'error')\n                this.once('error', reject);\n            this.once(event, resolve);\n        });\n    }\n    async done() {\n        __classPrivateFieldSet(this, _EventStream_catchingPromiseCreated, true, \"f\");\n        await __classPrivateFieldGet(this, _EventStream_endPromise, \"f\");\n    }\n    _emit(event, ...args) {\n        // make sure we don't emit any events after end\n        if (__classPrivateFieldGet(this, _EventStream_ended, \"f\")) {\n            return;\n        }\n        if (event === 'end') {\n            __classPrivateFieldSet(this, _EventStream_ended, true, \"f\");\n            __classPrivateFieldGet(this, _EventStream_resolveEndPromise, \"f\").call(this);\n        }\n        const listeners = __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event];\n        if (listeners) {\n            __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] = listeners.filter((l) => !l.once);\n            listeners.forEach(({ listener }) => listener(...args));\n        }\n        if (event === 'abort') {\n            const error = args[0];\n            if (!__classPrivateFieldGet(this, _EventStream_catchingPromiseCreated, \"f\") && !listeners?.length) {\n                Promise.reject(error);\n            }\n            __classPrivateFieldGet(this, _EventStream_rejectConnectedPromise, \"f\").call(this, error);\n            __classPrivateFieldGet(this, _EventStream_rejectEndPromise, \"f\").call(this, error);\n            this._emit('end');\n            return;\n        }\n        if (event === 'error') {\n            // NOTE: _emit('error', error) should only be called from #handleError().\n            const error = args[0];\n            if (!__classPrivateFieldGet(this, _EventStream_catchingPromiseCreated, \"f\") && !listeners?.length) {\n                // Trigger an unhandled rejection if the user hasn't registered any error handlers.\n                // If you are seeing stack traces here, make sure to handle errors via either:\n                // - runner.on('error', () => ...)\n                // - await runner.done()\n                // - await runner.finalChatCompletion()\n                // - etc.\n                Promise.reject(error);\n            }\n            __classPrivateFieldGet(this, _EventStream_rejectConnectedPromise, \"f\").call(this, error);\n            __classPrivateFieldGet(this, _EventStream_rejectEndPromise, \"f\").call(this, error);\n            this._emit('end');\n        }\n    }\n    _emitFinal() { }\n}\n_EventStream_connectedPromise = new WeakMap(), _EventStream_resolveConnectedPromise = new WeakMap(), _EventStream_rejectConnectedPromise = new WeakMap(), _EventStream_endPromise = new WeakMap(), _EventStream_resolveEndPromise = new WeakMap(), _EventStream_rejectEndPromise = new WeakMap(), _EventStream_listeners = new WeakMap(), _EventStream_ended = new WeakMap(), _EventStream_errored = new WeakMap(), _EventStream_aborted = new WeakMap(), _EventStream_catchingPromiseCreated = new WeakMap(), _EventStream_instances = new WeakSet(), _EventStream_handleError = function _EventStream_handleError(error) {\n    __classPrivateFieldSet(this, _EventStream_errored, true, \"f\");\n    if (error instanceof Error && error.name === 'AbortError') {\n        error = new APIUserAbortError();\n    }\n    if (error instanceof APIUserAbortError) {\n        __classPrivateFieldSet(this, _EventStream_aborted, true, \"f\");\n        return this._emit('abort', error);\n    }\n    if (error instanceof OpenAIError) {\n        return this._emit('error', error);\n    }\n    if (error instanceof Error) {\n        const openAIError = new OpenAIError(error.message);\n        // @ts-ignore\n        openAIError.cause = error;\n        return this._emit('error', openAIError);\n    }\n    return this._emit('error', new OpenAIError(String(error)));\n};\n//# sourceMappingURL=EventStream.mjs.map","import { ContentFilterFinishReasonError, LengthFinishReasonError, OpenAIError } from \"../error.mjs\";\nexport function makeParseableResponseFormat(response_format, parser) {\n    const obj = { ...response_format };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: 'auto-parseable-response-format',\n            enumerable: false,\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false,\n        },\n    });\n    return obj;\n}\nexport function makeParseableTextFormat(response_format, parser) {\n    const obj = { ...response_format };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: 'auto-parseable-response-format',\n            enumerable: false,\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false,\n        },\n    });\n    return obj;\n}\nexport function isAutoParsableResponseFormat(response_format) {\n    return response_format?.['$brand'] === 'auto-parseable-response-format';\n}\nexport function makeParseableTool(tool, { parser, callback, }) {\n    const obj = { ...tool };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: 'auto-parseable-tool',\n            enumerable: false,\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false,\n        },\n        $callback: {\n            value: callback,\n            enumerable: false,\n        },\n    });\n    return obj;\n}\nexport function isAutoParsableTool(tool) {\n    return tool?.['$brand'] === 'auto-parseable-tool';\n}\nexport function maybeParseChatCompletion(completion, params) {\n    if (!params || !hasAutoParseableInput(params)) {\n        return {\n            ...completion,\n            choices: completion.choices.map((choice) => ({\n                ...choice,\n                message: {\n                    ...choice.message,\n                    parsed: null,\n                    ...(choice.message.tool_calls ?\n                        {\n                            tool_calls: choice.message.tool_calls,\n                        }\n                        : undefined),\n                },\n            })),\n        };\n    }\n    return parseChatCompletion(completion, params);\n}\nexport function parseChatCompletion(completion, params) {\n    const choices = completion.choices.map((choice) => {\n        if (choice.finish_reason === 'length') {\n            throw new LengthFinishReasonError();\n        }\n        if (choice.finish_reason === 'content_filter') {\n            throw new ContentFilterFinishReasonError();\n        }\n        return {\n            ...choice,\n            message: {\n                ...choice.message,\n                ...(choice.message.tool_calls ?\n                    {\n                        tool_calls: choice.message.tool_calls?.map((toolCall) => parseToolCall(params, toolCall)) ?? undefined,\n                    }\n                    : undefined),\n                parsed: choice.message.content && !choice.message.refusal ?\n                    parseResponseFormat(params, choice.message.content)\n                    : null,\n            },\n        };\n    });\n    return { ...completion, choices };\n}\nfunction parseResponseFormat(params, content) {\n    if (params.response_format?.type !== 'json_schema') {\n        return null;\n    }\n    if (params.response_format?.type === 'json_schema') {\n        if ('$parseRaw' in params.response_format) {\n            const response_format = params.response_format;\n            return response_format.$parseRaw(content);\n        }\n        return JSON.parse(content);\n    }\n    return null;\n}\nfunction parseToolCall(params, toolCall) {\n    const inputTool = params.tools?.find((inputTool) => inputTool.function?.name === toolCall.function.name);\n    return {\n        ...toolCall,\n        function: {\n            ...toolCall.function,\n            parsed_arguments: isAutoParsableTool(inputTool) ? inputTool.$parseRaw(toolCall.function.arguments)\n                : inputTool?.function.strict ? JSON.parse(toolCall.function.arguments)\n                    : null,\n        },\n    };\n}\nexport function shouldParseToolCall(params, toolCall) {\n    if (!params) {\n        return false;\n    }\n    const inputTool = params.tools?.find((inputTool) => inputTool.function?.name === toolCall.function.name);\n    return isAutoParsableTool(inputTool) || inputTool?.function.strict || false;\n}\nexport function hasAutoParseableInput(params) {\n    if (isAutoParsableResponseFormat(params.response_format)) {\n        return true;\n    }\n    return (params.tools?.some((t) => isAutoParsableTool(t) || (t.type === 'function' && t.function.strict === true)) ?? false);\n}\nexport function validateInputTools(tools) {\n    for (const tool of tools ?? []) {\n        if (tool.type !== 'function') {\n            throw new OpenAIError(`Currently only \\`function\\` tool types support auto-parsing; Received \\`${tool.type}\\``);\n        }\n        if (tool.function.strict !== true) {\n            throw new OpenAIError(`The \\`${tool.function.name}\\` tool is not marked with \\`strict: true\\`. Only strict function tools can be auto-parsed`);\n        }\n    }\n}\n//# sourceMappingURL=parser.mjs.map","var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _AbstractChatCompletionRunner_instances, _AbstractChatCompletionRunner_getFinalContent, _AbstractChatCompletionRunner_getFinalMessage, _AbstractChatCompletionRunner_getFinalFunctionCall, _AbstractChatCompletionRunner_getFinalFunctionCallResult, _AbstractChatCompletionRunner_calculateTotalUsage, _AbstractChatCompletionRunner_validateParams, _AbstractChatCompletionRunner_stringifyFunctionCallResult;\nimport { OpenAIError } from \"../error.mjs\";\nimport { isRunnableFunctionWithParse, } from \"./RunnableFunction.mjs\";\nimport { isAssistantMessage, isFunctionMessage, isToolMessage } from \"./chatCompletionUtils.mjs\";\nimport { EventStream } from \"./EventStream.mjs\";\nimport { isAutoParsableTool, parseChatCompletion } from \"../lib/parser.mjs\";\nconst DEFAULT_MAX_CHAT_COMPLETIONS = 10;\nexport class AbstractChatCompletionRunner extends EventStream {\n    constructor() {\n        super(...arguments);\n        _AbstractChatCompletionRunner_instances.add(this);\n        this._chatCompletions = [];\n        this.messages = [];\n    }\n    _addChatCompletion(chatCompletion) {\n        this._chatCompletions.push(chatCompletion);\n        this._emit('chatCompletion', chatCompletion);\n        const message = chatCompletion.choices[0]?.message;\n        if (message)\n            this._addMessage(message);\n        return chatCompletion;\n    }\n    _addMessage(message, emit = true) {\n        if (!('content' in message))\n            message.content = null;\n        this.messages.push(message);\n        if (emit) {\n            this._emit('message', message);\n            if ((isFunctionMessage(message) || isToolMessage(message)) && message.content) {\n                // Note, this assumes that {role: 'tool', content: …} is always the result of a call of tool of type=function.\n                this._emit('functionCallResult', message.content);\n            }\n            else if (isAssistantMessage(message) && message.function_call) {\n                this._emit('functionCall', message.function_call);\n            }\n            else if (isAssistantMessage(message) && message.tool_calls) {\n                for (const tool_call of message.tool_calls) {\n                    if (tool_call.type === 'function') {\n                        this._emit('functionCall', tool_call.function);\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * @returns a promise that resolves with the final ChatCompletion, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletion.\n     */\n    async finalChatCompletion() {\n        await this.done();\n        const completion = this._chatCompletions[this._chatCompletions.length - 1];\n        if (!completion)\n            throw new OpenAIError('stream ended without producing a ChatCompletion');\n        return completion;\n    }\n    /**\n     * @returns a promise that resolves with the content of the final ChatCompletionMessage, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */\n    async finalContent() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalContent).call(this);\n    }\n    /**\n     * @returns a promise that resolves with the the final assistant ChatCompletionMessage response,\n     * or rejects if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */\n    async finalMessage() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this);\n    }\n    /**\n     * @returns a promise that resolves with the content of the final FunctionCall, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */\n    async finalFunctionCall() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionCall).call(this);\n    }\n    async finalFunctionCallResult() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionCallResult).call(this);\n    }\n    async totalUsage() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_calculateTotalUsage).call(this);\n    }\n    allChatCompletions() {\n        return [...this._chatCompletions];\n    }\n    _emitFinal() {\n        const completion = this._chatCompletions[this._chatCompletions.length - 1];\n        if (completion)\n            this._emit('finalChatCompletion', completion);\n        const finalMessage = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this);\n        if (finalMessage)\n            this._emit('finalMessage', finalMessage);\n        const finalContent = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalContent).call(this);\n        if (finalContent)\n            this._emit('finalContent', finalContent);\n        const finalFunctionCall = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionCall).call(this);\n        if (finalFunctionCall)\n            this._emit('finalFunctionCall', finalFunctionCall);\n        const finalFunctionCallResult = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionCallResult).call(this);\n        if (finalFunctionCallResult != null)\n            this._emit('finalFunctionCallResult', finalFunctionCallResult);\n        if (this._chatCompletions.some((c) => c.usage)) {\n            this._emit('totalUsage', __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_calculateTotalUsage).call(this));\n        }\n    }\n    async _createChatCompletion(client, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_validateParams).call(this, params);\n        const chatCompletion = await client.chat.completions.create({ ...params, stream: false }, { ...options, signal: this.controller.signal });\n        this._connected();\n        return this._addChatCompletion(parseChatCompletion(chatCompletion, params));\n    }\n    async _runChatCompletion(client, params, options) {\n        for (const message of params.messages) {\n            this._addMessage(message, false);\n        }\n        return await this._createChatCompletion(client, params, options);\n    }\n    async _runFunctions(client, params, options) {\n        const role = 'function';\n        const { function_call = 'auto', stream, ...restParams } = params;\n        const singleFunctionToCall = typeof function_call !== 'string' && function_call?.name;\n        const { maxChatCompletions = DEFAULT_MAX_CHAT_COMPLETIONS } = options || {};\n        const functionsByName = {};\n        for (const f of params.functions) {\n            functionsByName[f.name || f.function.name] = f;\n        }\n        const functions = params.functions.map((f) => ({\n            name: f.name || f.function.name,\n            parameters: f.parameters,\n            description: f.description,\n        }));\n        for (const message of params.messages) {\n            this._addMessage(message, false);\n        }\n        for (let i = 0; i < maxChatCompletions; ++i) {\n            const chatCompletion = await this._createChatCompletion(client, {\n                ...restParams,\n                function_call,\n                functions,\n                messages: [...this.messages],\n            }, options);\n            const message = chatCompletion.choices[0]?.message;\n            if (!message) {\n                throw new OpenAIError(`missing message in ChatCompletion response`);\n            }\n            if (!message.function_call)\n                return;\n            const { name, arguments: args } = message.function_call;\n            const fn = functionsByName[name];\n            if (!fn) {\n                const content = `Invalid function_call: ${JSON.stringify(name)}. Available options are: ${functions\n                    .map((f) => JSON.stringify(f.name))\n                    .join(', ')}. Please try again`;\n                this._addMessage({ role, name, content });\n                continue;\n            }\n            else if (singleFunctionToCall && singleFunctionToCall !== name) {\n                const content = `Invalid function_call: ${JSON.stringify(name)}. ${JSON.stringify(singleFunctionToCall)} requested. Please try again`;\n                this._addMessage({ role, name, content });\n                continue;\n            }\n            let parsed;\n            try {\n                parsed = isRunnableFunctionWithParse(fn) ? await fn.parse(args) : args;\n            }\n            catch (error) {\n                this._addMessage({\n                    role,\n                    name,\n                    content: error instanceof Error ? error.message : String(error),\n                });\n                continue;\n            }\n            // @ts-expect-error it can't rule out `never` type.\n            const rawContent = await fn.function(parsed, this);\n            const content = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_stringifyFunctionCallResult).call(this, rawContent);\n            this._addMessage({ role, name, content });\n            if (singleFunctionToCall)\n                return;\n        }\n    }\n    async _runTools(client, params, options) {\n        const role = 'tool';\n        const { tool_choice = 'auto', stream, ...restParams } = params;\n        const singleFunctionToCall = typeof tool_choice !== 'string' && tool_choice?.function?.name;\n        const { maxChatCompletions = DEFAULT_MAX_CHAT_COMPLETIONS } = options || {};\n        // TODO(someday): clean this logic up\n        const inputTools = params.tools.map((tool) => {\n            if (isAutoParsableTool(tool)) {\n                if (!tool.$callback) {\n                    throw new OpenAIError('Tool given to `.runTools()` that does not have an associated function');\n                }\n                return {\n                    type: 'function',\n                    function: {\n                        function: tool.$callback,\n                        name: tool.function.name,\n                        description: tool.function.description || '',\n                        parameters: tool.function.parameters,\n                        parse: tool.$parseRaw,\n                        strict: true,\n                    },\n                };\n            }\n            return tool;\n        });\n        const functionsByName = {};\n        for (const f of inputTools) {\n            if (f.type === 'function') {\n                functionsByName[f.function.name || f.function.function.name] = f.function;\n            }\n        }\n        const tools = 'tools' in params ?\n            inputTools.map((t) => t.type === 'function' ?\n                {\n                    type: 'function',\n                    function: {\n                        name: t.function.name || t.function.function.name,\n                        parameters: t.function.parameters,\n                        description: t.function.description,\n                        strict: t.function.strict,\n                    },\n                }\n                : t)\n            : undefined;\n        for (const message of params.messages) {\n            this._addMessage(message, false);\n        }\n        for (let i = 0; i < maxChatCompletions; ++i) {\n            const chatCompletion = await this._createChatCompletion(client, {\n                ...restParams,\n                tool_choice,\n                tools,\n                messages: [...this.messages],\n            }, options);\n            const message = chatCompletion.choices[0]?.message;\n            if (!message) {\n                throw new OpenAIError(`missing message in ChatCompletion response`);\n            }\n            if (!message.tool_calls?.length) {\n                return;\n            }\n            for (const tool_call of message.tool_calls) {\n                if (tool_call.type !== 'function')\n                    continue;\n                const tool_call_id = tool_call.id;\n                const { name, arguments: args } = tool_call.function;\n                const fn = functionsByName[name];\n                if (!fn) {\n                    const content = `Invalid tool_call: ${JSON.stringify(name)}. Available options are: ${Object.keys(functionsByName)\n                        .map((name) => JSON.stringify(name))\n                        .join(', ')}. Please try again`;\n                    this._addMessage({ role, tool_call_id, content });\n                    continue;\n                }\n                else if (singleFunctionToCall && singleFunctionToCall !== name) {\n                    const content = `Invalid tool_call: ${JSON.stringify(name)}. ${JSON.stringify(singleFunctionToCall)} requested. Please try again`;\n                    this._addMessage({ role, tool_call_id, content });\n                    continue;\n                }\n                let parsed;\n                try {\n                    parsed = isRunnableFunctionWithParse(fn) ? await fn.parse(args) : args;\n                }\n                catch (error) {\n                    const content = error instanceof Error ? error.message : String(error);\n                    this._addMessage({ role, tool_call_id, content });\n                    continue;\n                }\n                // @ts-expect-error it can't rule out `never` type.\n                const rawContent = await fn.function(parsed, this);\n                const content = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_stringifyFunctionCallResult).call(this, rawContent);\n                this._addMessage({ role, tool_call_id, content });\n                if (singleFunctionToCall) {\n                    return;\n                }\n            }\n        }\n        return;\n    }\n}\n_AbstractChatCompletionRunner_instances = new WeakSet(), _AbstractChatCompletionRunner_getFinalContent = function _AbstractChatCompletionRunner_getFinalContent() {\n    return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this).content ?? null;\n}, _AbstractChatCompletionRunner_getFinalMessage = function _AbstractChatCompletionRunner_getFinalMessage() {\n    let i = this.messages.length;\n    while (i-- > 0) {\n        const message = this.messages[i];\n        if (isAssistantMessage(message)) {\n            const { function_call, ...rest } = message;\n            // TODO: support audio here\n            const ret = {\n                ...rest,\n                content: message.content ?? null,\n                refusal: message.refusal ?? null,\n            };\n            if (function_call) {\n                ret.function_call = function_call;\n            }\n            return ret;\n        }\n    }\n    throw new OpenAIError('stream ended without producing a ChatCompletionMessage with role=assistant');\n}, _AbstractChatCompletionRunner_getFinalFunctionCall = function _AbstractChatCompletionRunner_getFinalFunctionCall() {\n    for (let i = this.messages.length - 1; i >= 0; i--) {\n        const message = this.messages[i];\n        if (isAssistantMessage(message) && message?.function_call) {\n            return message.function_call;\n        }\n        if (isAssistantMessage(message) && message?.tool_calls?.length) {\n            return message.tool_calls.at(-1)?.function;\n        }\n    }\n    return;\n}, _AbstractChatCompletionRunner_getFinalFunctionCallResult = function _AbstractChatCompletionRunner_getFinalFunctionCallResult() {\n    for (let i = this.messages.length - 1; i >= 0; i--) {\n        const message = this.messages[i];\n        if (isFunctionMessage(message) && message.content != null) {\n            return message.content;\n        }\n        if (isToolMessage(message) &&\n            message.content != null &&\n            typeof message.content === 'string' &&\n            this.messages.some((x) => x.role === 'assistant' &&\n                x.tool_calls?.some((y) => y.type === 'function' && y.id === message.tool_call_id))) {\n            return message.content;\n        }\n    }\n    return;\n}, _AbstractChatCompletionRunner_calculateTotalUsage = function _AbstractChatCompletionRunner_calculateTotalUsage() {\n    const total = {\n        completion_tokens: 0,\n        prompt_tokens: 0,\n        total_tokens: 0,\n    };\n    for (const { usage } of this._chatCompletions) {\n        if (usage) {\n            total.completion_tokens += usage.completion_tokens;\n            total.prompt_tokens += usage.prompt_tokens;\n            total.total_tokens += usage.total_tokens;\n        }\n    }\n    return total;\n}, _AbstractChatCompletionRunner_validateParams = function _AbstractChatCompletionRunner_validateParams(params) {\n    if (params.n != null && params.n > 1) {\n        throw new OpenAIError('ChatCompletion convenience helpers only support n=1 at this time. To use n>1, please use chat.completions.create() directly.');\n    }\n}, _AbstractChatCompletionRunner_stringifyFunctionCallResult = function _AbstractChatCompletionRunner_stringifyFunctionCallResult(rawContent) {\n    return (typeof rawContent === 'string' ? rawContent\n        : rawContent === undefined ? 'undefined'\n            : JSON.stringify(rawContent));\n};\n//# sourceMappingURL=AbstractChatCompletionRunner.mjs.map","import { AbstractChatCompletionRunner, } from \"./AbstractChatCompletionRunner.mjs\";\nimport { isAssistantMessage } from \"./chatCompletionUtils.mjs\";\nexport class ChatCompletionRunner extends AbstractChatCompletionRunner {\n    /** @deprecated - please use `runTools` instead. */\n    static runFunctions(client, params, options) {\n        const runner = new ChatCompletionRunner();\n        const opts = {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'runFunctions' },\n        };\n        runner._run(() => runner._runFunctions(client, params, opts));\n        return runner;\n    }\n    static runTools(client, params, options) {\n        const runner = new ChatCompletionRunner();\n        const opts = {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'runTools' },\n        };\n        runner._run(() => runner._runTools(client, params, opts));\n        return runner;\n    }\n    _addMessage(message, emit = true) {\n        super._addMessage(message, emit);\n        if (isAssistantMessage(message) && message.content) {\n            this._emit('content', message.content);\n        }\n    }\n}\n//# sourceMappingURL=ChatCompletionRunner.mjs.map","const STR = 0b000000001;\nconst NUM = 0b000000010;\nconst ARR = 0b000000100;\nconst OBJ = 0b000001000;\nconst NULL = 0b000010000;\nconst BOOL = 0b000100000;\nconst NAN = 0b001000000;\nconst INFINITY = 0b010000000;\nconst MINUS_INFINITY = 0b100000000;\nconst INF = INFINITY | MINUS_INFINITY;\nconst SPECIAL = NULL | BOOL | INF | NAN;\nconst ATOM = STR | NUM | SPECIAL;\nconst COLLECTION = ARR | OBJ;\nconst ALL = ATOM | COLLECTION;\nconst Allow = {\n    STR,\n    NUM,\n    ARR,\n    OBJ,\n    NULL,\n    BOOL,\n    NAN,\n    INFINITY,\n    MINUS_INFINITY,\n    INF,\n    SPECIAL,\n    ATOM,\n    COLLECTION,\n    ALL,\n};\n// The JSON string segment was unable to be parsed completely\nclass PartialJSON extends Error {\n}\nclass MalformedJSON extends Error {\n}\n/**\n * Parse incomplete JSON\n * @param {string} jsonString Partial JSON to be parsed\n * @param {number} allowPartial Specify what types are allowed to be partial, see {@link Allow} for details\n * @returns The parsed JSON\n * @throws {PartialJSON} If the JSON is incomplete (related to the `allow` parameter)\n * @throws {MalformedJSON} If the JSON is malformed\n */\nfunction parseJSON(jsonString, allowPartial = Allow.ALL) {\n    if (typeof jsonString !== 'string') {\n        throw new TypeError(`expecting str, got ${typeof jsonString}`);\n    }\n    if (!jsonString.trim()) {\n        throw new Error(`${jsonString} is empty`);\n    }\n    return _parseJSON(jsonString.trim(), allowPartial);\n}\nconst _parseJSON = (jsonString, allow) => {\n    const length = jsonString.length;\n    let index = 0;\n    const markPartialJSON = (msg) => {\n        throw new PartialJSON(`${msg} at position ${index}`);\n    };\n    const throwMalformedError = (msg) => {\n        throw new MalformedJSON(`${msg} at position ${index}`);\n    };\n    const parseAny = () => {\n        skipBlank();\n        if (index >= length)\n            markPartialJSON('Unexpected end of input');\n        if (jsonString[index] === '\"')\n            return parseStr();\n        if (jsonString[index] === '{')\n            return parseObj();\n        if (jsonString[index] === '[')\n            return parseArr();\n        if (jsonString.substring(index, index + 4) === 'null' ||\n            (Allow.NULL & allow && length - index < 4 && 'null'.startsWith(jsonString.substring(index)))) {\n            index += 4;\n            return null;\n        }\n        if (jsonString.substring(index, index + 4) === 'true' ||\n            (Allow.BOOL & allow && length - index < 4 && 'true'.startsWith(jsonString.substring(index)))) {\n            index += 4;\n            return true;\n        }\n        if (jsonString.substring(index, index + 5) === 'false' ||\n            (Allow.BOOL & allow && length - index < 5 && 'false'.startsWith(jsonString.substring(index)))) {\n            index += 5;\n            return false;\n        }\n        if (jsonString.substring(index, index + 8) === 'Infinity' ||\n            (Allow.INFINITY & allow && length - index < 8 && 'Infinity'.startsWith(jsonString.substring(index)))) {\n            index += 8;\n            return Infinity;\n        }\n        if (jsonString.substring(index, index + 9) === '-Infinity' ||\n            (Allow.MINUS_INFINITY & allow &&\n                1 < length - index &&\n                length - index < 9 &&\n                '-Infinity'.startsWith(jsonString.substring(index)))) {\n            index += 9;\n            return -Infinity;\n        }\n        if (jsonString.substring(index, index + 3) === 'NaN' ||\n            (Allow.NAN & allow && length - index < 3 && 'NaN'.startsWith(jsonString.substring(index)))) {\n            index += 3;\n            return NaN;\n        }\n        return parseNum();\n    };\n    const parseStr = () => {\n        const start = index;\n        let escape = false;\n        index++; // skip initial quote\n        while (index < length && (jsonString[index] !== '\"' || (escape && jsonString[index - 1] === '\\\\'))) {\n            escape = jsonString[index] === '\\\\' ? !escape : false;\n            index++;\n        }\n        if (jsonString.charAt(index) == '\"') {\n            try {\n                return JSON.parse(jsonString.substring(start, ++index - Number(escape)));\n            }\n            catch (e) {\n                throwMalformedError(String(e));\n            }\n        }\n        else if (Allow.STR & allow) {\n            try {\n                return JSON.parse(jsonString.substring(start, index - Number(escape)) + '\"');\n            }\n            catch (e) {\n                // SyntaxError: Invalid escape sequence\n                return JSON.parse(jsonString.substring(start, jsonString.lastIndexOf('\\\\')) + '\"');\n            }\n        }\n        markPartialJSON('Unterminated string literal');\n    };\n    const parseObj = () => {\n        index++; // skip initial brace\n        skipBlank();\n        const obj = {};\n        try {\n            while (jsonString[index] !== '}') {\n                skipBlank();\n                if (index >= length && Allow.OBJ & allow)\n                    return obj;\n                const key = parseStr();\n                skipBlank();\n                index++; // skip colon\n                try {\n                    const value = parseAny();\n                    Object.defineProperty(obj, key, { value, writable: true, enumerable: true, configurable: true });\n                }\n                catch (e) {\n                    if (Allow.OBJ & allow)\n                        return obj;\n                    else\n                        throw e;\n                }\n                skipBlank();\n                if (jsonString[index] === ',')\n                    index++; // skip comma\n            }\n        }\n        catch (e) {\n            if (Allow.OBJ & allow)\n                return obj;\n            else\n                markPartialJSON(\"Expected '}' at end of object\");\n        }\n        index++; // skip final brace\n        return obj;\n    };\n    const parseArr = () => {\n        index++; // skip initial bracket\n        const arr = [];\n        try {\n            while (jsonString[index] !== ']') {\n                arr.push(parseAny());\n                skipBlank();\n                if (jsonString[index] === ',') {\n                    index++; // skip comma\n                }\n            }\n        }\n        catch (e) {\n            if (Allow.ARR & allow) {\n                return arr;\n            }\n            markPartialJSON(\"Expected ']' at end of array\");\n        }\n        index++; // skip final bracket\n        return arr;\n    };\n    const parseNum = () => {\n        if (index === 0) {\n            if (jsonString === '-' && Allow.NUM & allow)\n                markPartialJSON(\"Not sure what '-' is\");\n            try {\n                return JSON.parse(jsonString);\n            }\n            catch (e) {\n                if (Allow.NUM & allow) {\n                    try {\n                        if ('.' === jsonString[jsonString.length - 1])\n                            return JSON.parse(jsonString.substring(0, jsonString.lastIndexOf('.')));\n                        return JSON.parse(jsonString.substring(0, jsonString.lastIndexOf('e')));\n                    }\n                    catch (e) { }\n                }\n                throwMalformedError(String(e));\n            }\n        }\n        const start = index;\n        if (jsonString[index] === '-')\n            index++;\n        while (jsonString[index] && !',]}'.includes(jsonString[index]))\n            index++;\n        if (index == length && !(Allow.NUM & allow))\n            markPartialJSON('Unterminated number literal');\n        try {\n            return JSON.parse(jsonString.substring(start, index));\n        }\n        catch (e) {\n            if (jsonString.substring(start, index) === '-' && Allow.NUM & allow)\n                markPartialJSON(\"Not sure what '-' is\");\n            try {\n                return JSON.parse(jsonString.substring(start, jsonString.lastIndexOf('e')));\n            }\n            catch (e) {\n                throwMalformedError(String(e));\n            }\n        }\n    };\n    const skipBlank = () => {\n        while (index < length && ' \\n\\r\\t'.includes(jsonString[index])) {\n            index++;\n        }\n    };\n    return parseAny();\n};\n// using this function with malformed JSON is undefined behavior\nconst partialParse = (input) => parseJSON(input, Allow.ALL ^ Allow.NUM);\nexport { partialParse, PartialJSON, MalformedJSON };\n//# sourceMappingURL=parser.mjs.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _ChatCompletionStream_instances, _ChatCompletionStream_params, _ChatCompletionStream_choiceEventStates, _ChatCompletionStream_currentChatCompletionSnapshot, _ChatCompletionStream_beginRequest, _ChatCompletionStream_getChoiceEventState, _ChatCompletionStream_addChunk, _ChatCompletionStream_emitToolCallDoneEvent, _ChatCompletionStream_emitContentDoneEvents, _ChatCompletionStream_endRequest, _ChatCompletionStream_getAutoParseableResponseFormat, _ChatCompletionStream_accumulateChatCompletion;\nimport { OpenAIError, APIUserAbortError, LengthFinishReasonError, ContentFilterFinishReasonError, } from \"../error.mjs\";\nimport { AbstractChatCompletionRunner, } from \"./AbstractChatCompletionRunner.mjs\";\nimport { Stream } from \"../streaming.mjs\";\nimport { hasAutoParseableInput, isAutoParsableResponseFormat, isAutoParsableTool, maybeParseChatCompletion, shouldParseToolCall, } from \"../lib/parser.mjs\";\nimport { partialParse } from \"../_vendor/partial-json-parser/parser.mjs\";\nexport class ChatCompletionStream extends AbstractChatCompletionRunner {\n    constructor(params) {\n        super();\n        _ChatCompletionStream_instances.add(this);\n        _ChatCompletionStream_params.set(this, void 0);\n        _ChatCompletionStream_choiceEventStates.set(this, void 0);\n        _ChatCompletionStream_currentChatCompletionSnapshot.set(this, void 0);\n        __classPrivateFieldSet(this, _ChatCompletionStream_params, params, \"f\");\n        __classPrivateFieldSet(this, _ChatCompletionStream_choiceEventStates, [], \"f\");\n    }\n    get currentChatCompletionSnapshot() {\n        return __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n    }\n    /**\n     * Intended for use on the frontend, consuming a stream produced with\n     * `.toReadableStream()` on the backend.\n     *\n     * Note that messages sent to the model do not appear in `.on('message')`\n     * in this context.\n     */\n    static fromReadableStream(stream) {\n        const runner = new ChatCompletionStream(null);\n        runner._run(() => runner._fromReadableStream(stream));\n        return runner;\n    }\n    static createChatCompletion(client, params, options) {\n        const runner = new ChatCompletionStream(params);\n        runner._run(() => runner._runChatCompletion(client, { ...params, stream: true }, { ...options, headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' } }));\n        return runner;\n    }\n    async _createChatCompletion(client, params, options) {\n        super._createChatCompletion;\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_beginRequest).call(this);\n        const stream = await client.chat.completions.create({ ...params, stream: true }, { ...options, signal: this.controller.signal });\n        this._connected();\n        for await (const chunk of stream) {\n            __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_addChunk).call(this, chunk);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n    }\n    async _fromReadableStream(readableStream, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_beginRequest).call(this);\n        this._connected();\n        const stream = Stream.fromReadableStream(readableStream, this.controller);\n        let chatId;\n        for await (const chunk of stream) {\n            if (chatId && chatId !== chunk.id) {\n                // A new request has been made.\n                this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n            }\n            __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_addChunk).call(this, chunk);\n            chatId = chunk.id;\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n    }\n    [(_ChatCompletionStream_params = new WeakMap(), _ChatCompletionStream_choiceEventStates = new WeakMap(), _ChatCompletionStream_currentChatCompletionSnapshot = new WeakMap(), _ChatCompletionStream_instances = new WeakSet(), _ChatCompletionStream_beginRequest = function _ChatCompletionStream_beginRequest() {\n        if (this.ended)\n            return;\n        __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, undefined, \"f\");\n    }, _ChatCompletionStream_getChoiceEventState = function _ChatCompletionStream_getChoiceEventState(choice) {\n        let state = __classPrivateFieldGet(this, _ChatCompletionStream_choiceEventStates, \"f\")[choice.index];\n        if (state) {\n            return state;\n        }\n        state = {\n            content_done: false,\n            refusal_done: false,\n            logprobs_content_done: false,\n            logprobs_refusal_done: false,\n            done_tool_calls: new Set(),\n            current_tool_call_index: null,\n        };\n        __classPrivateFieldGet(this, _ChatCompletionStream_choiceEventStates, \"f\")[choice.index] = state;\n        return state;\n    }, _ChatCompletionStream_addChunk = function _ChatCompletionStream_addChunk(chunk) {\n        if (this.ended)\n            return;\n        const completion = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_accumulateChatCompletion).call(this, chunk);\n        this._emit('chunk', chunk, completion);\n        for (const choice of chunk.choices) {\n            const choiceSnapshot = completion.choices[choice.index];\n            if (choice.delta.content != null &&\n                choiceSnapshot.message?.role === 'assistant' &&\n                choiceSnapshot.message?.content) {\n                this._emit('content', choice.delta.content, choiceSnapshot.message.content);\n                this._emit('content.delta', {\n                    delta: choice.delta.content,\n                    snapshot: choiceSnapshot.message.content,\n                    parsed: choiceSnapshot.message.parsed,\n                });\n            }\n            if (choice.delta.refusal != null &&\n                choiceSnapshot.message?.role === 'assistant' &&\n                choiceSnapshot.message?.refusal) {\n                this._emit('refusal.delta', {\n                    delta: choice.delta.refusal,\n                    snapshot: choiceSnapshot.message.refusal,\n                });\n            }\n            if (choice.logprobs?.content != null && choiceSnapshot.message?.role === 'assistant') {\n                this._emit('logprobs.content.delta', {\n                    content: choice.logprobs?.content,\n                    snapshot: choiceSnapshot.logprobs?.content ?? [],\n                });\n            }\n            if (choice.logprobs?.refusal != null && choiceSnapshot.message?.role === 'assistant') {\n                this._emit('logprobs.refusal.delta', {\n                    refusal: choice.logprobs?.refusal,\n                    snapshot: choiceSnapshot.logprobs?.refusal ?? [],\n                });\n            }\n            const state = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getChoiceEventState).call(this, choiceSnapshot);\n            if (choiceSnapshot.finish_reason) {\n                __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitContentDoneEvents).call(this, choiceSnapshot);\n                if (state.current_tool_call_index != null) {\n                    __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitToolCallDoneEvent).call(this, choiceSnapshot, state.current_tool_call_index);\n                }\n            }\n            for (const toolCall of choice.delta.tool_calls ?? []) {\n                if (state.current_tool_call_index !== toolCall.index) {\n                    __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitContentDoneEvents).call(this, choiceSnapshot);\n                    // new tool call started, the previous one is done\n                    if (state.current_tool_call_index != null) {\n                        __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitToolCallDoneEvent).call(this, choiceSnapshot, state.current_tool_call_index);\n                    }\n                }\n                state.current_tool_call_index = toolCall.index;\n            }\n            for (const toolCallDelta of choice.delta.tool_calls ?? []) {\n                const toolCallSnapshot = choiceSnapshot.message.tool_calls?.[toolCallDelta.index];\n                if (!toolCallSnapshot?.type) {\n                    continue;\n                }\n                if (toolCallSnapshot?.type === 'function') {\n                    this._emit('tool_calls.function.arguments.delta', {\n                        name: toolCallSnapshot.function?.name,\n                        index: toolCallDelta.index,\n                        arguments: toolCallSnapshot.function.arguments,\n                        parsed_arguments: toolCallSnapshot.function.parsed_arguments,\n                        arguments_delta: toolCallDelta.function?.arguments ?? '',\n                    });\n                }\n                else {\n                    assertNever(toolCallSnapshot?.type);\n                }\n            }\n        }\n    }, _ChatCompletionStream_emitToolCallDoneEvent = function _ChatCompletionStream_emitToolCallDoneEvent(choiceSnapshot, toolCallIndex) {\n        const state = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getChoiceEventState).call(this, choiceSnapshot);\n        if (state.done_tool_calls.has(toolCallIndex)) {\n            // we've already fired the done event\n            return;\n        }\n        const toolCallSnapshot = choiceSnapshot.message.tool_calls?.[toolCallIndex];\n        if (!toolCallSnapshot) {\n            throw new Error('no tool call snapshot');\n        }\n        if (!toolCallSnapshot.type) {\n            throw new Error('tool call snapshot missing `type`');\n        }\n        if (toolCallSnapshot.type === 'function') {\n            const inputTool = __classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\")?.tools?.find((tool) => tool.type === 'function' && tool.function.name === toolCallSnapshot.function.name);\n            this._emit('tool_calls.function.arguments.done', {\n                name: toolCallSnapshot.function.name,\n                index: toolCallIndex,\n                arguments: toolCallSnapshot.function.arguments,\n                parsed_arguments: isAutoParsableTool(inputTool) ? inputTool.$parseRaw(toolCallSnapshot.function.arguments)\n                    : inputTool?.function.strict ? JSON.parse(toolCallSnapshot.function.arguments)\n                        : null,\n            });\n        }\n        else {\n            assertNever(toolCallSnapshot.type);\n        }\n    }, _ChatCompletionStream_emitContentDoneEvents = function _ChatCompletionStream_emitContentDoneEvents(choiceSnapshot) {\n        const state = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getChoiceEventState).call(this, choiceSnapshot);\n        if (choiceSnapshot.message.content && !state.content_done) {\n            state.content_done = true;\n            const responseFormat = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getAutoParseableResponseFormat).call(this);\n            this._emit('content.done', {\n                content: choiceSnapshot.message.content,\n                parsed: responseFormat ? responseFormat.$parseRaw(choiceSnapshot.message.content) : null,\n            });\n        }\n        if (choiceSnapshot.message.refusal && !state.refusal_done) {\n            state.refusal_done = true;\n            this._emit('refusal.done', { refusal: choiceSnapshot.message.refusal });\n        }\n        if (choiceSnapshot.logprobs?.content && !state.logprobs_content_done) {\n            state.logprobs_content_done = true;\n            this._emit('logprobs.content.done', { content: choiceSnapshot.logprobs.content });\n        }\n        if (choiceSnapshot.logprobs?.refusal && !state.logprobs_refusal_done) {\n            state.logprobs_refusal_done = true;\n            this._emit('logprobs.refusal.done', { refusal: choiceSnapshot.logprobs.refusal });\n        }\n    }, _ChatCompletionStream_endRequest = function _ChatCompletionStream_endRequest() {\n        if (this.ended) {\n            throw new OpenAIError(`stream has ended, this shouldn't happen`);\n        }\n        const snapshot = __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n        if (!snapshot) {\n            throw new OpenAIError(`request ended without sending any chunks`);\n        }\n        __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, undefined, \"f\");\n        __classPrivateFieldSet(this, _ChatCompletionStream_choiceEventStates, [], \"f\");\n        return finalizeChatCompletion(snapshot, __classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\"));\n    }, _ChatCompletionStream_getAutoParseableResponseFormat = function _ChatCompletionStream_getAutoParseableResponseFormat() {\n        const responseFormat = __classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\")?.response_format;\n        if (isAutoParsableResponseFormat(responseFormat)) {\n            return responseFormat;\n        }\n        return null;\n    }, _ChatCompletionStream_accumulateChatCompletion = function _ChatCompletionStream_accumulateChatCompletion(chunk) {\n        var _a, _b, _c, _d;\n        let snapshot = __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n        const { choices, ...rest } = chunk;\n        if (!snapshot) {\n            snapshot = __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, {\n                ...rest,\n                choices: [],\n            }, \"f\");\n        }\n        else {\n            Object.assign(snapshot, rest);\n        }\n        for (const { delta, finish_reason, index, logprobs = null, ...other } of chunk.choices) {\n            let choice = snapshot.choices[index];\n            if (!choice) {\n                choice = snapshot.choices[index] = { finish_reason, index, message: {}, logprobs, ...other };\n            }\n            if (logprobs) {\n                if (!choice.logprobs) {\n                    choice.logprobs = Object.assign({}, logprobs);\n                }\n                else {\n                    const { content, refusal, ...rest } = logprobs;\n                    assertIsEmpty(rest);\n                    Object.assign(choice.logprobs, rest);\n                    if (content) {\n                        (_a = choice.logprobs).content ?? (_a.content = []);\n                        choice.logprobs.content.push(...content);\n                    }\n                    if (refusal) {\n                        (_b = choice.logprobs).refusal ?? (_b.refusal = []);\n                        choice.logprobs.refusal.push(...refusal);\n                    }\n                }\n            }\n            if (finish_reason) {\n                choice.finish_reason = finish_reason;\n                if (__classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\") && hasAutoParseableInput(__classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\"))) {\n                    if (finish_reason === 'length') {\n                        throw new LengthFinishReasonError();\n                    }\n                    if (finish_reason === 'content_filter') {\n                        throw new ContentFilterFinishReasonError();\n                    }\n                }\n            }\n            Object.assign(choice, other);\n            if (!delta)\n                continue; // Shouldn't happen; just in case.\n            const { content, refusal, function_call, role, tool_calls, ...rest } = delta;\n            assertIsEmpty(rest);\n            Object.assign(choice.message, rest);\n            if (refusal) {\n                choice.message.refusal = (choice.message.refusal || '') + refusal;\n            }\n            if (role)\n                choice.message.role = role;\n            if (function_call) {\n                if (!choice.message.function_call) {\n                    choice.message.function_call = function_call;\n                }\n                else {\n                    if (function_call.name)\n                        choice.message.function_call.name = function_call.name;\n                    if (function_call.arguments) {\n                        (_c = choice.message.function_call).arguments ?? (_c.arguments = '');\n                        choice.message.function_call.arguments += function_call.arguments;\n                    }\n                }\n            }\n            if (content) {\n                choice.message.content = (choice.message.content || '') + content;\n                if (!choice.message.refusal && __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getAutoParseableResponseFormat).call(this)) {\n                    choice.message.parsed = partialParse(choice.message.content);\n                }\n            }\n            if (tool_calls) {\n                if (!choice.message.tool_calls)\n                    choice.message.tool_calls = [];\n                for (const { index, id, type, function: fn, ...rest } of tool_calls) {\n                    const tool_call = ((_d = choice.message.tool_calls)[index] ?? (_d[index] = {}));\n                    Object.assign(tool_call, rest);\n                    if (id)\n                        tool_call.id = id;\n                    if (type)\n                        tool_call.type = type;\n                    if (fn)\n                        tool_call.function ?? (tool_call.function = { name: fn.name ?? '', arguments: '' });\n                    if (fn?.name)\n                        tool_call.function.name = fn.name;\n                    if (fn?.arguments) {\n                        tool_call.function.arguments += fn.arguments;\n                        if (shouldParseToolCall(__classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\"), tool_call)) {\n                            tool_call.function.parsed_arguments = partialParse(tool_call.function.arguments);\n                        }\n                    }\n                }\n            }\n        }\n        return snapshot;\n    }, Symbol.asyncIterator)]() {\n        const pushQueue = [];\n        const readQueue = [];\n        let done = false;\n        this.on('chunk', (chunk) => {\n            const reader = readQueue.shift();\n            if (reader) {\n                reader.resolve(chunk);\n            }\n            else {\n                pushQueue.push(chunk);\n            }\n        });\n        this.on('end', () => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.resolve(undefined);\n            }\n            readQueue.length = 0;\n        });\n        this.on('abort', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        this.on('error', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        return {\n            next: async () => {\n                if (!pushQueue.length) {\n                    if (done) {\n                        return { value: undefined, done: true };\n                    }\n                    return new Promise((resolve, reject) => readQueue.push({ resolve, reject })).then((chunk) => (chunk ? { value: chunk, done: false } : { value: undefined, done: true }));\n                }\n                const chunk = pushQueue.shift();\n                return { value: chunk, done: false };\n            },\n            return: async () => {\n                this.abort();\n                return { value: undefined, done: true };\n            },\n        };\n    }\n    toReadableStream() {\n        const stream = new Stream(this[Symbol.asyncIterator].bind(this), this.controller);\n        return stream.toReadableStream();\n    }\n}\nfunction finalizeChatCompletion(snapshot, params) {\n    const { id, choices, created, model, system_fingerprint, ...rest } = snapshot;\n    const completion = {\n        ...rest,\n        id,\n        choices: choices.map(({ message, finish_reason, index, logprobs, ...choiceRest }) => {\n            if (!finish_reason) {\n                throw new OpenAIError(`missing finish_reason for choice ${index}`);\n            }\n            const { content = null, function_call, tool_calls, ...messageRest } = message;\n            const role = message.role; // this is what we expect; in theory it could be different which would make our types a slight lie but would be fine.\n            if (!role) {\n                throw new OpenAIError(`missing role for choice ${index}`);\n            }\n            if (function_call) {\n                const { arguments: args, name } = function_call;\n                if (args == null) {\n                    throw new OpenAIError(`missing function_call.arguments for choice ${index}`);\n                }\n                if (!name) {\n                    throw new OpenAIError(`missing function_call.name for choice ${index}`);\n                }\n                return {\n                    ...choiceRest,\n                    message: {\n                        content,\n                        function_call: { arguments: args, name },\n                        role,\n                        refusal: message.refusal ?? null,\n                    },\n                    finish_reason,\n                    index,\n                    logprobs,\n                };\n            }\n            if (tool_calls) {\n                return {\n                    ...choiceRest,\n                    index,\n                    finish_reason,\n                    logprobs,\n                    message: {\n                        ...messageRest,\n                        role,\n                        content,\n                        refusal: message.refusal ?? null,\n                        tool_calls: tool_calls.map((tool_call, i) => {\n                            const { function: fn, type, id, ...toolRest } = tool_call;\n                            const { arguments: args, name, ...fnRest } = fn || {};\n                            if (id == null) {\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].id\\n${str(snapshot)}`);\n                            }\n                            if (type == null) {\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].type\\n${str(snapshot)}`);\n                            }\n                            if (name == null) {\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].function.name\\n${str(snapshot)}`);\n                            }\n                            if (args == null) {\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].function.arguments\\n${str(snapshot)}`);\n                            }\n                            return { ...toolRest, id, type, function: { ...fnRest, name, arguments: args } };\n                        }),\n                    },\n                };\n            }\n            return {\n                ...choiceRest,\n                message: { ...messageRest, content, role, refusal: message.refusal ?? null },\n                finish_reason,\n                index,\n                logprobs,\n            };\n        }),\n        created,\n        model,\n        object: 'chat.completion',\n        ...(system_fingerprint ? { system_fingerprint } : {}),\n    };\n    return maybeParseChatCompletion(completion, params);\n}\nfunction str(x) {\n    return JSON.stringify(x);\n}\n/**\n * Ensures the given argument is an empty object, useful for\n * asserting that all known properties on an object have been\n * destructured.\n */\nfunction assertIsEmpty(obj) {\n    return;\n}\nfunction assertNever(_x) { }\n//# sourceMappingURL=ChatCompletionStream.mjs.map","import { ChatCompletionStream } from \"./ChatCompletionStream.mjs\";\nexport class ChatCompletionStreamingRunner extends ChatCompletionStream {\n    static fromReadableStream(stream) {\n        const runner = new ChatCompletionStreamingRunner(null);\n        runner._run(() => runner._fromReadableStream(stream));\n        return runner;\n    }\n    /** @deprecated - please use `runTools` instead. */\n    static runFunctions(client, params, options) {\n        const runner = new ChatCompletionStreamingRunner(null);\n        const opts = {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'runFunctions' },\n        };\n        runner._run(() => runner._runFunctions(client, params, opts));\n        return runner;\n    }\n    static runTools(client, params, options) {\n        const runner = new ChatCompletionStreamingRunner(\n        // @ts-expect-error TODO these types are incompatible\n        params);\n        const opts = {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'runTools' },\n        };\n        runner._run(() => runner._runTools(client, params, opts));\n        return runner;\n    }\n}\n//# sourceMappingURL=ChatCompletionStreamingRunner.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { ChatCompletionRunner } from \"../../../lib/ChatCompletionRunner.mjs\";\nimport { ChatCompletionStreamingRunner, } from \"../../../lib/ChatCompletionStreamingRunner.mjs\";\nimport { ChatCompletionStream } from \"../../../lib/ChatCompletionStream.mjs\";\nimport { parseChatCompletion, validateInputTools } from \"../../../lib/parser.mjs\";\nexport { ChatCompletionStreamingRunner, } from \"../../../lib/ChatCompletionStreamingRunner.mjs\";\nexport { ParsingFunction, ParsingToolFunction, } from \"../../../lib/RunnableFunction.mjs\";\nexport { ChatCompletionStream } from \"../../../lib/ChatCompletionStream.mjs\";\nexport { ChatCompletionRunner, } from \"../../../lib/ChatCompletionRunner.mjs\";\nexport class Completions extends APIResource {\n    parse(body, options) {\n        validateInputTools(body.tools);\n        return this._client.chat.completions\n            .create(body, {\n            ...options,\n            headers: {\n                ...options?.headers,\n                'X-Stainless-Helper-Method': 'beta.chat.completions.parse',\n            },\n        })\n            ._thenUnwrap((completion) => parseChatCompletion(completion, body));\n    }\n    runFunctions(body, options) {\n        if (body.stream) {\n            return ChatCompletionStreamingRunner.runFunctions(this._client, body, options);\n        }\n        return ChatCompletionRunner.runFunctions(this._client, body, options);\n    }\n    runTools(body, options) {\n        if (body.stream) {\n            return ChatCompletionStreamingRunner.runTools(this._client, body, options);\n        }\n        return ChatCompletionRunner.runTools(this._client, body, options);\n    }\n    /**\n     * Creates a chat completion stream\n     */\n    stream(body, options) {\n        return ChatCompletionStream.createChatCompletion(this._client, body, options);\n    }\n}\n//# sourceMappingURL=completions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport * as CompletionsAPI from \"./completions.mjs\";\nexport class Chat extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.completions = new CompletionsAPI.Completions(this._client);\n    }\n}\n(function (Chat) {\n    Chat.Completions = CompletionsAPI.Completions;\n})(Chat || (Chat = {}));\n//# sourceMappingURL=chat.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nexport class Sessions extends APIResource {\n    /**\n     * Create an ephemeral API token for use in client-side applications with the\n     * Realtime API. Can be configured with the same session parameters as the\n     * `session.update` client event.\n     *\n     * It responds with a session object, plus a `client_secret` key which contains a\n     * usable ephemeral API token that can be used to authenticate browser clients for\n     * the Realtime API.\n     */\n    create(body, options) {\n        return this._client.post('/realtime/sessions', {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n}\n//# sourceMappingURL=sessions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nexport class TranscriptionSessions extends APIResource {\n    /**\n     * Create an ephemeral API token for use in client-side applications with the\n     * Realtime API specifically for realtime transcriptions. Can be configured with\n     * the same session parameters as the `transcription_session.update` client event.\n     *\n     * It responds with a session object, plus a `client_secret` key which contains a\n     * usable ephemeral API token that can be used to authenticate browser clients for\n     * the Realtime API.\n     */\n    create(body, options) {\n        return this._client.post('/realtime/transcription_sessions', {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n}\n//# sourceMappingURL=transcription-sessions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport * as SessionsAPI from \"./sessions.mjs\";\nimport { Sessions, } from \"./sessions.mjs\";\nimport * as TranscriptionSessionsAPI from \"./transcription-sessions.mjs\";\nimport { TranscriptionSessions, } from \"./transcription-sessions.mjs\";\nexport class Realtime extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.sessions = new SessionsAPI.Sessions(this._client);\n        this.transcriptionSessions = new TranscriptionSessionsAPI.TranscriptionSessions(this._client);\n    }\n}\nRealtime.Sessions = Sessions;\nRealtime.TranscriptionSessions = TranscriptionSessions;\n//# sourceMappingURL=realtime.mjs.map","var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _AssistantStream_instances, _AssistantStream_events, _AssistantStream_runStepSnapshots, _AssistantStream_messageSnapshots, _AssistantStream_messageSnapshot, _AssistantStream_finalRun, _AssistantStream_currentContentIndex, _AssistantStream_currentContent, _AssistantStream_currentToolCallIndex, _AssistantStream_currentToolCall, _AssistantStream_currentEvent, _AssistantStream_currentRunSnapshot, _AssistantStream_currentRunStepSnapshot, _AssistantStream_addEvent, _AssistantStream_endRequest, _AssistantStream_handleMessage, _AssistantStream_handleRunStep, _AssistantStream_handleEvent, _AssistantStream_accumulateRunStep, _AssistantStream_accumulateMessage, _AssistantStream_accumulateContent, _AssistantStream_handleRun;\nimport * as Core from \"../core.mjs\";\nimport { Stream } from \"../streaming.mjs\";\nimport { APIUserAbortError, OpenAIError } from \"../error.mjs\";\nimport { EventStream } from \"./EventStream.mjs\";\nexport class AssistantStream extends EventStream {\n    constructor() {\n        super(...arguments);\n        _AssistantStream_instances.add(this);\n        //Track all events in a single list for reference\n        _AssistantStream_events.set(this, []);\n        //Used to accumulate deltas\n        //We are accumulating many types so the value here is not strict\n        _AssistantStream_runStepSnapshots.set(this, {});\n        _AssistantStream_messageSnapshots.set(this, {});\n        _AssistantStream_messageSnapshot.set(this, void 0);\n        _AssistantStream_finalRun.set(this, void 0);\n        _AssistantStream_currentContentIndex.set(this, void 0);\n        _AssistantStream_currentContent.set(this, void 0);\n        _AssistantStream_currentToolCallIndex.set(this, void 0);\n        _AssistantStream_currentToolCall.set(this, void 0);\n        //For current snapshot methods\n        _AssistantStream_currentEvent.set(this, void 0);\n        _AssistantStream_currentRunSnapshot.set(this, void 0);\n        _AssistantStream_currentRunStepSnapshot.set(this, void 0);\n    }\n    [(_AssistantStream_events = new WeakMap(), _AssistantStream_runStepSnapshots = new WeakMap(), _AssistantStream_messageSnapshots = new WeakMap(), _AssistantStream_messageSnapshot = new WeakMap(), _AssistantStream_finalRun = new WeakMap(), _AssistantStream_currentContentIndex = new WeakMap(), _AssistantStream_currentContent = new WeakMap(), _AssistantStream_currentToolCallIndex = new WeakMap(), _AssistantStream_currentToolCall = new WeakMap(), _AssistantStream_currentEvent = new WeakMap(), _AssistantStream_currentRunSnapshot = new WeakMap(), _AssistantStream_currentRunStepSnapshot = new WeakMap(), _AssistantStream_instances = new WeakSet(), Symbol.asyncIterator)]() {\n        const pushQueue = [];\n        const readQueue = [];\n        let done = false;\n        //Catch all for passing along all events\n        this.on('event', (event) => {\n            const reader = readQueue.shift();\n            if (reader) {\n                reader.resolve(event);\n            }\n            else {\n                pushQueue.push(event);\n            }\n        });\n        this.on('end', () => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.resolve(undefined);\n            }\n            readQueue.length = 0;\n        });\n        this.on('abort', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        this.on('error', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        return {\n            next: async () => {\n                if (!pushQueue.length) {\n                    if (done) {\n                        return { value: undefined, done: true };\n                    }\n                    return new Promise((resolve, reject) => readQueue.push({ resolve, reject })).then((chunk) => (chunk ? { value: chunk, done: false } : { value: undefined, done: true }));\n                }\n                const chunk = pushQueue.shift();\n                return { value: chunk, done: false };\n            },\n            return: async () => {\n                this.abort();\n                return { value: undefined, done: true };\n            },\n        };\n    }\n    static fromReadableStream(stream) {\n        const runner = new AssistantStream();\n        runner._run(() => runner._fromReadableStream(stream));\n        return runner;\n    }\n    async _fromReadableStream(readableStream, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        this._connected();\n        const stream = Stream.fromReadableStream(readableStream, this.controller);\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addRun(__classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    toReadableStream() {\n        const stream = new Stream(this[Symbol.asyncIterator].bind(this), this.controller);\n        return stream.toReadableStream();\n    }\n    static createToolAssistantStream(threadId, runId, runs, params, options) {\n        const runner = new AssistantStream();\n        runner._run(() => runner._runToolAssistantStream(threadId, runId, runs, params, {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' },\n        }));\n        return runner;\n    }\n    async _createToolAssistantStream(run, threadId, runId, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        const body = { ...params, stream: true };\n        const stream = await run.submitToolOutputs(threadId, runId, body, {\n            ...options,\n            signal: this.controller.signal,\n        });\n        this._connected();\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addRun(__classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    static createThreadAssistantStream(params, thread, options) {\n        const runner = new AssistantStream();\n        runner._run(() => runner._threadAssistantStream(params, thread, {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' },\n        }));\n        return runner;\n    }\n    static createAssistantStream(threadId, runs, params, options) {\n        const runner = new AssistantStream();\n        runner._run(() => runner._runAssistantStream(threadId, runs, params, {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' },\n        }));\n        return runner;\n    }\n    currentEvent() {\n        return __classPrivateFieldGet(this, _AssistantStream_currentEvent, \"f\");\n    }\n    currentRun() {\n        return __classPrivateFieldGet(this, _AssistantStream_currentRunSnapshot, \"f\");\n    }\n    currentMessageSnapshot() {\n        return __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\");\n    }\n    currentRunStepSnapshot() {\n        return __classPrivateFieldGet(this, _AssistantStream_currentRunStepSnapshot, \"f\");\n    }\n    async finalRunSteps() {\n        await this.done();\n        return Object.values(__classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\"));\n    }\n    async finalMessages() {\n        await this.done();\n        return Object.values(__classPrivateFieldGet(this, _AssistantStream_messageSnapshots, \"f\"));\n    }\n    async finalRun() {\n        await this.done();\n        if (!__classPrivateFieldGet(this, _AssistantStream_finalRun, \"f\"))\n            throw Error('Final run was not received.');\n        return __classPrivateFieldGet(this, _AssistantStream_finalRun, \"f\");\n    }\n    async _createThreadAssistantStream(thread, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        const body = { ...params, stream: true };\n        const stream = await thread.createAndRun(body, { ...options, signal: this.controller.signal });\n        this._connected();\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addRun(__classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    async _createAssistantStream(run, threadId, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        const body = { ...params, stream: true };\n        const stream = await run.create(threadId, body, { ...options, signal: this.controller.signal });\n        this._connected();\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addRun(__classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    static accumulateDelta(acc, delta) {\n        for (const [key, deltaValue] of Object.entries(delta)) {\n            if (!acc.hasOwnProperty(key)) {\n                acc[key] = deltaValue;\n                continue;\n            }\n            let accValue = acc[key];\n            if (accValue === null || accValue === undefined) {\n                acc[key] = deltaValue;\n                continue;\n            }\n            // We don't accumulate these special properties\n            if (key === 'index' || key === 'type') {\n                acc[key] = deltaValue;\n                continue;\n            }\n            // Type-specific accumulation logic\n            if (typeof accValue === 'string' && typeof deltaValue === 'string') {\n                accValue += deltaValue;\n            }\n            else if (typeof accValue === 'number' && typeof deltaValue === 'number') {\n                accValue += deltaValue;\n            }\n            else if (Core.isObj(accValue) && Core.isObj(deltaValue)) {\n                accValue = this.accumulateDelta(accValue, deltaValue);\n            }\n            else if (Array.isArray(accValue) && Array.isArray(deltaValue)) {\n                if (accValue.every((x) => typeof x === 'string' || typeof x === 'number')) {\n                    accValue.push(...deltaValue); // Use spread syntax for efficient addition\n                    continue;\n                }\n                for (const deltaEntry of deltaValue) {\n                    if (!Core.isObj(deltaEntry)) {\n                        throw new Error(`Expected array delta entry to be an object but got: ${deltaEntry}`);\n                    }\n                    const index = deltaEntry['index'];\n                    if (index == null) {\n                        console.error(deltaEntry);\n                        throw new Error('Expected array delta entry to have an `index` property');\n                    }\n                    if (typeof index !== 'number') {\n                        throw new Error(`Expected array delta entry \\`index\\` property to be a number but got ${index}`);\n                    }\n                    const accEntry = accValue[index];\n                    if (accEntry == null) {\n                        accValue.push(deltaEntry);\n                    }\n                    else {\n                        accValue[index] = this.accumulateDelta(accEntry, deltaEntry);\n                    }\n                }\n                continue;\n            }\n            else {\n                throw Error(`Unhandled record type: ${key}, deltaValue: ${deltaValue}, accValue: ${accValue}`);\n            }\n            acc[key] = accValue;\n        }\n        return acc;\n    }\n    _addRun(run) {\n        return run;\n    }\n    async _threadAssistantStream(params, thread, options) {\n        return await this._createThreadAssistantStream(thread, params, options);\n    }\n    async _runAssistantStream(threadId, runs, params, options) {\n        return await this._createAssistantStream(runs, threadId, params, options);\n    }\n    async _runToolAssistantStream(threadId, runId, runs, params, options) {\n        return await this._createToolAssistantStream(runs, threadId, runId, params, options);\n    }\n}\n_AssistantStream_addEvent = function _AssistantStream_addEvent(event) {\n    if (this.ended)\n        return;\n    __classPrivateFieldSet(this, _AssistantStream_currentEvent, event, \"f\");\n    __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_handleEvent).call(this, event);\n    switch (event.event) {\n        case 'thread.created':\n            //No action on this event.\n            break;\n        case 'thread.run.created':\n        case 'thread.run.queued':\n        case 'thread.run.in_progress':\n        case 'thread.run.requires_action':\n        case 'thread.run.completed':\n        case 'thread.run.incomplete':\n        case 'thread.run.failed':\n        case 'thread.run.cancelling':\n        case 'thread.run.cancelled':\n        case 'thread.run.expired':\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_handleRun).call(this, event);\n            break;\n        case 'thread.run.step.created':\n        case 'thread.run.step.in_progress':\n        case 'thread.run.step.delta':\n        case 'thread.run.step.completed':\n        case 'thread.run.step.failed':\n        case 'thread.run.step.cancelled':\n        case 'thread.run.step.expired':\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_handleRunStep).call(this, event);\n            break;\n        case 'thread.message.created':\n        case 'thread.message.in_progress':\n        case 'thread.message.delta':\n        case 'thread.message.completed':\n        case 'thread.message.incomplete':\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_handleMessage).call(this, event);\n            break;\n        case 'error':\n            //This is included for completeness, but errors are processed in the SSE event processing so this should not occur\n            throw new Error('Encountered an error event in event processing - errors should be processed earlier');\n        default:\n            assertNever(event);\n    }\n}, _AssistantStream_endRequest = function _AssistantStream_endRequest() {\n    if (this.ended) {\n        throw new OpenAIError(`stream has ended, this shouldn't happen`);\n    }\n    if (!__classPrivateFieldGet(this, _AssistantStream_finalRun, \"f\"))\n        throw Error('Final run has not been received');\n    return __classPrivateFieldGet(this, _AssistantStream_finalRun, \"f\");\n}, _AssistantStream_handleMessage = function _AssistantStream_handleMessage(event) {\n    const [accumulatedMessage, newContent] = __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_accumulateMessage).call(this, event, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n    __classPrivateFieldSet(this, _AssistantStream_messageSnapshot, accumulatedMessage, \"f\");\n    __classPrivateFieldGet(this, _AssistantStream_messageSnapshots, \"f\")[accumulatedMessage.id] = accumulatedMessage;\n    for (const content of newContent) {\n        const snapshotContent = accumulatedMessage.content[content.index];\n        if (snapshotContent?.type == 'text') {\n            this._emit('textCreated', snapshotContent.text);\n        }\n    }\n    switch (event.event) {\n        case 'thread.message.created':\n            this._emit('messageCreated', event.data);\n            break;\n        case 'thread.message.in_progress':\n            break;\n        case 'thread.message.delta':\n            this._emit('messageDelta', event.data.delta, accumulatedMessage);\n            if (event.data.delta.content) {\n                for (const content of event.data.delta.content) {\n                    //If it is text delta, emit a text delta event\n                    if (content.type == 'text' && content.text) {\n                        let textDelta = content.text;\n                        let snapshot = accumulatedMessage.content[content.index];\n                        if (snapshot && snapshot.type == 'text') {\n                            this._emit('textDelta', textDelta, snapshot.text);\n                        }\n                        else {\n                            throw Error('The snapshot associated with this text delta is not text or missing');\n                        }\n                    }\n                    if (content.index != __classPrivateFieldGet(this, _AssistantStream_currentContentIndex, \"f\")) {\n                        //See if we have in progress content\n                        if (__classPrivateFieldGet(this, _AssistantStream_currentContent, \"f\")) {\n                            switch (__classPrivateFieldGet(this, _AssistantStream_currentContent, \"f\").type) {\n                                case 'text':\n                                    this._emit('textDone', __classPrivateFieldGet(this, _AssistantStream_currentContent, \"f\").text, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n                                    break;\n                                case 'image_file':\n                                    this._emit('imageFileDone', __classPrivateFieldGet(this, _AssistantStream_currentContent, \"f\").image_file, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n                                    break;\n                            }\n                        }\n                        __classPrivateFieldSet(this, _AssistantStream_currentContentIndex, content.index, \"f\");\n                    }\n                    __classPrivateFieldSet(this, _AssistantStream_currentContent, accumulatedMessage.content[content.index], \"f\");\n                }\n            }\n            break;\n        case 'thread.message.completed':\n        case 'thread.message.incomplete':\n            //We emit the latest content we were working on on completion (including incomplete)\n            if (__classPrivateFieldGet(this, _AssistantStream_currentContentIndex, \"f\") !== undefined) {\n                const currentContent = event.data.content[__classPrivateFieldGet(this, _AssistantStream_currentContentIndex, \"f\")];\n                if (currentContent) {\n                    switch (currentContent.type) {\n                        case 'image_file':\n                            this._emit('imageFileDone', currentContent.image_file, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n                            break;\n                        case 'text':\n                            this._emit('textDone', currentContent.text, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n                            break;\n                    }\n                }\n            }\n            if (__classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\")) {\n                this._emit('messageDone', event.data);\n            }\n            __classPrivateFieldSet(this, _AssistantStream_messageSnapshot, undefined, \"f\");\n    }\n}, _AssistantStream_handleRunStep = function _AssistantStream_handleRunStep(event) {\n    const accumulatedRunStep = __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_accumulateRunStep).call(this, event);\n    __classPrivateFieldSet(this, _AssistantStream_currentRunStepSnapshot, accumulatedRunStep, \"f\");\n    switch (event.event) {\n        case 'thread.run.step.created':\n            this._emit('runStepCreated', event.data);\n            break;\n        case 'thread.run.step.delta':\n            const delta = event.data.delta;\n            if (delta.step_details &&\n                delta.step_details.type == 'tool_calls' &&\n                delta.step_details.tool_calls &&\n                accumulatedRunStep.step_details.type == 'tool_calls') {\n                for (const toolCall of delta.step_details.tool_calls) {\n                    if (toolCall.index == __classPrivateFieldGet(this, _AssistantStream_currentToolCallIndex, \"f\")) {\n                        this._emit('toolCallDelta', toolCall, accumulatedRunStep.step_details.tool_calls[toolCall.index]);\n                    }\n                    else {\n                        if (__classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\")) {\n                            this._emit('toolCallDone', __classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"));\n                        }\n                        __classPrivateFieldSet(this, _AssistantStream_currentToolCallIndex, toolCall.index, \"f\");\n                        __classPrivateFieldSet(this, _AssistantStream_currentToolCall, accumulatedRunStep.step_details.tool_calls[toolCall.index], \"f\");\n                        if (__classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"))\n                            this._emit('toolCallCreated', __classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"));\n                    }\n                }\n            }\n            this._emit('runStepDelta', event.data.delta, accumulatedRunStep);\n            break;\n        case 'thread.run.step.completed':\n        case 'thread.run.step.failed':\n        case 'thread.run.step.cancelled':\n        case 'thread.run.step.expired':\n            __classPrivateFieldSet(this, _AssistantStream_currentRunStepSnapshot, undefined, \"f\");\n            const details = event.data.step_details;\n            if (details.type == 'tool_calls') {\n                if (__classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\")) {\n                    this._emit('toolCallDone', __classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"));\n                    __classPrivateFieldSet(this, _AssistantStream_currentToolCall, undefined, \"f\");\n                }\n            }\n            this._emit('runStepDone', event.data, accumulatedRunStep);\n            break;\n        case 'thread.run.step.in_progress':\n            break;\n    }\n}, _AssistantStream_handleEvent = function _AssistantStream_handleEvent(event) {\n    __classPrivateFieldGet(this, _AssistantStream_events, \"f\").push(event);\n    this._emit('event', event);\n}, _AssistantStream_accumulateRunStep = function _AssistantStream_accumulateRunStep(event) {\n    switch (event.event) {\n        case 'thread.run.step.created':\n            __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id] = event.data;\n            return event.data;\n        case 'thread.run.step.delta':\n            let snapshot = __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id];\n            if (!snapshot) {\n                throw Error('Received a RunStepDelta before creation of a snapshot');\n            }\n            let data = event.data;\n            if (data.delta) {\n                const accumulated = AssistantStream.accumulateDelta(snapshot, data.delta);\n                __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id] = accumulated;\n            }\n            return __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id];\n        case 'thread.run.step.completed':\n        case 'thread.run.step.failed':\n        case 'thread.run.step.cancelled':\n        case 'thread.run.step.expired':\n        case 'thread.run.step.in_progress':\n            __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id] = event.data;\n            break;\n    }\n    if (__classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id])\n        return __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id];\n    throw new Error('No snapshot available');\n}, _AssistantStream_accumulateMessage = function _AssistantStream_accumulateMessage(event, snapshot) {\n    let newContent = [];\n    switch (event.event) {\n        case 'thread.message.created':\n            //On creation the snapshot is just the initial message\n            return [event.data, newContent];\n        case 'thread.message.delta':\n            if (!snapshot) {\n                throw Error('Received a delta with no existing snapshot (there should be one from message creation)');\n            }\n            let data = event.data;\n            //If this delta does not have content, nothing to process\n            if (data.delta.content) {\n                for (const contentElement of data.delta.content) {\n                    if (contentElement.index in snapshot.content) {\n                        let currentContent = snapshot.content[contentElement.index];\n                        snapshot.content[contentElement.index] = __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_accumulateContent).call(this, contentElement, currentContent);\n                    }\n                    else {\n                        snapshot.content[contentElement.index] = contentElement;\n                        // This is a new element\n                        newContent.push(contentElement);\n                    }\n                }\n            }\n            return [snapshot, newContent];\n        case 'thread.message.in_progress':\n        case 'thread.message.completed':\n        case 'thread.message.incomplete':\n            //No changes on other thread events\n            if (snapshot) {\n                return [snapshot, newContent];\n            }\n            else {\n                throw Error('Received thread message event with no existing snapshot');\n            }\n    }\n    throw Error('Tried to accumulate a non-message event');\n}, _AssistantStream_accumulateContent = function _AssistantStream_accumulateContent(contentElement, currentContent) {\n    return AssistantStream.accumulateDelta(currentContent, contentElement);\n}, _AssistantStream_handleRun = function _AssistantStream_handleRun(event) {\n    __classPrivateFieldSet(this, _AssistantStream_currentRunSnapshot, event.data, \"f\");\n    switch (event.event) {\n        case 'thread.run.created':\n            break;\n        case 'thread.run.queued':\n            break;\n        case 'thread.run.in_progress':\n            break;\n        case 'thread.run.requires_action':\n        case 'thread.run.cancelled':\n        case 'thread.run.failed':\n        case 'thread.run.completed':\n        case 'thread.run.expired':\n            __classPrivateFieldSet(this, _AssistantStream_finalRun, event.data, \"f\");\n            if (__classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\")) {\n                this._emit('toolCallDone', __classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"));\n                __classPrivateFieldSet(this, _AssistantStream_currentToolCall, undefined, \"f\");\n            }\n            break;\n        case 'thread.run.cancelling':\n            break;\n    }\n};\nfunction assertNever(_x) { }\n//# sourceMappingURL=AssistantStream.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../core.mjs\";\nimport { CursorPage } from \"../../../pagination.mjs\";\nexport class Messages extends APIResource {\n    /**\n     * Create a message.\n     */\n    create(threadId, body, options) {\n        return this._client.post(`/threads/${threadId}/messages`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Retrieve a message.\n     */\n    retrieve(threadId, messageId, options) {\n        return this._client.get(`/threads/${threadId}/messages/${messageId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Modifies a message.\n     */\n    update(threadId, messageId, body, options) {\n        return this._client.post(`/threads/${threadId}/messages/${messageId}`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    list(threadId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(threadId, {}, query);\n        }\n        return this._client.getAPIList(`/threads/${threadId}/messages`, MessagesPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Deletes a message.\n     */\n    del(threadId, messageId, options) {\n        return this._client.delete(`/threads/${threadId}/messages/${messageId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n}\nexport class MessagesPage extends CursorPage {\n}\nMessages.MessagesPage = MessagesPage;\n//# sourceMappingURL=messages.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../../core.mjs\";\nimport { CursorPage } from \"../../../../pagination.mjs\";\nexport class Steps extends APIResource {\n    retrieve(threadId, runId, stepId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.retrieve(threadId, runId, stepId, {}, query);\n        }\n        return this._client.get(`/threads/${threadId}/runs/${runId}/steps/${stepId}`, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    list(threadId, runId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(threadId, runId, {}, query);\n        }\n        return this._client.getAPIList(`/threads/${threadId}/runs/${runId}/steps`, RunStepsPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n}\nexport class RunStepsPage extends CursorPage {\n}\nSteps.RunStepsPage = RunStepsPage;\n//# sourceMappingURL=steps.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../../core.mjs\";\nimport { AssistantStream } from \"../../../../lib/AssistantStream.mjs\";\nimport { sleep } from \"../../../../core.mjs\";\nimport * as StepsAPI from \"./steps.mjs\";\nimport { RunStepsPage, Steps, } from \"./steps.mjs\";\nimport { CursorPage } from \"../../../../pagination.mjs\";\nexport class Runs extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.steps = new StepsAPI.Steps(this._client);\n    }\n    create(threadId, params, options) {\n        const { include, ...body } = params;\n        return this._client.post(`/threads/${threadId}/runs`, {\n            query: { include },\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n            stream: params.stream ?? false,\n        });\n    }\n    /**\n     * Retrieves a run.\n     */\n    retrieve(threadId, runId, options) {\n        return this._client.get(`/threads/${threadId}/runs/${runId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Modifies a run.\n     */\n    update(threadId, runId, body, options) {\n        return this._client.post(`/threads/${threadId}/runs/${runId}`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    list(threadId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(threadId, {}, query);\n        }\n        return this._client.getAPIList(`/threads/${threadId}/runs`, RunsPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Cancels a run that is `in_progress`.\n     */\n    cancel(threadId, runId, options) {\n        return this._client.post(`/threads/${threadId}/runs/${runId}/cancel`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * A helper to create a run an poll for a terminal state. More information on Run\n     * lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    async createAndPoll(threadId, body, options) {\n        const run = await this.create(threadId, body, options);\n        return await this.poll(threadId, run.id, options);\n    }\n    /**\n     * Create a Run stream\n     *\n     * @deprecated use `stream` instead\n     */\n    createAndStream(threadId, body, options) {\n        return AssistantStream.createAssistantStream(threadId, this._client.beta.threads.runs, body, options);\n    }\n    /**\n     * A helper to poll a run status until it reaches a terminal state. More\n     * information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    async poll(threadId, runId, options) {\n        const headers = { ...options?.headers, 'X-Stainless-Poll-Helper': 'true' };\n        if (options?.pollIntervalMs) {\n            headers['X-Stainless-Custom-Poll-Interval'] = options.pollIntervalMs.toString();\n        }\n        while (true) {\n            const { data: run, response } = await this.retrieve(threadId, runId, {\n                ...options,\n                headers: { ...options?.headers, ...headers },\n            }).withResponse();\n            switch (run.status) {\n                //If we are in any sort of intermediate state we poll\n                case 'queued':\n                case 'in_progress':\n                case 'cancelling':\n                    let sleepInterval = 5000;\n                    if (options?.pollIntervalMs) {\n                        sleepInterval = options.pollIntervalMs;\n                    }\n                    else {\n                        const headerInterval = response.headers.get('openai-poll-after-ms');\n                        if (headerInterval) {\n                            const headerIntervalMs = parseInt(headerInterval);\n                            if (!isNaN(headerIntervalMs)) {\n                                sleepInterval = headerIntervalMs;\n                            }\n                        }\n                    }\n                    await sleep(sleepInterval);\n                    break;\n                //We return the run in any terminal state.\n                case 'requires_action':\n                case 'incomplete':\n                case 'cancelled':\n                case 'completed':\n                case 'failed':\n                case 'expired':\n                    return run;\n            }\n        }\n    }\n    /**\n     * Create a Run stream\n     */\n    stream(threadId, body, options) {\n        return AssistantStream.createAssistantStream(threadId, this._client.beta.threads.runs, body, options);\n    }\n    submitToolOutputs(threadId, runId, body, options) {\n        return this._client.post(`/threads/${threadId}/runs/${runId}/submit_tool_outputs`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n            stream: body.stream ?? false,\n        });\n    }\n    /**\n     * A helper to submit a tool output to a run and poll for a terminal run state.\n     * More information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    async submitToolOutputsAndPoll(threadId, runId, body, options) {\n        const run = await this.submitToolOutputs(threadId, runId, body, options);\n        return await this.poll(threadId, run.id, options);\n    }\n    /**\n     * Submit the tool outputs from a previous run and stream the run to a terminal\n     * state. More information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    submitToolOutputsStream(threadId, runId, body, options) {\n        return AssistantStream.createToolAssistantStream(threadId, runId, this._client.beta.threads.runs, body, options);\n    }\n}\nexport class RunsPage extends CursorPage {\n}\nRuns.RunsPage = RunsPage;\nRuns.Steps = Steps;\nRuns.RunStepsPage = RunStepsPage;\n//# sourceMappingURL=runs.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../core.mjs\";\nimport { AssistantStream } from \"../../../lib/AssistantStream.mjs\";\nimport * as MessagesAPI from \"./messages.mjs\";\nimport { Messages, MessagesPage, } from \"./messages.mjs\";\nimport * as RunsAPI from \"./runs/runs.mjs\";\nimport { Runs, RunsPage, } from \"./runs/runs.mjs\";\nexport class Threads extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.runs = new RunsAPI.Runs(this._client);\n        this.messages = new MessagesAPI.Messages(this._client);\n    }\n    create(body = {}, options) {\n        if (isRequestOptions(body)) {\n            return this.create({}, body);\n        }\n        return this._client.post('/threads', {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Retrieves a thread.\n     */\n    retrieve(threadId, options) {\n        return this._client.get(`/threads/${threadId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Modifies a thread.\n     */\n    update(threadId, body, options) {\n        return this._client.post(`/threads/${threadId}`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Delete a thread.\n     */\n    del(threadId, options) {\n        return this._client.delete(`/threads/${threadId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    createAndRun(body, options) {\n        return this._client.post('/threads/runs', {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n            stream: body.stream ?? false,\n        });\n    }\n    /**\n     * A helper to create a thread, start a run and then poll for a terminal state.\n     * More information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    async createAndRunPoll(body, options) {\n        const run = await this.createAndRun(body, options);\n        return await this.runs.poll(run.thread_id, run.id, options);\n    }\n    /**\n     * Create a thread and stream the run back\n     */\n    createAndRunStream(body, options) {\n        return AssistantStream.createThreadAssistantStream(body, this._client.beta.threads, options);\n    }\n}\nThreads.Runs = Runs;\nThreads.RunsPage = RunsPage;\nThreads.Messages = Messages;\nThreads.MessagesPage = MessagesPage;\n//# sourceMappingURL=threads.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as AssistantsAPI from \"./assistants.mjs\";\nimport * as ChatAPI from \"./chat/chat.mjs\";\nimport { Assistants, AssistantsPage, } from \"./assistants.mjs\";\nimport * as RealtimeAPI from \"./realtime/realtime.mjs\";\nimport { Realtime, } from \"./realtime/realtime.mjs\";\nimport * as ThreadsAPI from \"./threads/threads.mjs\";\nimport { Threads, } from \"./threads/threads.mjs\";\nimport { Chat } from \"./chat/chat.mjs\";\nexport class Beta extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.realtime = new RealtimeAPI.Realtime(this._client);\n        this.chat = new ChatAPI.Chat(this._client);\n        this.assistants = new AssistantsAPI.Assistants(this._client);\n        this.threads = new ThreadsAPI.Threads(this._client);\n    }\n}\nBeta.Realtime = Realtime;\nBeta.Assistants = Assistants;\nBeta.AssistantsPage = AssistantsPage;\nBeta.Threads = Threads;\n//# sourceMappingURL=beta.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nimport { isRequestOptions } from \"../core.mjs\";\nimport { CursorPage } from \"../pagination.mjs\";\nexport class Batches extends APIResource {\n    /**\n     * Creates and executes a batch from an uploaded file of requests\n     */\n    create(body, options) {\n        return this._client.post('/batches', { body, ...options });\n    }\n    /**\n     * Retrieves a batch.\n     */\n    retrieve(batchId, options) {\n        return this._client.get(`/batches/${batchId}`, options);\n    }\n    list(query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/batches', BatchesPage, { query, ...options });\n    }\n    /**\n     * Cancels an in-progress batch. The batch will be in status `cancelling` for up to\n     * 10 minutes, before changing to `cancelled`, where it will have partial results\n     * (if any) available in the output file.\n     */\n    cancel(batchId, options) {\n        return this._client.post(`/batches/${batchId}/cancel`, options);\n    }\n}\nexport class BatchesPage extends CursorPage {\n}\nBatches.BatchesPage = BatchesPage;\n//# sourceMappingURL=batches.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as Core from \"../../core.mjs\";\nexport class Parts extends APIResource {\n    /**\n     * Adds a\n     * [Part](https://platform.openai.com/docs/api-reference/uploads/part-object) to an\n     * [Upload](https://platform.openai.com/docs/api-reference/uploads/object) object.\n     * A Part represents a chunk of bytes from the file you are trying to upload.\n     *\n     * Each Part can be at most 64 MB, and you can add Parts until you hit the Upload\n     * maximum of 8 GB.\n     *\n     * It is possible to add multiple Parts in parallel. You can decide the intended\n     * order of the Parts when you\n     * [complete the Upload](https://platform.openai.com/docs/api-reference/uploads/complete).\n     */\n    create(uploadId, body, options) {\n        return this._client.post(`/uploads/${uploadId}/parts`, Core.multipartFormRequestOptions({ body, ...options }));\n    }\n}\n//# sourceMappingURL=parts.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as PartsAPI from \"./parts.mjs\";\nimport { Parts } from \"./parts.mjs\";\nexport class Uploads extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.parts = new PartsAPI.Parts(this._client);\n    }\n    /**\n     * Creates an intermediate\n     * [Upload](https://platform.openai.com/docs/api-reference/uploads/object) object\n     * that you can add\n     * [Parts](https://platform.openai.com/docs/api-reference/uploads/part-object) to.\n     * Currently, an Upload can accept at most 8 GB in total and expires after an hour\n     * after you create it.\n     *\n     * Once you complete the Upload, we will create a\n     * [File](https://platform.openai.com/docs/api-reference/files/object) object that\n     * contains all the parts you uploaded. This File is usable in the rest of our\n     * platform as a regular File object.\n     *\n     * For certain `purpose` values, the correct `mime_type` must be specified. Please\n     * refer to documentation for the\n     * [supported MIME types for your use case](https://platform.openai.com/docs/assistants/tools/file-search#supported-files).\n     *\n     * For guidance on the proper filename extensions for each purpose, please follow\n     * the documentation on\n     * [creating a File](https://platform.openai.com/docs/api-reference/files/create).\n     */\n    create(body, options) {\n        return this._client.post('/uploads', { body, ...options });\n    }\n    /**\n     * Cancels the Upload. No Parts may be added after an Upload is cancelled.\n     */\n    cancel(uploadId, options) {\n        return this._client.post(`/uploads/${uploadId}/cancel`, options);\n    }\n    /**\n     * Completes the\n     * [Upload](https://platform.openai.com/docs/api-reference/uploads/object).\n     *\n     * Within the returned Upload object, there is a nested\n     * [File](https://platform.openai.com/docs/api-reference/files/object) object that\n     * is ready to use in the rest of the platform.\n     *\n     * You can specify the order of the Parts by passing in an ordered list of the Part\n     * IDs.\n     *\n     * The number of bytes uploaded upon completion must match the number of bytes\n     * initially specified when creating the Upload object. No Parts may be added after\n     * an Upload is completed.\n     */\n    complete(uploadId, body, options) {\n        return this._client.post(`/uploads/${uploadId}/complete`, { body, ...options });\n    }\n}\nUploads.Parts = Parts;\n//# sourceMappingURL=uploads.mjs.map","import { OpenAIError } from \"../error.mjs\";\nimport { isAutoParsableResponseFormat } from \"../lib/parser.mjs\";\nexport function maybeParseResponse(response, params) {\n    if (!params || !hasAutoParseableInput(params)) {\n        return {\n            ...response,\n            output_parsed: null,\n            output: response.output.map((item) => {\n                if (item.type === 'function_call') {\n                    return {\n                        ...item,\n                        parsed_arguments: null,\n                    };\n                }\n                if (item.type === 'message') {\n                    return {\n                        ...item,\n                        content: item.content.map((content) => ({\n                            ...content,\n                            parsed: null,\n                        })),\n                    };\n                }\n                else {\n                    return item;\n                }\n            }),\n        };\n    }\n    return parseResponse(response, params);\n}\nexport function parseResponse(response, params) {\n    const output = response.output.map((item) => {\n        if (item.type === 'function_call') {\n            return {\n                ...item,\n                parsed_arguments: parseToolCall(params, item),\n            };\n        }\n        if (item.type === 'message') {\n            const content = item.content.map((content) => {\n                if (content.type === 'output_text') {\n                    return {\n                        ...content,\n                        parsed: parseTextFormat(params, content.text),\n                    };\n                }\n                return content;\n            });\n            return {\n                ...item,\n                content,\n            };\n        }\n        return item;\n    });\n    const parsed = Object.assign({}, response, { output });\n    if (!Object.getOwnPropertyDescriptor(response, 'output_text')) {\n        addOutputText(parsed);\n    }\n    Object.defineProperty(parsed, 'output_parsed', {\n        enumerable: true,\n        get() {\n            for (const output of parsed.output) {\n                if (output.type !== 'message') {\n                    continue;\n                }\n                for (const content of output.content) {\n                    if (content.type === 'output_text' && content.parsed !== null) {\n                        return content.parsed;\n                    }\n                }\n            }\n            return null;\n        },\n    });\n    return parsed;\n}\nfunction parseTextFormat(params, content) {\n    if (params.text?.format?.type !== 'json_schema') {\n        return null;\n    }\n    if ('$parseRaw' in params.text?.format) {\n        const text_format = params.text?.format;\n        return text_format.$parseRaw(content);\n    }\n    return JSON.parse(content);\n}\nexport function hasAutoParseableInput(params) {\n    if (isAutoParsableResponseFormat(params.text?.format)) {\n        return true;\n    }\n    return false;\n}\nexport function makeParseableResponseTool(tool, { parser, callback, }) {\n    const obj = { ...tool };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: 'auto-parseable-tool',\n            enumerable: false,\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false,\n        },\n        $callback: {\n            value: callback,\n            enumerable: false,\n        },\n    });\n    return obj;\n}\nexport function isAutoParsableTool(tool) {\n    return tool?.['$brand'] === 'auto-parseable-tool';\n}\nfunction getInputToolByName(input_tools, name) {\n    return input_tools.find((tool) => tool.type === 'function' && tool.name === name);\n}\nfunction parseToolCall(params, toolCall) {\n    const inputTool = getInputToolByName(params.tools ?? [], toolCall.name);\n    return {\n        ...toolCall,\n        ...toolCall,\n        parsed_arguments: isAutoParsableTool(inputTool) ? inputTool.$parseRaw(toolCall.arguments)\n            : inputTool?.strict ? JSON.parse(toolCall.arguments)\n                : null,\n    };\n}\nexport function shouldParseToolCall(params, toolCall) {\n    if (!params) {\n        return false;\n    }\n    const inputTool = getInputToolByName(params.tools ?? [], toolCall.name);\n    return isAutoParsableTool(inputTool) || inputTool?.strict || false;\n}\nexport function validateInputTools(tools) {\n    for (const tool of tools ?? []) {\n        if (tool.type !== 'function') {\n            throw new OpenAIError(`Currently only \\`function\\` tool types support auto-parsing; Received \\`${tool.type}\\``);\n        }\n        if (tool.function.strict !== true) {\n            throw new OpenAIError(`The \\`${tool.function.name}\\` tool is not marked with \\`strict: true\\`. Only strict function tools can be auto-parsed`);\n        }\n    }\n}\nexport function addOutputText(rsp) {\n    const texts = [];\n    for (const output of rsp.output) {\n        if (output.type !== 'message') {\n            continue;\n        }\n        for (const content of output.content) {\n            if (content.type === 'output_text') {\n                texts.push(content.text);\n            }\n        }\n    }\n    rsp.output_text = texts.join('');\n}\n//# sourceMappingURL=ResponsesParser.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport { isRequestOptions } from \"../../core.mjs\";\nimport { ResponseItemsPage } from \"./responses.mjs\";\nexport class InputItems extends APIResource {\n    list(responseId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(responseId, {}, query);\n        }\n        return this._client.getAPIList(`/responses/${responseId}/input_items`, ResponseItemsPage, {\n            query,\n            ...options,\n        });\n    }\n}\nexport { ResponseItemsPage };\n//# sourceMappingURL=input-items.mjs.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _ResponseStream_instances, _ResponseStream_params, _ResponseStream_currentResponseSnapshot, _ResponseStream_finalResponse, _ResponseStream_beginRequest, _ResponseStream_addEvent, _ResponseStream_endRequest, _ResponseStream_accumulateResponse;\nimport { APIUserAbortError, OpenAIError } from \"../../error.mjs\";\nimport { EventStream } from \"../EventStream.mjs\";\nimport { maybeParseResponse } from \"../ResponsesParser.mjs\";\nexport class ResponseStream extends EventStream {\n    constructor(params) {\n        super();\n        _ResponseStream_instances.add(this);\n        _ResponseStream_params.set(this, void 0);\n        _ResponseStream_currentResponseSnapshot.set(this, void 0);\n        _ResponseStream_finalResponse.set(this, void 0);\n        __classPrivateFieldSet(this, _ResponseStream_params, params, \"f\");\n    }\n    static createResponse(client, params, options) {\n        const runner = new ResponseStream(params);\n        runner._run(() => runner._createResponse(client, params, {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' },\n        }));\n        return runner;\n    }\n    async _createResponse(client, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _ResponseStream_instances, \"m\", _ResponseStream_beginRequest).call(this);\n        const stream = await client.responses.create({ ...params, stream: true }, { ...options, signal: this.controller.signal });\n        this._connected();\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _ResponseStream_instances, \"m\", _ResponseStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return __classPrivateFieldGet(this, _ResponseStream_instances, \"m\", _ResponseStream_endRequest).call(this);\n    }\n    [(_ResponseStream_params = new WeakMap(), _ResponseStream_currentResponseSnapshot = new WeakMap(), _ResponseStream_finalResponse = new WeakMap(), _ResponseStream_instances = new WeakSet(), _ResponseStream_beginRequest = function _ResponseStream_beginRequest() {\n        if (this.ended)\n            return;\n        __classPrivateFieldSet(this, _ResponseStream_currentResponseSnapshot, undefined, \"f\");\n    }, _ResponseStream_addEvent = function _ResponseStream_addEvent(event) {\n        if (this.ended)\n            return;\n        const response = __classPrivateFieldGet(this, _ResponseStream_instances, \"m\", _ResponseStream_accumulateResponse).call(this, event);\n        this._emit('event', event);\n        switch (event.type) {\n            case 'response.output_text.delta': {\n                const output = response.output[event.output_index];\n                if (!output) {\n                    throw new OpenAIError(`missing output at index ${event.output_index}`);\n                }\n                if (output.type === 'message') {\n                    const content = output.content[event.content_index];\n                    if (!content) {\n                        throw new OpenAIError(`missing content at index ${event.content_index}`);\n                    }\n                    if (content.type !== 'output_text') {\n                        throw new OpenAIError(`expected content to be 'output_text', got ${content.type}`);\n                    }\n                    this._emit('response.output_text.delta', {\n                        ...event,\n                        snapshot: content.text,\n                    });\n                }\n                break;\n            }\n            case 'response.function_call_arguments.delta': {\n                const output = response.output[event.output_index];\n                if (!output) {\n                    throw new OpenAIError(`missing output at index ${event.output_index}`);\n                }\n                if (output.type === 'function_call') {\n                    this._emit('response.function_call_arguments.delta', {\n                        ...event,\n                        snapshot: output.arguments,\n                    });\n                }\n                break;\n            }\n            default:\n                // @ts-ignore\n                this._emit(event.type, event);\n                break;\n        }\n    }, _ResponseStream_endRequest = function _ResponseStream_endRequest() {\n        if (this.ended) {\n            throw new OpenAIError(`stream has ended, this shouldn't happen`);\n        }\n        const snapshot = __classPrivateFieldGet(this, _ResponseStream_currentResponseSnapshot, \"f\");\n        if (!snapshot) {\n            throw new OpenAIError(`request ended without sending any events`);\n        }\n        __classPrivateFieldSet(this, _ResponseStream_currentResponseSnapshot, undefined, \"f\");\n        const parsedResponse = finalizeResponse(snapshot, __classPrivateFieldGet(this, _ResponseStream_params, \"f\"));\n        __classPrivateFieldSet(this, _ResponseStream_finalResponse, parsedResponse, \"f\");\n        return parsedResponse;\n    }, _ResponseStream_accumulateResponse = function _ResponseStream_accumulateResponse(event) {\n        let snapshot = __classPrivateFieldGet(this, _ResponseStream_currentResponseSnapshot, \"f\");\n        if (!snapshot) {\n            if (event.type !== 'response.created') {\n                throw new OpenAIError(`When snapshot hasn't been set yet, expected 'response.created' event, got ${event.type}`);\n            }\n            snapshot = __classPrivateFieldSet(this, _ResponseStream_currentResponseSnapshot, event.response, \"f\");\n            return snapshot;\n        }\n        switch (event.type) {\n            case 'response.output_item.added': {\n                snapshot.output.push(event.item);\n                break;\n            }\n            case 'response.content_part.added': {\n                const output = snapshot.output[event.output_index];\n                if (!output) {\n                    throw new OpenAIError(`missing output at index ${event.output_index}`);\n                }\n                if (output.type === 'message') {\n                    output.content.push(event.part);\n                }\n                break;\n            }\n            case 'response.output_text.delta': {\n                const output = snapshot.output[event.output_index];\n                if (!output) {\n                    throw new OpenAIError(`missing output at index ${event.output_index}`);\n                }\n                if (output.type === 'message') {\n                    const content = output.content[event.content_index];\n                    if (!content) {\n                        throw new OpenAIError(`missing content at index ${event.content_index}`);\n                    }\n                    if (content.type !== 'output_text') {\n                        throw new OpenAIError(`expected content to be 'output_text', got ${content.type}`);\n                    }\n                    content.text += event.delta;\n                }\n                break;\n            }\n            case 'response.function_call_arguments.delta': {\n                const output = snapshot.output[event.output_index];\n                if (!output) {\n                    throw new OpenAIError(`missing output at index ${event.output_index}`);\n                }\n                if (output.type === 'function_call') {\n                    output.arguments += event.delta;\n                }\n                break;\n            }\n            case 'response.completed': {\n                __classPrivateFieldSet(this, _ResponseStream_currentResponseSnapshot, event.response, \"f\");\n                break;\n            }\n        }\n        return snapshot;\n    }, Symbol.asyncIterator)]() {\n        const pushQueue = [];\n        const readQueue = [];\n        let done = false;\n        this.on('event', (event) => {\n            const reader = readQueue.shift();\n            if (reader) {\n                reader.resolve(event);\n            }\n            else {\n                pushQueue.push(event);\n            }\n        });\n        this.on('end', () => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.resolve(undefined);\n            }\n            readQueue.length = 0;\n        });\n        this.on('abort', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        this.on('error', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        return {\n            next: async () => {\n                if (!pushQueue.length) {\n                    if (done) {\n                        return { value: undefined, done: true };\n                    }\n                    return new Promise((resolve, reject) => readQueue.push({ resolve, reject })).then((event) => (event ? { value: event, done: false } : { value: undefined, done: true }));\n                }\n                const event = pushQueue.shift();\n                return { value: event, done: false };\n            },\n            return: async () => {\n                this.abort();\n                return { value: undefined, done: true };\n            },\n        };\n    }\n    /**\n     * @returns a promise that resolves with the final Response, or rejects\n     * if an error occurred or the stream ended prematurely without producing a REsponse.\n     */\n    async finalResponse() {\n        await this.done();\n        const response = __classPrivateFieldGet(this, _ResponseStream_finalResponse, \"f\");\n        if (!response)\n            throw new OpenAIError('stream ended without producing a ChatCompletion');\n        return response;\n    }\n}\nfunction finalizeResponse(snapshot, params) {\n    return maybeParseResponse(snapshot, params);\n}\n//# sourceMappingURL=ResponseStream.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nvar _a;\nimport * as qs from \"./internal/qs/index.mjs\";\nimport * as Core from \"./core.mjs\";\nimport * as Errors from \"./error.mjs\";\nimport * as Pagination from \"./pagination.mjs\";\nimport * as Uploads from \"./uploads.mjs\";\nimport * as API from \"./resources/index.mjs\";\nimport { Batches, BatchesPage, } from \"./resources/batches.mjs\";\nimport { Completions, } from \"./resources/completions.mjs\";\nimport { Embeddings, } from \"./resources/embeddings.mjs\";\nimport { FileObjectsPage, Files, } from \"./resources/files.mjs\";\nimport { Images, } from \"./resources/images.mjs\";\nimport { Models, ModelsPage } from \"./resources/models.mjs\";\nimport { Moderations, } from \"./resources/moderations.mjs\";\nimport { Audio } from \"./resources/audio/audio.mjs\";\nimport { Beta } from \"./resources/beta/beta.mjs\";\nimport { Chat } from \"./resources/chat/chat.mjs\";\nimport { FineTuning } from \"./resources/fine-tuning/fine-tuning.mjs\";\nimport { Responses } from \"./resources/responses/responses.mjs\";\nimport { Uploads as UploadsAPIUploads, } from \"./resources/uploads/uploads.mjs\";\nimport { VectorStoreSearchResponsesPage, VectorStores, VectorStoresPage, } from \"./resources/vector-stores/vector-stores.mjs\";\nimport { ChatCompletionsPage, } from \"./resources/chat/completions/completions.mjs\";\n/**\n * API Client for interfacing with the OpenAI API.\n */\nexport class OpenAI extends Core.APIClient {\n    /**\n     * API Client for interfacing with the OpenAI API.\n     *\n     * @param {string | undefined} [opts.apiKey=process.env['OPENAI_API_KEY'] ?? undefined]\n     * @param {string | null | undefined} [opts.organization=process.env['OPENAI_ORG_ID'] ?? null]\n     * @param {string | null | undefined} [opts.project=process.env['OPENAI_PROJECT_ID'] ?? null]\n     * @param {string} [opts.baseURL=process.env['OPENAI_BASE_URL'] ?? https://api.openai.com/v1] - Override the default base URL for the API.\n     * @param {number} [opts.timeout=10 minutes] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n     * @param {number} [opts.httpAgent] - An HTTP agent used to manage HTTP(s) connections.\n     * @param {Core.Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n     * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n     * @param {Core.Headers} opts.defaultHeaders - Default headers to include with every request to the API.\n     * @param {Core.DefaultQuery} opts.defaultQuery - Default query parameters to include with every request to the API.\n     * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n     */\n    constructor({ baseURL = Core.readEnv('OPENAI_BASE_URL'), apiKey = Core.readEnv('OPENAI_API_KEY'), organization = Core.readEnv('OPENAI_ORG_ID') ?? null, project = Core.readEnv('OPENAI_PROJECT_ID') ?? null, ...opts } = {}) {\n        if (apiKey === undefined) {\n            throw new Errors.OpenAIError(\"The OPENAI_API_KEY environment variable is missing or empty; either provide it, or instantiate the OpenAI client with an apiKey option, like new OpenAI({ apiKey: 'My API Key' }).\");\n        }\n        const options = {\n            apiKey,\n            organization,\n            project,\n            ...opts,\n            baseURL: baseURL || `https://api.openai.com/v1`,\n        };\n        if (!options.dangerouslyAllowBrowser && Core.isRunningInBrowser()) {\n            throw new Errors.OpenAIError(\"It looks like you're running in a browser-like environment.\\n\\nThis is disabled by default, as it risks exposing your secret API credentials to attackers.\\nIf you understand the risks and have appropriate mitigations in place,\\nyou can set the `dangerouslyAllowBrowser` option to `true`, e.g.,\\n\\nnew OpenAI({ apiKey, dangerouslyAllowBrowser: true });\\n\\nhttps://help.openai.com/en/articles/5112595-best-practices-for-api-key-safety\\n\");\n        }\n        super({\n            baseURL: options.baseURL,\n            timeout: options.timeout ?? 600000 /* 10 minutes */,\n            httpAgent: options.httpAgent,\n            maxRetries: options.maxRetries,\n            fetch: options.fetch,\n        });\n        this.completions = new API.Completions(this);\n        this.chat = new API.Chat(this);\n        this.embeddings = new API.Embeddings(this);\n        this.files = new API.Files(this);\n        this.images = new API.Images(this);\n        this.audio = new API.Audio(this);\n        this.moderations = new API.Moderations(this);\n        this.models = new API.Models(this);\n        this.fineTuning = new API.FineTuning(this);\n        this.vectorStores = new API.VectorStores(this);\n        this.beta = new API.Beta(this);\n        this.batches = new API.Batches(this);\n        this.uploads = new API.Uploads(this);\n        this.responses = new API.Responses(this);\n        this._options = options;\n        this.apiKey = apiKey;\n        this.organization = organization;\n        this.project = project;\n    }\n    defaultQuery() {\n        return this._options.defaultQuery;\n    }\n    defaultHeaders(opts) {\n        return {\n            ...super.defaultHeaders(opts),\n            'OpenAI-Organization': this.organization,\n            'OpenAI-Project': this.project,\n            ...this._options.defaultHeaders,\n        };\n    }\n    authHeaders(opts) {\n        return { Authorization: `Bearer ${this.apiKey}` };\n    }\n    stringifyQuery(query) {\n        return qs.stringify(query, { arrayFormat: 'brackets' });\n    }\n}\n_a = OpenAI;\nOpenAI.OpenAI = _a;\nOpenAI.DEFAULT_TIMEOUT = 600000; // 10 minutes\nOpenAI.OpenAIError = Errors.OpenAIError;\nOpenAI.APIError = Errors.APIError;\nOpenAI.APIConnectionError = Errors.APIConnectionError;\nOpenAI.APIConnectionTimeoutError = Errors.APIConnectionTimeoutError;\nOpenAI.APIUserAbortError = Errors.APIUserAbortError;\nOpenAI.NotFoundError = Errors.NotFoundError;\nOpenAI.ConflictError = Errors.ConflictError;\nOpenAI.RateLimitError = Errors.RateLimitError;\nOpenAI.BadRequestError = Errors.BadRequestError;\nOpenAI.AuthenticationError = Errors.AuthenticationError;\nOpenAI.InternalServerError = Errors.InternalServerError;\nOpenAI.PermissionDeniedError = Errors.PermissionDeniedError;\nOpenAI.UnprocessableEntityError = Errors.UnprocessableEntityError;\nOpenAI.toFile = Uploads.toFile;\nOpenAI.fileFromPath = Uploads.fileFromPath;\nOpenAI.Completions = Completions;\nOpenAI.Chat = Chat;\nOpenAI.ChatCompletionsPage = ChatCompletionsPage;\nOpenAI.Embeddings = Embeddings;\nOpenAI.Files = Files;\nOpenAI.FileObjectsPage = FileObjectsPage;\nOpenAI.Images = Images;\nOpenAI.Audio = Audio;\nOpenAI.Moderations = Moderations;\nOpenAI.Models = Models;\nOpenAI.ModelsPage = ModelsPage;\nOpenAI.FineTuning = FineTuning;\nOpenAI.VectorStores = VectorStores;\nOpenAI.VectorStoresPage = VectorStoresPage;\nOpenAI.VectorStoreSearchResponsesPage = VectorStoreSearchResponsesPage;\nOpenAI.Beta = Beta;\nOpenAI.Batches = Batches;\nOpenAI.BatchesPage = BatchesPage;\nOpenAI.Uploads = UploadsAPIUploads;\nOpenAI.Responses = Responses;\n/** API Client for interfacing with the Azure OpenAI API. */\nexport class AzureOpenAI extends OpenAI {\n    /**\n     * API Client for interfacing with the Azure OpenAI API.\n     *\n     * @param {string | undefined} [opts.apiVersion=process.env['OPENAI_API_VERSION'] ?? undefined]\n     * @param {string | undefined} [opts.endpoint=process.env['AZURE_OPENAI_ENDPOINT'] ?? undefined] - Your Azure endpoint, including the resource, e.g. `https://example-resource.azure.openai.com/`\n     * @param {string | undefined} [opts.apiKey=process.env['AZURE_OPENAI_API_KEY'] ?? undefined]\n     * @param {string | undefined} opts.deployment - A model deployment, if given, sets the base client URL to include `/deployments/{deployment}`.\n     * @param {string | null | undefined} [opts.organization=process.env['OPENAI_ORG_ID'] ?? null]\n     * @param {string} [opts.baseURL=process.env['OPENAI_BASE_URL']] - Sets the base URL for the API, e.g. `https://example-resource.azure.openai.com/openai/`.\n     * @param {number} [opts.timeout=10 minutes] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n     * @param {number} [opts.httpAgent] - An HTTP agent used to manage HTTP(s) connections.\n     * @param {Core.Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n     * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n     * @param {Core.Headers} opts.defaultHeaders - Default headers to include with every request to the API.\n     * @param {Core.DefaultQuery} opts.defaultQuery - Default query parameters to include with every request to the API.\n     * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n     */\n    constructor({ baseURL = Core.readEnv('OPENAI_BASE_URL'), apiKey = Core.readEnv('AZURE_OPENAI_API_KEY'), apiVersion = Core.readEnv('OPENAI_API_VERSION'), endpoint, deployment, azureADTokenProvider, dangerouslyAllowBrowser, ...opts } = {}) {\n        if (!apiVersion) {\n            throw new Errors.OpenAIError(\"The OPENAI_API_VERSION environment variable is missing or empty; either provide it, or instantiate the AzureOpenAI client with an apiVersion option, like new AzureOpenAI({ apiVersion: 'My API Version' }).\");\n        }\n        if (typeof azureADTokenProvider === 'function') {\n            dangerouslyAllowBrowser = true;\n        }\n        if (!azureADTokenProvider && !apiKey) {\n            throw new Errors.OpenAIError('Missing credentials. Please pass one of `apiKey` and `azureADTokenProvider`, or set the `AZURE_OPENAI_API_KEY` environment variable.');\n        }\n        if (azureADTokenProvider && apiKey) {\n            throw new Errors.OpenAIError('The `apiKey` and `azureADTokenProvider` arguments are mutually exclusive; only one can be passed at a time.');\n        }\n        // define a sentinel value to avoid any typing issues\n        apiKey ?? (apiKey = API_KEY_SENTINEL);\n        opts.defaultQuery = { ...opts.defaultQuery, 'api-version': apiVersion };\n        if (!baseURL) {\n            if (!endpoint) {\n                endpoint = process.env['AZURE_OPENAI_ENDPOINT'];\n            }\n            if (!endpoint) {\n                throw new Errors.OpenAIError('Must provide one of the `baseURL` or `endpoint` arguments, or the `AZURE_OPENAI_ENDPOINT` environment variable');\n            }\n            baseURL = `${endpoint}/openai`;\n        }\n        else {\n            if (endpoint) {\n                throw new Errors.OpenAIError('baseURL and endpoint are mutually exclusive');\n            }\n        }\n        super({\n            apiKey,\n            baseURL,\n            ...opts,\n            ...(dangerouslyAllowBrowser !== undefined ? { dangerouslyAllowBrowser } : {}),\n        });\n        this.apiVersion = '';\n        this._azureADTokenProvider = azureADTokenProvider;\n        this.apiVersion = apiVersion;\n        this.deploymentName = deployment;\n    }\n    buildRequest(options, props = {}) {\n        if (_deployments_endpoints.has(options.path) && options.method === 'post' && options.body !== undefined) {\n            if (!Core.isObj(options.body)) {\n                throw new Error('Expected request body to be an object');\n            }\n            const model = this.deploymentName || options.body['model'] || options.__metadata?.['model'];\n            if (model !== undefined && !this.baseURL.includes('/deployments')) {\n                options.path = `/deployments/${model}${options.path}`;\n            }\n        }\n        return super.buildRequest(options, props);\n    }\n    async _getAzureADToken() {\n        if (typeof this._azureADTokenProvider === 'function') {\n            const token = await this._azureADTokenProvider();\n            if (!token || typeof token !== 'string') {\n                throw new Errors.OpenAIError(`Expected 'azureADTokenProvider' argument to return a string but it returned ${token}`);\n            }\n            return token;\n        }\n        return undefined;\n    }\n    authHeaders(opts) {\n        return {};\n    }\n    async prepareOptions(opts) {\n        /**\n         * The user should provide a bearer token provider if they want\n         * to use Azure AD authentication. The user shouldn't set the\n         * Authorization header manually because the header is overwritten\n         * with the Azure AD token if a bearer token provider is provided.\n         */\n        if (opts.headers?.['api-key']) {\n            return super.prepareOptions(opts);\n        }\n        const token = await this._getAzureADToken();\n        opts.headers ?? (opts.headers = {});\n        if (token) {\n            opts.headers['Authorization'] = `Bearer ${token}`;\n        }\n        else if (this.apiKey !== API_KEY_SENTINEL) {\n            opts.headers['api-key'] = this.apiKey;\n        }\n        else {\n            throw new Errors.OpenAIError('Unable to handle auth');\n        }\n        return super.prepareOptions(opts);\n    }\n}\nconst _deployments_endpoints = new Set([\n    '/completions',\n    '/chat/completions',\n    '/embeddings',\n    '/audio/transcriptions',\n    '/audio/translations',\n    '/audio/speech',\n    '/images/generations',\n]);\nconst API_KEY_SENTINEL = '<Missing Key>';\nexport { toFile, fileFromPath } from \"./uploads.mjs\";\nexport { OpenAIError, APIError, APIConnectionError, APIConnectionTimeoutError, APIUserAbortError, NotFoundError, ConflictError, RateLimitError, BadRequestError, AuthenticationError, InternalServerError, PermissionDeniedError, UnprocessableEntityError, } from \"./error.mjs\";\nexport default OpenAI;\n//# sourceMappingURL=index.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { parseResponse, addOutputText, } from \"../../lib/ResponsesParser.mjs\";\nimport { isRequestOptions } from \"../../core.mjs\";\nimport { APIResource } from \"../../resource.mjs\";\nimport * as InputItemsAPI from \"./input-items.mjs\";\nimport { InputItems } from \"./input-items.mjs\";\nimport { ResponseStream } from \"../../lib/responses/ResponseStream.mjs\";\nimport { CursorPage } from \"../../pagination.mjs\";\nexport class Responses extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.inputItems = new InputItemsAPI.InputItems(this._client);\n    }\n    create(body, options) {\n        return this._client.post('/responses', { body, ...options, stream: body.stream ?? false })._thenUnwrap((rsp) => {\n            if ('object' in rsp && rsp.object === 'response') {\n                addOutputText(rsp);\n            }\n            return rsp;\n        });\n    }\n    retrieve(responseId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.retrieve(responseId, {}, query);\n        }\n        return this._client.get(`/responses/${responseId}`, { query, ...options });\n    }\n    /**\n     * Deletes a model response with the given ID.\n     */\n    del(responseId, options) {\n        return this._client.delete(`/responses/${responseId}`, {\n            ...options,\n            headers: { Accept: '*/*', ...options?.headers },\n        });\n    }\n    parse(body, options) {\n        return this._client.responses\n            .create(body, options)\n            ._thenUnwrap((response) => parseResponse(response, body));\n    }\n    /**\n     * Creates a chat completion stream\n     */\n    stream(body, options) {\n        return ResponseStream.createResponse(this._client, body, options);\n    }\n}\nexport class ResponseItemsPage extends CursorPage {\n}\nResponses.InputItems = InputItems;\n//# sourceMappingURL=responses.mjs.map","/* global clearInterval, console, setInterval */\n\nimport OpenAI from \"openai\";\n\n/**\n * Utility function for string templating\n * @customfunction\n * @param {string[]} strings A list of values. The first one is the template and subsequent ones are the parameters to plug into the template. Performs like sprintf in C.\n * @returns {string} The templated string.\n */\nexport function format(strings) {\n  console.log(strings);\n  console.log(arguments);\n  //return \"TEST\";\n  try {\n    var s = strings[0];\n    for (var i = 0; i < strings.length - 1; i++) {\n    var reg = new RegExp(\"\\\\{\" + i + \"\\\\}\", \"gm\");\n      s = s.replace(reg, strings[i + 1]);\n    }\n    return s;\n  } catch (e) {\n    console.log(e);\n    return \"ERROR: \" + e;\n  }\n}\n\n/**\n * Utility function for finding things in strings with regex\n * @customfunction\n * @param {string} input to search\n * @param {string} regex pattern to match.\n * @param {string} [options] such as i for case insensitive.\n * @returns {string} The matched pattern or error if not found.\n */\nexport function regexsearch(input, regex, options) {\n  console.log(arguments);\n  try {\n    const matches = input.match(new RegExp(regex, options));\n    console.log(matches); // Output: [\"123\", \"456\", \"7890\"]\n    return matches[0]\n  } catch (e) {\n    console.log(e);\n    throw e;\n  }\n}\n\n/**\n * Utility function for finding emails in strings\n * @customfunction\n * @param {string} input to search\n * @returns {string} The matched pattern or error if not found.\n */\nexport function email(input) {\n  return regexsearch(input, '[\\\\w\\\\.-]+@[\\\\w\\\\.-]+\\\\.[a-zA-Z]{2,6}', \"gmi\");\n}\n\n/**\n * Utility function for finding phones in strings\n * @customfunction\n * @param {string} input to search\n * @returns {string} The matched pattern or error if not found.\n */\nexport function phone(input) {\n  return regexsearch(input, '(\\\\+\\\\d{1,2}\\\\s)?\\\\(?\\\\d{3}\\\\)?[\\\\s.-]\\\\d{3}[\\\\s.-]\\\\d{4}', \"gmi\");\n}\n\n/**\n * Utility function for finding phones in strings\n * @customfunction\n * @param {string} input to search\n * @returns {string} The matched pattern or error if not found.\n */\nexport function usphone(input) {\n  return regexsearch(input, '(\\\\+0?1\\\\s)?\\\\(?\\\\d{3}\\\\)?[\\\\s.-]\\\\d{3}[\\\\s.-]\\\\d{4}', \"gmi\");\n}\n\n/**\n * Simple Gen AI Function\n * @customfunction\n * @param {string} request Your AI Prompt\n * @param {string} [system_prompt] system prompt it must follow. Defaults to You are a helpful, smart, kind, and efficient AI assistant. You always fulfill the user's requests to the best of your ability. You do not yap. \n * @param {string} [hint_text] hint text to clue it in on what it is going to say in response. Defaults to Here is a response to your question and nothing more\n * @param {number} [max_tokens] max tokens (defaults 500)\n * @param {number} [temperature] temperature (defaults 0.3)\n */\nexport function genai(request, system_prompt, hint_text, max_tokens, temperature) {\n  try {\n    console.log(request);\n\n    aimodel = localStorage.getItem('freeai-aimodel') || 'lmstudio-community/Meta-Llama-3.1-8B-Instruct-GGUF';\n    aibaseurl = localStorage.getItem('freeai-aibaseurl') || \"http://localhost:1234/v1\"\n    aiapikey = localStorage.getItem('freeai-aiapikey') || \"lm-studio\";\n\n    const client = new OpenAI({\n      baseURL: aibaseurl,\n      apiKey: aiapikey,\n      dangerouslyAllowBrowser: true,\n      // apiKey: process.env['OPENAI_API_KEY'], // This is the default and can be omitted\n    });\n\n    if (!system_prompt) system_prompt = \"You are a helpful, smart, kind, and efficient AI assistant. You always fulfill the user's requests to the best of your ability. You do not yap. \";\n    if (!hint_text) hint_text = \"Here is a response to your question and nothing more\";\n    if (!max_tokens) max_tokens = 500;\n    if (temperature === null || temperature === undefined) temperature = 0.7;\n\n    return client.chat.completions.create({\n      model: aimodel,\n      messages: [\n        {\"role\": \"system\", \"content\": system_prompt},\n        {\"role\": \"user\", \"content\": request},\n        {\"role\": \"assistant\", \"content\": hint_text + \": \\n\\n```\\n\"}\n      ],\n      stop: [\"`\", \"``\", \"```\"],\n      max_completion_tokens: max_tokens,\n      temperature: temperature,\n      }).then(response => {\n        return response.choices[0].message.content.trim().replace(\"\\n\", \"\\r\\n\");\n      })\n      .catch(e => \"ERROR QUERYING: \" + e.message);\n  } catch (e) {\n    return \"ERROR: \" + JSON.stringify(e.message);\n  }\n  //invocation.setResult(\"Loading\")\n}\n\n/**\n * Simple Gen AI Function for content extraction\n * @customfunction\n * @param {string} content Content to extract from\n * @param {string} extract What you want to extract\n */\nexport function genaiextract(content, extract) {\n  try {\n    return genai(\n      \"Extract \" + extract + \" from the following content: \" + content, \n      \"You are a helpful, smart, kind, and efficient AI assistant. You always fulfill the user's requests to the best of your ability. You do not yap. \",\n      \"Here is \" + extract\n    );\n  } catch (e) {\n    return \"ERROR: \" + JSON.stringify(e.message);\n  }\n  //invocation.setResult(\"Loading\")\n}\n\n/**\n * Add two numbers\n * @customfunction\n * @param {number} first First number\n * @param {number} second Second number\n * @returns {number} The sum of the two numbers.\n\nexport function add(first, second) {\n  console.log(\"TEST\");\n  return first + second;\n}\n */\n\n\n/**\n * Displays the current time once a second\n * @customfunction\n * @param {CustomFunctions.StreamingInvocation<string>} invocation Custom function invocation\n\nexport function clock(invocation) {\n  const timer = setInterval(() => {\n    const time = currentTime();\n    invocation.setResult(time);\n  }, 1000);\n\n  invocation.onCanceled = () => {\n    clearInterval(timer);\n  };\n} */\n\n/**\n * Returns the current time\n * @returns {string} String with the current time formatted for the current locale.\n\nexport function currentTime() {\n  return new Date().toLocaleTimeString();\n}\n */\n/**\n * Increments a value once a second.\n * @customfunction\n * @param {number} incrementBy Amount to increment\n * @param {CustomFunctions.StreamingInvocation<number>} invocation\n\nexport function increment(incrementBy, invocation) {\n  let result = 0;\n  const timer = setInterval(() => {\n    result += incrementBy;\n    invocation.setResult(result);\n  }, 1000);\n\n  invocation.onCanceled = () => {\n    clearInterval(timer);\n  };\n}\n */\n/**\n * Writes a message to console.log().\n * @customfunction LOG\n * @param {string} message String to write.\n * @returns String to write.\n\nexport function logMessage(message) {\n  console.log(message);\n\n  return message;\n}\n */\nCustomFunctions.associate(\"FORMAT\", format);\nCustomFunctions.associate(\"REGEXSEARCH\", regexsearch);\nCustomFunctions.associate(\"EMAIL\", email);\nCustomFunctions.associate(\"PHONE\", phone);\nCustomFunctions.associate(\"USPHONE\", usphone);\nCustomFunctions.associate(\"GENAI\", genai);\nCustomFunctions.associate(\"GENAIEXTRACT\", genaiextract);"],"names":["default_format","formatters","RFC1738","v","String","replace","RFC3986","is_array","Object","prototype","hasOwnProperty","Array","isArray","hex_table","array","i","push","toString","toUpperCase","limit","maybe_map","val","fn","mapped","length","array_prefix_generators","brackets","prefix","comma","indices","key","repeat","push_to_array","arr","value_or_array","apply","to_ISO","Date","toISOString","defaults","addQueryPrefix","allowDots","allowEmptyArrays","arrayFormat","charset","charsetSentinel","delimiter","encode","encodeDotInKeys","encoder","str","_defaultEncoder","_kind","format","string","Symbol","call","escape","$0","parseInt","slice","out","j","segment","c","charCodeAt","charAt","join","encodeValuesOnly","formatter","serializeDate","date","skipNulls","strictNullHandling","sentinel","inner_stringify","object","generateArrayPrefix","commaRoundTrip","filter","sort","sideChannel","obj","tmp_sc","step","find_flag","get","pos","RangeError","value","constructor","isBuffer","is_buffer","key_value","values","obj_keys","keys","encoded_prefix","adjusted_prefix","encoded_key","key_prefix","set","valueSideChannel","WeakMap","VERSION","kind","getDefaultAgent","fileFromPath","isFsReadStream","auto","MultipartBody","body","this","toStringTag","init","shims","options","Error","fetch","Request","Response","Headers","FormData","Blob","File","ReadableStream","getMultipartRequestOptions","manuallyImported","recommendation","_fetch","_Request","_Response","_Headers","error","message","async","form","opts","url","APIError","status","headers","super","makeMessage","request_id","data","code","param","type","msg","JSON","stringify","generate","errorResponse","APIConnectionError","cause","castToError","BadRequestError","AuthenticationError","PermissionDeniedError","NotFoundError","ConflictError","UnprocessableEntityError","RateLimitError","InternalServerError","APIUserAbortError","undefined","APIConnectionTimeoutError","LengthFinishReasonError","ContentFilterFinishReasonError","_LineDecoder_carriageReturnIndex","__classPrivateFieldSet","receiver","state","f","TypeError","has","__classPrivateFieldGet","LineDecoder","buffer","Uint8Array","decode","chunk","binaryChunk","ArrayBuffer","TextEncoder","newData","lines","patternIndex","findNewlineIndex","carriage","index","decodeText","endIndex","preceding","line","bytes","Buffer","from","name","TextDecoder","textDecoder","flush","startIndex","findDoubleNewlineIndex","ReadableStreamToAsyncIterable","stream","asyncIterator","reader","getReader","next","result","read","done","releaseLock","e","cancelPromise","cancel","NEWLINE_CHARS","Set","NEWLINE_REGEXP","Stream","iterator","controller","fromSSEResponse","response","consumed","sse","abort","sseDecoder","SSEDecoder","lineDecoder","iter","sseChunk","iterSSEChunks","_iterSSEMessages","startsWith","event","parse","console","raw","createResponseHeaders","fromReadableStream","readableStream","iterLines","tee","left","right","teeIterator","queue","shift","toReadableStream","self","start","pull","ctrl","close","enqueue","err","return","chunks","endsWith","substring","fieldname","_","indexOf","partition","isResponseLike","blob","isFileLike","lastModified","isBlobLike","size","text","arrayBuffer","toFile","URL","pathname","split","pop","bits","parts","isView","isAsyncIterableIterator","getOwnPropertyNames","map","p","propsForError","getBytes","getStringFromMaybeBuffer","filename","path","getName","x","isMultipartBody","multipartFormRequestOptions","createForm","Promise","all","entries","addFormValue","append","isUploadable","file","entry","prop","_AbstractPage_client","defaultParseResponse","props","debug","__streamClass","__binaryResponse","contentType","mediaType","trim","includes","json","_addRequestID","defineProperty","enumerable","APIPromise","responsePromise","parseResponse","resolve","_thenUnwrap","transform","asResponse","then","withResponse","parsedPromise","onfulfilled","onrejected","catch","onfinally","finally","APIClient","baseURL","maxRetries","timeout","httpAgent","overriddenFetch","validatePositiveInteger","authHeaders","defaultHeaders","Accept","getUserAgent","getPlatformHeaders","validateHeaders","customHeaders","defaultIdempotencyKey","uuid4","methodRequest","post","patch","put","method","request","DataView","getAPIList","Page","requestAPIList","calculateContentLength","byteLength","buildRequest","retryCount","query","__binaryRequest","contentLength","buildURL","minAgentTimeout","idempotencyHeader","idempotencyKey","req","buildHeaders","agent","signal","reqHeaders","applyHeadersMut","getHeader","prepareOptions","prepareRequest","parseHeaders","fromEntries","header","makeStatusError","remainingRetries","makeRequest","optionsInput","retriesRemaining","aborted","AbortController","fetchWithTimeout","retryRequest","responseHeaders","ok","shouldRetry","errText","errJSON","safeJSON","errMessage","PagePromise","isAbsoluteURL","defaultQuery","isEmptyObj","search","stringifyQuery","encodeURIComponent","ms","addEventListener","setTimeout","fetchOptions","clearTimeout","shouldRetryHeader","timeoutMillis","retryAfterMillisHeader","timeoutMs","parseFloat","Number","isNaN","retryAfterHeader","timeoutSeconds","now","calculateDefaultRetryTimeoutMillis","sleep","numRetries","Math","min","pow","random","AbstractPage","client","hasNextPage","getPaginatedItems","nextPageInfo","getNextPage","nextInfo","nextOptions","params","searchParams","iterPages","page","item","Proxy","target","toLowerCase","requestOptionsKeys","__metadata","isRequestOptions","every","k","hasOwn","normalizeArch","arch","normalizePlatform","platform","_platformHeaders","Deno","build","os","version","deno","EdgeRuntime","process","browserInfo","navigator","browserPatterns","pattern","match","exec","userAgent","browser","getBrowserInfo","getPlatformProperties","startsWithSchemeRegexp","test","n","isInteger","readEnv","env","_k","targetHeaders","newHeaders","lowerKey","SENSITIVE_HEADERS","action","args","modifiedArgs","arg","modifiedArg","log","r","lowerCasedHeader","isHeadersProtocol","intercapsHeader","_m","g1","g2","warn","isObj","APIResource","_client","Completions","create","Messages","list","completionId","ChatCompletionStoreMessagesPage","nextPageParams","CursorPage","has_more","info","id","after","arguments","messages","retrieve","update","ChatCompletionsPage","del","delete","Chat","completions","Embeddings","Files","fileId","FileObjectsPage","content","retrieveContent","waitForProcessing","pollInterval","maxWait","TERMINAL_STATES","Images","createVariation","edit","Speech","Transcriptions","model","Translations","Audio","transcriptions","translations","speech","Moderations","Models","ModelsPage","Checkpoints","fineTuningJobId","FineTuningJobCheckpointsPage","Jobs","checkpoints","FineTuningJobsPage","listEvents","FineTuningJobEventsPage","FineTuning","jobs","vectorStoreId","VectorStoreFilesPage","createAndPoll","poll","pollIntervalMs","fileResponse","sleepInterval","headerInterval","headerIntervalMs","upload","fileInfo","files","purpose","file_id","uploadAndPoll","FileContentResponsesPage","FileBatches","batchId","batch","listFiles","fileIds","configuredConcurrency","maxConcurrency","concurrencyLimit","fileIterator","allFileIds","workers","fill","fileObj","promises","results","allSettled","rejected","reason","allSettledWithThrow","file_ids","VectorStores","fileBatches","VectorStoresPage","VectorStoreSearchResponsesPage","Assistants","assistantId","AssistantsPage","isRunnableFunctionWithParse","isAssistantMessage","role","isFunctionMessage","isToolMessage","_EventStream_instances","_EventStream_connectedPromise","_EventStream_resolveConnectedPromise","_EventStream_rejectConnectedPromise","_EventStream_endPromise","_EventStream_resolveEndPromise","_EventStream_rejectEndPromise","_EventStream_listeners","_EventStream_ended","_EventStream_errored","_EventStream_aborted","_EventStream_catchingPromiseCreated","_EventStream_handleError","EventStream","add","reject","_run","executor","_emitFinal","_emit","bind","_connected","ended","errored","on","listener","off","listeners","findIndex","l","splice","once","emitted","forEach","isAutoParsableResponseFormat","response_format","isAutoParsableTool","tool","parseChatCompletion","completion","choices","choice","finish_reason","tool_calls","toolCall","inputTool","tools","find","function","parsed_arguments","$parseRaw","strict","parseToolCall","parsed","refusal","parseResponseFormat","shouldParseToolCall","hasAutoParseableInput","some","t","WeakSet","openAIError","_AbstractChatCompletionRunner_instances","_AbstractChatCompletionRunner_getFinalContent","_AbstractChatCompletionRunner_getFinalMessage","_AbstractChatCompletionRunner_getFinalFunctionCall","_AbstractChatCompletionRunner_getFinalFunctionCallResult","_AbstractChatCompletionRunner_calculateTotalUsage","_AbstractChatCompletionRunner_validateParams","_AbstractChatCompletionRunner_stringifyFunctionCallResult","DEFAULT_MAX_CHAT_COMPLETIONS","AbstractChatCompletionRunner","_chatCompletions","_addChatCompletion","chatCompletion","_addMessage","emit","function_call","tool_call","finalChatCompletion","finalContent","finalMessage","finalFunctionCall","finalFunctionCallResult","totalUsage","allChatCompletions","usage","_createChatCompletion","chat","_runChatCompletion","_runFunctions","restParams","singleFunctionToCall","maxChatCompletions","functionsByName","functions","parameters","description","rawContent","_runTools","tool_choice","inputTools","$callback","tool_call_id","rest","ret","at","y","total","completion_tokens","prompt_tokens","total_tokens","ChatCompletionRunner","runFunctions","runner","runTools","PartialJSON","MalformedJSON","partialParse","input","jsonString","allowPartial","ATOM","allow","markPartialJSON","throwMalformedError","parseAny","skipBlank","parseStr","parseObj","parseArr","Infinity","NaN","parseNum","lastIndexOf","writable","configurable","_parseJSON","parseJSON","Allow","_ChatCompletionStream_instances","_ChatCompletionStream_params","_ChatCompletionStream_choiceEventStates","_ChatCompletionStream_currentChatCompletionSnapshot","_ChatCompletionStream_beginRequest","_ChatCompletionStream_getChoiceEventState","_ChatCompletionStream_addChunk","_ChatCompletionStream_emitToolCallDoneEvent","_ChatCompletionStream_emitContentDoneEvents","_ChatCompletionStream_endRequest","_ChatCompletionStream_getAutoParseableResponseFormat","_ChatCompletionStream_accumulateChatCompletion","ChatCompletionStream","currentChatCompletionSnapshot","_fromReadableStream","createChatCompletion","chatId","content_done","refusal_done","logprobs_content_done","logprobs_refusal_done","done_tool_calls","current_tool_call_index","choiceSnapshot","delta","snapshot","logprobs","toolCallDelta","toolCallSnapshot","arguments_delta","toolCallIndex","responseFormat","created","system_fingerprint","choiceRest","messageRest","toolRest","fnRest","maybeParseChatCompletion","finalizeChatCompletion","_a","_b","_c","_d","assign","other","pushQueue","readQueue","ChatCompletionStreamingRunner","validateInputTools","Sessions","TranscriptionSessions","Realtime","sessions","transcriptionSessions","_AssistantStream_instances","_AssistantStream_events","_AssistantStream_runStepSnapshots","_AssistantStream_messageSnapshots","_AssistantStream_messageSnapshot","_AssistantStream_finalRun","_AssistantStream_currentContentIndex","_AssistantStream_currentContent","_AssistantStream_currentToolCallIndex","_AssistantStream_currentToolCall","_AssistantStream_currentEvent","_AssistantStream_currentRunSnapshot","_AssistantStream_currentRunStepSnapshot","_AssistantStream_addEvent","_AssistantStream_endRequest","_AssistantStream_handleMessage","_AssistantStream_handleRunStep","_AssistantStream_handleEvent","_AssistantStream_accumulateRunStep","_AssistantStream_accumulateMessage","_AssistantStream_accumulateContent","_AssistantStream_handleRun","AssistantStream","_addRun","createToolAssistantStream","threadId","runId","runs","_runToolAssistantStream","_createToolAssistantStream","run","submitToolOutputs","createThreadAssistantStream","thread","_threadAssistantStream","createAssistantStream","_runAssistantStream","currentEvent","currentRun","currentMessageSnapshot","currentRunStepSnapshot","finalRunSteps","finalMessages","finalRun","_createThreadAssistantStream","createAndRun","_createAssistantStream","accumulateDelta","acc","deltaValue","accValue","deltaEntry","accEntry","accumulatedMessage","newContent","snapshotContent","textDelta","image_file","currentContent","accumulatedRunStep","step_details","accumulated","contentElement","messageId","MessagesPage","Steps","stepId","RunStepsPage","Runs","steps","include","RunsPage","createAndStream","beta","threads","submitToolOutputsAndPoll","submitToolOutputsStream","Threads","createAndRunPoll","thread_id","createAndRunStream","Beta","realtime","assistants","Batches","BatchesPage","Parts","uploadId","Uploads","complete","output","parseTextFormat","getOwnPropertyDescriptor","addOutputText","text_format","input_tools","rsp","texts","output_text","InputItems","responseId","ResponseItemsPage","_ResponseStream_instances","_ResponseStream_params","_ResponseStream_currentResponseSnapshot","_ResponseStream_finalResponse","_ResponseStream_beginRequest","_ResponseStream_addEvent","_ResponseStream_endRequest","_ResponseStream_accumulateResponse","ResponseStream","createResponse","_createResponse","responses","output_index","content_index","parsedResponse","output_parsed","maybeParseResponse","finalizeResponse","part","finalResponse","Responses","inputItems","OpenAI","apiKey","organization","project","dangerouslyAllowBrowser","window","document","embeddings","images","audio","moderations","models","fineTuning","vectorStores","batches","uploads","_options","Authorization","normalize_stringify_options","joined","DEFAULT_TIMEOUT","OpenAIError","regexsearch","regex","matches","RegExp","genai","system_prompt","hint_text","max_tokens","temperature","aimodel","localStorage","getItem","aibaseurl","aiapikey","stop","max_completion_tokens","CustomFunctions","associate","strings","s","reg","extract"],"sourceRoot":""}